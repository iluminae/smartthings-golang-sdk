openapi: 3.0.1
info:
  description: |
    # Overview

    This is the reference documentation for the SmartThings API.

    The SmartThings API supports [REST](https://en.wikipedia.org/wiki/Representational_state_transfer), resources are protected with [OAuth 2.0 Bearer Tokens](https://tools.ietf.org/html/rfc6750#section-2.1), and all responses are sent as [JSON](http://www.json.org/).

    # Authentication

    All SmartThings resources are protected with [OAuth 2.0 Bearer Tokens](https://tools.ietf.org/html/rfc6750#section-2.1) sent on the request as an `Authorization: Bearer <TOKEN>` header, and operations require specific OAuth scopes that specify the exact permissions authorized by the user.

    ## Token types

    There are two types of tokens: SmartApp tokens, and personal access tokens.

    SmartApp tokens are used to communicate between third-party integrations, or SmartApps, and the SmartThings API.
    When a SmartApp is called by the SmartThings platform, it is sent an authorization token that can be used to interact with the SmartThings API.

    Personal access tokens are used to interact with the API for non-SmartApp use cases. They can be created and managed on the [personal access tokens page](https://account.smartthings.com/tokens).

    ## OAuth2 scopes

    Operations may be protected by one or more OAuth security schemes, which specify the required permissions.
    Each scope for a given scheme is required.
    If multiple schemes are specified (not common), you may use either scheme.

    SmartApp token scopes are derived from the permissions requested by the SmartApp and granted by the end-user during installation.
    Personal access token scopes are associated with the specific permissions authorized when creating them.

    Scopes are generally in the form `permission:entity-type:entity-id`.

    **An `*` used for the `entity-id` specifies that the permission may be applied to all entities that the token type has access to, or may be replaced with a specific ID.**

    For more information about authrization and permissions, please see the [Authorization and permissions guide](https://smartthings.developer.samsung.com/develop/guides/smartapps/auth-and-permissions.html).

    <!-- ReDoc-Inject: <security-definitions> -->

    # Errors

    The SmartThings API uses conventional HTTP response codes to indicate the success or failure of a request.
    In general, a `2XX` response code indicates success, a `4XX` response code indicates an error given the inputs for the request, and a `5XX` response code indicates a failure on the SmartThings platform.

    API errors will contain a JSON response body with more information about the error:

    ```json
    {
      "requestId": "031fec1a-f19f-470a-a7da-710569082846"
      "error": {
        "code": "ConstraintViolationError",
        "message": "Validation errors occurred while process your request.",
        "details": [
          { "code": "PatternError", "target": "latitude", "message": "Invalid format." },
          { "code": "SizeError", "target": "name", "message": "Too small." },
          { "code": "SizeError", "target": "description", "message": "Too big." }
        ]
      }
    }
    ```

    ## Error Response Body

    The error response attributes are:

    | Property | Type | Required | Description |
    | --- | --- | --- | --- |
    | requestId | String | No | A request identifier that can be used to correlate an error to additional logging on the SmartThings servers.
    | error | Error | **Yes** | The Error object, documented below.

    ## Error Object

    The Error object contains the following attributes:

    | Property | Type | Required | Description |
    | --- | --- | --- | --- |
    | code | String | **Yes** | A SmartThings-defined error code that serves as a more specific indicator of the error than the HTTP error code specified in the response. See [SmartThings Error Codes](#section/Errors/SmartThings-Error-Codes) for more information.
    | message | String | **Yes** | A description of the error, intended to aid developers in debugging of error responses.
    | target | String | No | The target of the particular error. For example, it could be the name of the property that caused the error.
    | details | Error[] | No | An array of Error objects that typically represent distinct, related errors that occurred during the request. As an optional attribute, this may be null or an empty array.

    ## Standard HTTP Error Codes

    The following table lists the most common HTTP error response:

    | Code | Name | Description |
    | --- | --- | --- |
    | 400 | Bad Request | The client has issued an invalid request. This is commonly used to specify validation errors in a request payload.
    | 401 | Unauthorized | Authorization for the API is required, but the request has not been authenticated.
    | 403 | Forbidden | The request has been authenticated but does not have appropriate permissions, or a requested resource is not found.
    | 404 | Not Found | Specifies the requested path does not exist.
    | 406 | Not Acceptable | The client has requested a MIME type via the Accept header for a value not supported by the server.
    | 415 | Unsupported Media Type | The client has defined a contentType header that is not supported by the server.
    | 422 | Unprocessable Entity | The client has made a valid request, but the server cannot process it. This is often used for APIs for which certain limits have been exceeded.
    | 429 | Too Many Requests | The client has exceeded the number of requests allowed for a given time window.
    | 500 | Internal Server Error | An unexpected error on the SmartThings servers has occurred. These errors should be rare.
    | 501 | Not Implemented | The client request was valid and understood by the server, but the requested feature has yet to be implemented. These errors should be rare.

    ## SmartThings Error Codes

    SmartThings specifies several standard custom error codes.
    These provide more information than the standard HTTP error response codes.
    The following table lists the standard SmartThings error codes and their description:

    | Code | Typical HTTP Status Codes | Description |
    | --- | --- | --- |
    | PatternError | 400, 422 | The client has provided input that does not match the expected pattern.
    | ConstraintViolationError | 422 | The client has provided input that has violated one or more constraints.
    | NotNullError | 422 | The client has provided a null input for a field that is required to be non-null.
    | NullError | 422 | The client has provided an input for a field that is required to be null.
    | NotEmptyError | 422 | The client has provided an empty input for a field that is required to be non-empty.
    | SizeError | 400, 422 | The client has provided a value that does not meet size restrictions.
    | Unexpected Error | 500 | A non-recoverable error condition has occurred. Indicates a problem occurred on the SmartThings server that is no fault of the client.
    | UnprocessableEntityError | 422 | The client has sent a malformed request body.
    | TooManyRequestError | 429 | The client issued too many requests too quickly.
    | LimitError | 422 | The client has exceeded certain limits an API enforces.
    | UnsupportedOperationError | 400, 422 | The client has issued a request to a feature that currently isn't supported by the SmartThings platform. These should be rare.

    ## Custom Error Codes

    An API may define its own error codes where appropriate.
    These custom error codes are documented as part of that specific API's documentation.

    # Warnings
    The SmartThings API issues warning messages via standard HTTP Warning headers. These messages do not represent a request failure, but provide additional information that the requester might want to act upon.
    For instance a warning will be issued if you are using an old API version.

    # API Versions

    The SmartThings API supports both path and header-based versioning.
    The following are equivalent:

    - https://api.smartthings.com/v1/locations
    - https://api.smartthings.com/locations with header `Accept: application/vnd.smartthings+json;v=1`

    Currently, only version 1 is available.

    # Paging

    Operations that return a list of objects return a paginated response.
    The `_links` object contains the items returned, and links to the next and previous result page, if applicable.

    ```json
    {
      "items": [
        {
          "locationId": "6b3d1909-1e1c-43ec-adc2-5f941de4fbf9",
          "name": "Home"
        },
        {
          "locationId": "6b3d1909-1e1c-43ec-adc2-5f94d6g4fbf9",
          "name": "Work"
        }
        ....
      ],
      "_links": {
        "next": {
          "href": "https://api.smartthings.com/v1/locations?page=3"
        },
        "previous": {
          "href": "https://api.smartthings.com/v1/locations?page=1"
        }
      }
    }
    ```

    # Localization

    Some SmartThings API's support localization.
    Specific information regarding localization endpoints are documented in the API itself.
    However, the following should apply to all endpoints that support localization.

    ## Fallback Patterns

    When making a request with the `Accept-Language` header, this fallback pattern is observed.
    * Response will be translated with exact locale tag.
    * If a translation does not exist for the requested language and region, the translation for the language will be returned.
    * If a translation does not exist for the language, English (en) will be returned.
    * Finally, an untranslated response will be returned in the absense of the above translations.

    ## Accept-Language Header
    The format of the `Accept-Language` header follows what is defined in [RFC 7231, section 5.3.5](https://tools.ietf.org/html/rfc7231#section-5.3.5)

    ## Content-Language
    The `Content-Language` header should be set on the response from the server to indicate which translation was given back to the client.
    The absense of the header indicates that the server did not recieve a request with the `Accept-Language` header set.
  title: SmartThings API
  version: 1.0-PREVIEW
servers:
- url: https://api.smartthings.com/v1/
tags:
- description: |
    In the SmartThings platform, the primary unit of organization of devices within a user account is the Location. The Locations API provides clients the ability work with these Locations.
  name: locations
- description: |
    A Room can be thought of as a subset of a Location, a way to further organize devices within the Location.
  name: rooms
- description: |
    The devices API is used to access metadata about devices, access the state of devices, and control them.
  name: devices
- description: |
    Device profiles describe the components, capabilities, and categories of a type of device. Profiles are shared by
    instances of a type of device.
  name: deviceprofiles
- description: |
    Most SmartThings integrations are represented as SmartApps, or "Apps". A SmartApp is created and maintained by a developer or partner
    community. At this time, Apps may only be installed into the same account that created it.
  name: apps
- description: |
    Most SmartThings integrations are represented as SmartApps, or "Apps". An App is created and maintained by a developer or partner
    community. At this time, Apps may only be installed into the same account that created it. Installation
    involves an OAuth process that allows a user to accept any requested permissions. After authorization, an Installed
    App is created. The Installed App API allows clients to work with the various integrations created in a user's
    account.
  name: installedapps
- description: |
    Subscriptions allow integrations like "Apps" to be notified when events occur.
  name: subscriptions
- description: |
    Schedules allow integrations like "Apps" to be triggered at fixed or recurring times.
    The schedules API allows for functionality like setting timeouts in response to other events or
    actuating a device at a particular time of day.
  name: schedules
- description: |
    The Rules API enable users to create automations allowing devices to work together.
  name: rules
paths:
  /devices:
    get:
      description: Get a list of devices.
      operationId: getDevices
      parameters:
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      - description: |
          The device capabilities to filter the results by.
          The capabilities are treated as an "and" so all capabilities must be present.
        explode: true
        in: query
        name: capability
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |
          The device locations to filter the results by.
        explode: true
        in: query
        name: locationId
        schema:
          items:
            format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
            type: string
          type: array
        style: form
      - description: |
          The device ids to filter the results by.
        explode: true
        in: query
        name: deviceId
        schema:
          items:
            format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
            type: string
          type: array
        style: form
      - description: |
          Treat all capability filter query params as a logical "or" or "and" with a default of "and".
        in: query
        name: capabilitiesMode
        schema:
          default: and
          enum:
          - or
          - and
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedDevices'
          description: A list of devices.
        "400":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: BadRequestError
                  message: The request is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "429":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        default:
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnexpectedError
                  message: A non-recoverable error condition occurred.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      security:
      - Bearer:
        - l:devices
      - Bearer:
        - r:devices:*
      summary: List devices.
      tags:
      - devices
    post:
      description: |
        Install a device. This is only available for SmartApp managed devices.
        The SmartApp that creates the device is responsible for handling commands for the device and
        updating the status of the device by creating events.
      operationId: installDevice
      parameters:
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DeviceInstallRequest'
        description: Installation Request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: Device Installed.
        "400":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: BadRequestError
                  message: The request is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "422":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnprocessableEntityError
                  message: The request body is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unprocessable Entity
        "429":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        default:
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnexpectedError
                  message: A non-recoverable error condition occurred.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      security:
      - Bearer:
        - i:deviceprofiles
      summary: Install a Device.
      tags:
      - devices
      x-codegen-request-body-name: InstallationRequest
  /devices/{deviceId}:
    delete:
      description: |
        Delete a device by device id.
        If the token is for a SmartApp that created the device then it implicitly has permission for this api.
      operationId: deleteDevice
      parameters:
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      - description: the device ID
        in: path
        name: deviceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDeviceCommandsResponse'
          description: Device deleted.
        "400":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: BadRequestError
                  message: The request is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "429":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        default:
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnexpectedError
                  message: A non-recoverable error condition occurred.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      security:
      - Bearer:
        - w:devices:*
      summary: Delete a Device.
      tags:
      - devices
    get:
      description: Get a device's description.
      operationId: getDevice
      parameters:
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      - description: the device ID
        in: path
        name: deviceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: A Device
        "400":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: BadRequestError
                  message: The request is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "429":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        default:
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnexpectedError
                  message: A non-recoverable error condition occurred.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      security:
      - Bearer:
        - r:devices:*
      summary: Get a device's description.
      tags:
      - devices
    put:
      description: |
        Update the properties of a device.
        If the token is for a SmartApp that created the device then it implicitly has permission for this api.
      operationId: updateDevice
      parameters:
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      - description: the device ID
        in: path
        name: deviceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UpdateDeviceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
          description: Updated Device.
        "400":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: BadRequestError
                  message: The request is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "422":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnprocessableEntityError
                  message: The request body is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unprocessable Entity
        "429":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        default:
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnexpectedError
                  message: A non-recoverable error condition occurred.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      security:
      - Bearer:
        - w:devices:*
      summary: Update a device.
      tags:
      - devices
      x-codegen-request-body-name: updateDeviceRequest
  /devices/{deviceId}/commands:
    post:
      description: Execute commands on a device.
      operationId: executeDeviceCommands
      parameters:
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      - description: the device ID
        in: path
        name: deviceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DeviceCommandsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDeviceCommandsResponse'
          description: Created commands.
        "400":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: BadRequestError
                  message: The request is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "422":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnprocessableEntityError
                  message: The request body is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unprocessable Entity
        "429":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        default:
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnexpectedError
                  message: A non-recoverable error condition occurred.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      security:
      - Bearer:
        - x:devices:*
      summary: Execute commands on device.
      tags:
      - devices
      x-codegen-request-body-name: executeCapabilityCommand
  /devices/{deviceId}/events:
    post:
      description: |
        Create events for a device. When a device is managed by a SmartApp then it is responsible for creating events
        to update the attributes of the device in the SmartThings platform.
        The token must be for a SmartApp and it must be the SmartApp that created the Device.
      operationId: createDeviceEvents
      parameters:
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      - description: the device ID
        in: path
        name: deviceId
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DeviceEventsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDeviceEventsResponse'
          description: Created events.
        "400":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: BadRequestError
                  message: The request is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "422":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnprocessableEntityError
                  message: The request body is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unprocessable Entity
        "429":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        default:
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnexpectedError
                  message: A non-recoverable error condition occurred.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      security:
      - Bearer:
        - w:devices:*
      summary: Create Device Events.
      tags:
      - devices
      x-codegen-request-body-name: deviceEventRequest
  /devices/{deviceId}/status:
    get:
      description: |
        Get the current status of all of a device's component's attributes.
        The results may be filtered if the requester only has permission to
        view a subset of the device's components or capabilities.
        If the token is for a SmartApp that created the device then it implicitly has permission for this api.
      operationId: getDeviceStatus
      parameters:
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      - description: the device ID
        in: path
        name: deviceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceStatus'
          description: successful return of current status of device attributes
        "400":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: BadRequestError
                  message: The request is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "429":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        default:
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnexpectedError
                  message: A non-recoverable error condition occurred.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      security:
      - Bearer:
        - r:devices:*
      summary: Get the full status of a device.
      tags:
      - devices
  /devices/{deviceId}/components/{componentId}/status:
    get:
      description: |
        Get the status of all attributes of a the component.
        The results may be filtered if the requester only has permission to view a subset of the component's capabilities.
        If the token is for a SmartApp that created the device then it implicitly has permission for this api.
      operationId: getDeviceComponentStatus
      parameters:
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      - description: the device ID
        in: path
        name: deviceId
        required: true
        schema:
          type: string
      - description: The name of the component.
        in: path
        name: componentId
        required: true
        schema:
          format: ^[-_!.~'()*0-9a-zA-Z]{1,36}$
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComponentStatus'
          description: Successful return  current status of device component's attributes.
        "400":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: BadRequestError
                  message: The request is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "429":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        default:
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnexpectedError
                  message: A non-recoverable error condition occurred.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      security:
      - Bearer:
        - r:devices:*
      summary: Get a device component's status.
      tags:
      - devices
  /devices/{deviceId}/components/{componentId}/capabilities/{capabilityId}/status:
    get:
      description: |
        Get the current status of a device component's capability.
        If the token is for a SmartApp that created the device then it implicitly has permission for this api.
      operationId: getDeviceStatusByCapability
      parameters:
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      - description: the device ID
        in: path
        name: deviceId
        required: true
        schema:
          type: string
      - description: The name of the component.
        in: path
        name: componentId
        required: true
        schema:
          format: ^[-_!.~'()*0-9a-zA-Z]{1,36}$
          type: string
      - description: The ID of the capability
        in: path
        name: capabilityId
        required: true
        schema:
          pattern: ^[[a-z]*([A-Z][a-z]*)*]{1,36}$
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapabilityStatus'
          description: Successful return of current status of the attributes of a
            device component's capability
        "400":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: BadRequestError
                  message: The request is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "429":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        default:
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnexpectedError
                  message: A non-recoverable error condition occurred.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      security:
      - Bearer:
        - r:devices:*
      summary: Get a capability's status.
      tags:
      - devices
  /deviceprofiles:
    get:
      description: List device profiles.
      operationId: listDeviceProfiles
      parameters:
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      - description: |
          The device profiles IDs to filter the results by.
        explode: true
        in: query
        name: profileId
        schema:
          items:
            format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedDeviceProfiles'
          description: A list of the users device profiles.
        "400":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: BadRequestError
                  message: The request is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "429":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        default:
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnexpectedError
                  message: A non-recoverable error condition occurred.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      security:
      - Bearer:
        - r:deviceprofiles
      summary: List all device profiles for the authenticated user
      tags:
      - deviceprofiles
    post:
      description: Create a device profile.
      operationId: createDeviceProfile
      parameters:
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CreateDeviceProfileRequest'
        description: The device profile to be created.
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceProfile'
          description: The device profile.
        "400":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: BadRequestError
                  message: The request is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "429":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        default:
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnexpectedError
                  message: A non-recoverable error condition occurred.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      security:
      - Bearer:
        - w:deviceprofiles
      summary: Create a device profile
      tags:
      - deviceprofiles
      x-codegen-request-body-name: request
  /deviceprofiles/{deviceProfileId}:
    delete:
      description: Delete a device profile by ID. Admin use only.
      operationId: deleteDeviceProfile
      parameters:
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      - description: the device profile ID
        in: path
        name: deviceProfileId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDeviceProfileResponse'
          description: Device profile deleted.
        "400":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: BadRequestError
                  message: The request is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "429":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        default:
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnexpectedError
                  message: A non-recoverable error condition occurred.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      security:
      - Bearer:
        - w:deviceprofiles
      summary: Delete a device profile
      tags:
      - deviceprofiles
    get:
      description: GET a device profile.
      operationId: getDeviceProfile
      parameters:
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      - description: the device profile ID
        in: path
        name: deviceProfileId
        required: true
        schema:
          type: string
      - description: Language header representing the client's preferred language.
          The format of the `Accept-Language` header follows what is defined in [RFC
          7231, section 5.3.5](https://tools.ietf.org/html/rfc7231#section-5.3.5)
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceProfile'
          description: A Device Profile
          headers:
            Content-Language:
              description: This header field describes the natural language(s) of
                the intended audience for the representation. This can have multiple
                values as per [RFC 7231, section 3.1.3.2](https://tools.ietf.org/html/rfc7231#section-3.1.3.2)
              schema:
                type: string
        "400":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: BadRequestError
                  message: The request is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "429":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        default:
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnexpectedError
                  message: A non-recoverable error condition occurred.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      security:
      - Bearer:
        - r:deviceprofiles
      summary: GET a device profile
      tags:
      - deviceprofiles
    put:
      description: Update a device profile. The device profile has to be in development
        status
      operationId: updateDeviceProfile
      parameters:
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      - description: the device profile ID
        in: path
        name: deviceProfileId
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UpdateDeviceProfileRequest'
        description: The device profile to be updated.
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceProfile'
          description: The device profile
        "400":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: BadRequestError
                  message: The request is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "429":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        default:
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnexpectedError
                  message: A non-recoverable error condition occurred.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      security:
      - Bearer:
        - w:deviceprofiles
      summary: Update a device profile.
      tags:
      - deviceprofiles
      x-codegen-request-body-name: request
  /deviceprofiles/{deviceProfileId}/i18n: {}
  /deviceprofiles/{deviceProfileId}/i18n/{locale}: {}
  /locations:
    get:
      description: List all Locations currently available in a user account.
      operationId: listLocations
      parameters:
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedLocations'
          description: An array of Locations
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "429":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        default:
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnexpectedError
                  message: A non-recoverable error condition occurred.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      security:
      - Bearer:
        - r:locations:*
        - l:locations
      summary: List Locations.
      tags:
      - locations
    post:
      description: |
        Create a Location for a user. We will try and create the Location geographically close to the country code provided in the request body. If we do not support Location creation in the requested country code, then the API will return a 422 error response with an error code of UnsupportedGeoRegionError.
      operationId: createLocation
      parameters:
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CreateLocationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
          description: Created successfully.
        "400":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: BadRequestError
                  message: The request is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "422":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnprocessableEntityError
                  message: The request body is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unprocessable Entity
        "429":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        default:
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnexpectedError
                  message: A non-recoverable error condition occurred.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      security:
      - Bearer:
        - w:locations:*
      summary: Create a Location.
      tags:
      - locations
      x-codegen-request-body-name: createLocationRequest
  /locations/{locationId}:
    delete:
      description: Delete a Location from a user's account.
      operationId: deleteLocation
      parameters:
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      - description: The ID of the location.
        in: path
        name: locationId
        required: true
        schema:
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteLocationResponse'
          description: An empty object response.
        "400":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: BadRequestError
                  message: The request is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "429":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        default:
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnexpectedError
                  message: A non-recoverable error condition occurred.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      security:
      - Bearer:
        - w:locations:*
      summary: Delete a Location.
      tags:
      - locations
    get:
      description: Get a specific Location from a user's account.
      operationId: getLocation
      parameters:
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      - description: The ID of the location.
        in: path
        name: locationId
        required: true
        schema:
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
          description: A Location.
        "400":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: BadRequestError
                  message: The request is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "429":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        default:
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnexpectedError
                  message: A non-recoverable error condition occurred.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      security:
      - Bearer:
        - r:locations:*
      summary: Get a Location.
      tags:
      - locations
    put:
      description: All the fields in the request body are optional. Only the specified
        fields will be updated.
      operationId: updateLocation
      parameters:
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      - description: The ID of the location.
        in: path
        name: locationId
        required: true
        schema:
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UpdateLocationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
          description: A Location.
        "400":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: BadRequestError
                  message: The request is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "422":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnprocessableEntityError
                  message: The request body is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unprocessable Entity
        "429":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        default:
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnexpectedError
                  message: A non-recoverable error condition occurred.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      security:
      - Bearer:
        - w:locations:*
      summary: Update a Location.
      tags:
      - locations
      x-codegen-request-body-name: updateLocationRequest
  /locations/{locationId}/rooms:
    get:
      description: List all Rooms currently available in a Location.
      operationId: listRooms
      parameters:
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      - description: The ID of the location.
        in: path
        name: locationId
        required: true
        schema:
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedRooms'
          description: An array of Rooms
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "429":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        default:
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnexpectedError
                  message: A non-recoverable error condition occurred.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      security:
      - Bearer:
        - r:locations:*
      summary: List Rooms.
      tags:
      - rooms
    post:
      description: |
        Create a Room for the Location.
      operationId: createRoom
      parameters:
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      - description: The ID of the location.
        in: path
        name: locationId
        required: true
        schema:
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CreateRoomRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
          description: Created successfully.
        "400":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: BadRequestError
                  message: The request is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "422":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnprocessableEntityError
                  message: The request body is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unprocessable Entity
        "429":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        default:
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnexpectedError
                  message: A non-recoverable error condition occurred.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      security:
      - Bearer:
        - w:locations:*
      summary: Create a Room.
      tags:
      - rooms
      x-codegen-request-body-name: createRoomRequest
  /locations/{locationId}/rooms/{roomId}:
    delete:
      description: Delete a Room from a location.
      operationId: deleteRoom
      parameters:
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      - description: The ID of the location.
        in: path
        name: locationId
        required: true
        schema:
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
      - description: The ID of the room.
        in: path
        name: roomId
        required: true
        schema:
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRoomResponse'
          description: An empty object response.
        "400":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: BadRequestError
                  message: The request is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "429":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        default:
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnexpectedError
                  message: A non-recoverable error condition occurred.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      security:
      - Bearer:
        - w:locations:*
      summary: Delete a Room.
      tags:
      - rooms
    get:
      description: Get a specific Room.
      operationId: getRoom
      parameters:
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      - description: The ID of the location.
        in: path
        name: locationId
        required: true
        schema:
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
      - description: The ID of the room.
        in: path
        name: roomId
        required: true
        schema:
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
          description: A Room.
        "400":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: BadRequestError
                  message: The request is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "429":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        default:
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnexpectedError
                  message: A non-recoverable error condition occurred.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      security:
      - Bearer:
        - r:locations:*
      summary: Get a Room.
      tags:
      - rooms
    put:
      description: All the fields in the request body are optional. Only the specified
        fields will be updated.
      operationId: updateRoom
      parameters:
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      - description: The ID of the location.
        in: path
        name: locationId
        required: true
        schema:
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
      - description: The ID of the room.
        in: path
        name: roomId
        required: true
        schema:
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UpdateRoomRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
          description: A Room.
        "400":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: BadRequestError
                  message: The request is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "422":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnprocessableEntityError
                  message: The request body is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unprocessable Entity
        "429":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        default:
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnexpectedError
                  message: A non-recoverable error condition occurred.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      security:
      - Bearer:
        - w:locations:*
      summary: Update a Room.
      tags:
      - rooms
      x-codegen-request-body-name: updateRoomRequest
  /locations/{locationId}/modes: {}
  /locations/{locationId}/modes/{modeId}: {}
  /locations/{locationId}/modes/current: {}
  /installedapps:
    get:
      description: |
        List all installed applications within the specified locations. If no locations are provided, then list all
        installed apps accessible by the principle.
      operationId: listInstallations
      parameters:
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      - description: The ID of the location that both the installed smart app and
          source are associated with.
        in: query
        name: locationId
        schema:
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
      - description: State of the Installed App.
        in: query
        name: installedAppStatus
        schema:
          enum:
          - PENDING
          - AUTHORIZED
          - REVOKED
          - DISABLED
          type: string
      - description: Denotes the type of installed app.
        in: query
        name: installedAppType
        schema:
          enum:
          - LAMBDA_SMART_APP
          - WEBHOOK_SMART_APP
          type: string
      - description: |
          May be used to filter a resource by it's assigned user-tags.  Multiple tag query params are automatically joined with OR.

          Example usage in query string:
          ```
          ?tag:key_name=value1&tag:key_name=value2
          ```
        in: query
        name: tag
        schema:
          format: ^[a-zA-Z_]{1,64}$
          type: string
      - description: The ID of an App
        in: query
        name: appId
        schema:
          format: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
          type: string
      - description: The ID of the mode
        in: query
        name: modeId
        schema:
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
      - description: The ID of the device
        in: query
        name: deviceId
        schema:
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedInstalledApps'
          description: A paginated list of installed apps.
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "429":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        default:
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnexpectedError
                  message: A non-recoverable error condition occurred.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      security:
      - Bearer:
        - l:installedapps
      summary: List installed apps.
      tags:
      - installedapps
  /installedapps/me: {}
  /installedapps/{installedAppId}:
    delete:
      description: Delete an Installed App.
      operationId: deleteInstallation
      parameters:
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      - description: The ID of the installed application.
        in: path
        name: installedAppId
        required: true
        schema:
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteInstalledAppResponse'
          description: The number of installed apps deleted.
        "400":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: BadRequestError
                  message: The request is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "429":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        default:
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnexpectedError
                  message: A non-recoverable error condition occurred.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      security:
      - Bearer:
        - w:installedapps:*
      summary: Delete an installed app.
      tags:
      - installedapps
    get:
      description: Fetch a single installed application.
      operationId: getInstallation
      parameters:
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      - description: The ID of the installed application.
        in: path
        name: installedAppId
        required: true
        schema:
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstalledApp'
          description: An installed app.
        "400":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: BadRequestError
                  message: The request is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "429":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        default:
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnexpectedError
                  message: A non-recoverable error condition occurred.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      security:
      - Bearer:
        - r:installedapps:*
      summary: Get an installed app.
      tags:
      - installedapps
  /installedapps/{installedAppId}/configs:
    get:
      description: List all configurations potentially filtered by status for an installed
        app.
      operationId: listInstallationConfig
      parameters:
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      - description: The ID of the installed application.
        in: path
        name: installedAppId
        required: true
        schema:
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
      - description: Filter for configuration status.
        in: query
        name: configurationStatus
        schema:
          enum:
          - STAGED
          - DONE
          - AUTHORIZED
          - REVOKED
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedInstallConfigurations'
          description: An paginated list of install configuration.
        "400":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: BadRequestError
                  message: The request is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "429":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        default:
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnexpectedError
                  message: A non-recoverable error condition occurred.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      security:
      - Bearer:
        - r:installedapps:*
      summary: List an installed app's configurations.
      tags:
      - installedapps
  /installedapps/{installedAppId}/configs/{configurationId}:
    get:
      description: Fetch a detailed install configuration model containing actual
        config entries / values.
      operationId: getInstallationConfig
      parameters:
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      - description: The ID of the installed application.
        in: path
        name: installedAppId
        required: true
        schema:
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
      - description: The ID of the install configuration.
        in: path
        name: configurationId
        required: true
        schema:
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstallConfigurationDetail'
          description: An install configuration detail model.
        "400":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: BadRequestError
                  message: The request is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "429":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        default:
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnexpectedError
                  message: A non-recoverable error condition occurred.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      security:
      - Bearer:
        - r:installedapps:*
      summary: Get an installed app configuration.
      tags:
      - installedapps
  /installedapps/{installedAppId}/tags: {}
  /installedapps/{installedAppId}/events:
    post:
      description: |
        Create events for an installed app.  This API allows Apps to create events to trigger custom behavior in
        installed apps. Requires a SmartApp token.
      operationId: createInstalledAppEvents
      parameters:
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      - description: The ID of the installed application.
        in: path
        name: installedAppId
        required: true
        schema:
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CreateInstalledAppEventsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateInstalledAppEventsResponse'
          description: Created events.
        "400":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: BadRequestError
                  message: The request is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "422":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnprocessableEntityError
                  message: The request body is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unprocessable Entity
        "429":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        default:
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnexpectedError
                  message: A non-recoverable error condition occurred.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      security:
      - Bearer: []
      summary: Create Installed App events.
      tags:
      - installedapps
      x-codegen-request-body-name: createInstalledAppEventsRequest
  /installedapps/{installedAppId}/send-message: {}
  /rules:
    get:
      description: List of rules for the location for the given token principal
      operationId: listRules
      parameters:
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      - description: The ID of the location to list the rules for.
        in: query
        name: locationId
        required: true
        schema:
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
      - description: The max number of rules to fetch
        in: query
        name: max
        schema:
          type: integer
      - description: The start index of rules to fetch
        in: query
        name: offset
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedRules'
          description: A paginated list of rules.
        "400":
          content: {}
          description: Bad request
        "401":
          content: {}
          description: Not authenticated
        "403":
          content: {}
          description: Not authorized or not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - Bearer:
        - r:rules:*
      summary: Rules list
      tags:
      - rules
    post:
      description: Create a rule for the location and token principal
      operationId: createRule
      parameters:
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      - description: The ID of the location in which to create the rule in.
        in: query
        name: locationId
        required: true
        schema:
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleRequest'
        description: The rule to be created.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: The created rule
        "401":
          content: {}
          description: Not authenticated
        "403":
          content: {}
          description: Not authorized
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - Bearer:
        - w:rules:*
      summary: Create a rule
      tags:
      - rules
      x-codegen-request-body-name: request
  /rules/{ruleId}:
    delete:
      description: Delete a rule
      operationId: deleteRule
      parameters:
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      - description: The rule ID
        in: path
        name: ruleId
        required: true
        schema:
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
      - description: The ID of the location in which to delete the rule in.
        in: query
        name: locationId
        required: true
        schema:
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rule'
          description: Successfully deleted
        "401":
          content: {}
          description: Not authenticated
        "403":
          content: {}
          description: Not authorized or not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - Bearer:
        - w:rules:*
      summary: Delete a rule
      tags:
      - rules
    get:
      description: Get a rule
      operationId: getRule
      parameters:
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      - description: The rule ID
        in: path
        name: ruleId
        required: true
        schema:
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
      - description: The ID of the location to list the rules for.
        in: query
        name: locationId
        required: true
        schema:
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rule'
          description: The rule
        "401":
          content: {}
          description: Not authenticated
        "403":
          content: {}
          description: Not authorized or not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - Bearer:
        - r:rules:*
      summary: Get a Rule
      tags:
      - rules
    put:
      description: Update a rule
      operationId: updateRule
      parameters:
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      - description: The rule ID
        in: path
        name: ruleId
        required: true
        schema:
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
      - description: The ID of the location in which to update the rule in.
        in: query
        name: locationId
        required: true
        schema:
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleRequest'
        description: The rule to be updated.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rule'
          description: The rule
        "401":
          content: {}
          description: Not authenticated
        "403":
          content: {}
          description: Not authorized or not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - Bearer:
        - w:rules:*
      summary: Update a rule
      tags:
      - rules
      x-codegen-request-body-name: request
  /rules/execute/{ruleId}:
    post:
      description: Trigger Rule execution given a rule ID
      operationId: executeRule
      parameters:
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      - description: The rule ID
        in: path
        name: ruleId
        required: true
        schema:
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
      - description: The ID of the location that both the installed smart app and
          source are associated with.
        in: query
        name: locationId
        required: true
        schema:
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleExecutionResponse'
          description: Successfully Executed
        "401":
          content: {}
          description: Not authenticated
        "403":
          content: {}
          description: Not authorized or not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - Bearer:
        - x:rules:*
      summary: Execute a rule
      tags:
      - rules
  /installedapps/{installedAppId}/subscriptions:
    delete:
      description: |
        Delete all subscriptions for the installed app.
      operationId: deleteAllSubscriptions
      parameters:
      - description: The ID of the installed application.
        in: path
        name: installedAppId
        required: true
        schema:
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      - description: Limit deletion to subscriptions for a particular device.
        in: query
        name: deviceId
        schema:
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
      - description: Limit deletion to subscriptions for a particular mode or deletes
          parent if last mode
        in: query
        name: modeId
        schema:
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionDelete'
          description: Successfully deleted
        "400":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: BadRequestError
                  message: The request is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "429":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        default:
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnexpectedError
                  message: A non-recoverable error condition occurred.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      summary: Delete all of an installed app's subscriptions.
      tags:
      - subscriptions
    get:
      description: |
        List the subscriptions for the installed app.
      operationId: listSubscriptions
      parameters:
      - description: The ID of the installed application.
        in: path
        name: installedAppId
        required: true
        schema:
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedSubscriptions'
          description: An array of subscriptions
        "400":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: BadRequestError
                  message: The request is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "429":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        default:
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnexpectedError
                  message: A non-recoverable error condition occurred.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      summary: List an installed app's subscriptions.
      tags:
      - subscriptions
    post:
      description: |
        Create a subscription to a type of event from the specified source.
        Both the source and the installed app must be in the location specified
        and the installed app must have read access to the event being subscribed to. An installed app is only permitted
        to created 20 subscriptions.

        ### Authorization scopes
        For installed app principal:
        * installed app id matches the incoming request installed app id location must match the installed app location

        | Subscription Type  | Scope required                                                                         |
        | ------------------ | ---------------------------------------------------------------------------------------|
        | DEVICE             | `r:devices:$deviceId`                                                                  |
        | CAPABILITY         | `r:devices:*:*:$capability` or `r:devices:*`,                                          |
        | MODE               | `r:locations:$locationId` or `r:locations:*`                                           |
        | DEVICE_LIFECYCLE   | `r:devices:$deviceId` or `r:devices:*`                                                 |
        | DEVICE_HEALTH      | `r:devices:$deviceId` or `r:devices:*`                                                 |
        | SECURITY_ARM_STATE | `r:security:locations:$locationId:armstate` or `r:security:locations:*:armstate`       |
        | HUB_HEALTH         | `r:hubs`                                                                               |
        | SCENE_LIFECYCLE    | `r:scenes:*`                                                                           |
      operationId: saveSubscription
      parameters:
      - description: The ID of the installed application.
        in: path
        name: installedAppId
        required: true
        schema:
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionRequest'
        description: The Subscription to be created.
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: The subscription
        "400":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: BadRequestError
                  message: The request is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "409":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: ConflictError
                  message: A conflict occured that prevented action.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        "422":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnprocessableEntityError
                  message: The request body is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unprocessable Entity
        "429":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        default:
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnexpectedError
                  message: A non-recoverable error condition occurred.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      security:
      - Bearer:
        - r:devices:*
      - Bearer:
        - r:locations:*
      - Bearer:
        - r:security:locations:*:armstate
      - Bearer:
        - r:hubs
      - Bearer:
        - r:scenes:*
      summary: Create a subscription for an installed app.
      tags:
      - subscriptions
      x-codegen-request-body-name: request
  /installedapps/{installedAppId}/subscriptions/{subscriptionId}:
    delete:
      description: |
        Delete a specific subscription for the installed app.
      operationId: deleteSubscription
      parameters:
      - description: The ID of the installed application.
        in: path
        name: installedAppId
        required: true
        schema:
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
      - description: The ID of the subscription
        in: path
        name: subscriptionId
        required: true
        schema:
          format: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
          type: string
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionDelete'
          description: Successfully deleted
        "400":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: BadRequestError
                  message: The request is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "429":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        default:
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnexpectedError
                  message: A non-recoverable error condition occurred.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      summary: Delete an installed app's subscription.
      tags:
      - subscriptions
    get:
      description: |
        Get a specific subscription for the installed app.
      operationId: getSubscription
      parameters:
      - description: The ID of the installed application.
        in: path
        name: installedAppId
        required: true
        schema:
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
      - description: The ID of the subscription
        in: path
        name: subscriptionId
        required: true
        schema:
          format: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
          type: string
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: The subscription
        "400":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: BadRequestError
                  message: The request is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "429":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        default:
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnexpectedError
                  message: A non-recoverable error condition occurred.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      summary: Get an installed app's subscription.
      tags:
      - subscriptions
  /installedapps/{installedAppId}/schedules:
    delete:
      description: |
        Delete all schedules for the installed app.
      operationId: deleteSchedules
      parameters:
      - description: The ID of the installed application.
        in: path
        name: installedAppId
        required: true
        schema:
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteScheduleResponse'
          description: Successfully deleted
        "400":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: BadRequestError
                  message: The request is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "429":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        default:
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnexpectedError
                  message: A non-recoverable error condition occurred.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      security:
      - Bearer:
        - w:schedules
      summary: Delete all of an installed app's schedules.
      tags:
      - schedules
    get:
      description: |
        List the schedules for the installed app.
      operationId: getSchedules
      parameters:
      - description: The ID of the installed application.
        in: path
        name: installedAppId
        required: true
        schema:
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedSchedules'
          description: A paged schedules list
        "400":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: BadRequestError
                  message: The request is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "429":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        default:
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnexpectedError
                  message: A non-recoverable error condition occurred.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      security:
      - Bearer:
        - r:schedules
      summary: List installed app schedules.
      tags:
      - schedules
    post:
      description: |
        Create a schedule for an installed app. The installed app must be in the location specified and the installed app must have permission to create schedules.
      operationId: createSchedule
      parameters:
      - description: The ID of the installed application.
        in: path
        name: installedAppId
        required: true
        schema:
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleRequest'
        description: The schedule to be created.
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: The created schedule.
        "400":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: BadRequestError
                  message: The request is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "422":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnprocessableEntityError
                  message: The request body is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unprocessable Entity
        "429":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        default:
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnexpectedError
                  message: A non-recoverable error condition occurred.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      security:
      - Bearer:
        - w:schedules
      summary: Save an installed app schedule.
      tags:
      - schedules
      x-codegen-request-body-name: request
  /installedapps/{installedAppId}/schedules/{scheduleName}:
    delete:
      description: |
        Delete a specific schedule for the installed app.
      operationId: deleteSchedule
      parameters:
      - description: The ID of the installed application.
        in: path
        name: installedAppId
        required: true
        schema:
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
      - description: The name of the schedule
        in: path
        name: scheduleName
        required: true
        schema:
          format: ^[A-Za-z0-9._\-]{1,36}$
          type: string
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteScheduleResponse'
          description: Successfully deleted
        "400":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: BadRequestError
                  message: The request is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "429":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        default:
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnexpectedError
                  message: A non-recoverable error condition occurred.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      security:
      - Bearer:
        - w:schedules
      summary: Delete a schedule.
      tags:
      - schedules
    get:
      description: |
        Get a specific schedule for the installed app.
      operationId: getSchedule
      parameters:
      - description: The ID of the installed application.
        in: path
        name: installedAppId
        required: true
        schema:
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
      - description: The name of the schedule
        in: path
        name: scheduleName
        required: true
        schema:
          format: ^[A-Za-z0-9._\-]{1,36}$
          type: string
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: The schedule
        "400":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: BadRequestError
                  message: The request is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "429":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        default:
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnexpectedError
                  message: A non-recoverable error condition occurred.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      security:
      - Bearer:
        - r:schedules
      summary: Get an installed app's schedule.
      tags:
      - schedules
  /subscriptions: {}
  /subscriptions/{subscriptionId}: {}
  /subscriptions/{subscriptionId}/register: {}
  /apps:
    get:
      description: List all apps configured in an account.
      operationId: listApps
      parameters:
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      - description: The App Type of the application.
        in: query
        name: appType
        schema:
          enum:
          - LAMBDA_SMART_APP
          - WEBHOOK_SMART_APP
          type: string
      - description: |
          An App maybe associated to many classifications.  A classification drives how the integration is presented
          to the user in the SmartThings mobile clients.  These classifications include:
          * AUTOMATION - Denotes an integration that should display under the "Automation" tab in mobile clients.
          * SERVICE - Denotes an integration that is classified as a "Service".
          * DEVICE - Denotes an integration that should display under the "Device" tab in mobile clients.
          * CONNECTED_SERVICE - Denotes an integration that should display under the "Connected Services" menu in mobile clients.
        in: query
        name: classification
        schema:
          enum:
          - AUTOMATION
          - SERVICE
          - DEVICE
          - CONNECTED_SERVICE
          type: string
      - description: |
          May be used to filter a resource by it's assigned user-tags.  Multiple tag query params are automatically joined with OR.

          Example usage in query string:
          ```
          ?tag:key_name=value1&tag:key_name=value2
          ```
        in: query
        name: tag
        schema:
          format: ^[a-zA-Z_]{1,64}$
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedApps'
          description: A paginated list of apps.
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "429":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        default:
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnexpectedError
                  message: A non-recoverable error condition occurred.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      security:
      - Bearer:
        - r:apps
      summary: List apps.
      tags:
      - apps
    post:
      description: |
        Create an app integration.

        A single developer account is allowed to contain a maximum of 100 apps.  Upon hitting that limit a 422 error
        response is returned with an error code of LimitError.
      operationId: createApp
      parameters:
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      - description: |
          The Signature Type of the application. For WEBHOOK_SMART_APP only.
        in: query
        name: signatureType
        schema:
          enum:
          - APP_RSA
          - ST_PADLOCK
          type: string
      - description: |
          Override default configuration to use either PING or CONFIRMATION lifecycle. For WEBHOOK_SMART_APP only.
        in: query
        name: requireConfirmation
        schema:
          type: boolean
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CreateAppRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAppResponse'
          description: An app model.
        "400":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: BadRequestError
                  message: The request is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "422":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnprocessableEntityError
                  message: The request body is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unprocessable Entity
        "429":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        default:
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnexpectedError
                  message: A non-recoverable error condition occurred.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      security:
      - Bearer:
        - w:apps:*
      summary: Create an app.
      tags:
      - apps
      x-codegen-request-body-name: createOrUpdateAppRequest
  /apps/{appNameOrId}:
    delete:
      description: Delete an app.
      operationId: deleteApp
      parameters:
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      - description: The appName or appId field of an app.
        in: path
        name: appNameOrId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAppResponse'
          description: The number of deleted apps.
        "400":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: BadRequestError
                  message: The request is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "429":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        default:
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnexpectedError
                  message: A non-recoverable error condition occurred.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      security:
      - Bearer:
        - w:apps:*
      summary: Delete an app.
      tags:
      - apps
    get:
      description: Get a single app.
      operationId: getApp
      parameters:
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      - description: The appName or appId field of an app.
        in: path
        name: appNameOrId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App'
          description: An app.
        "400":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: BadRequestError
                  message: The request is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "429":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        default:
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnexpectedError
                  message: A non-recoverable error condition occurred.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      security:
      - Bearer:
        - r:apps:*
      summary: Get an app.
      tags:
      - apps
    put:
      description: Update an app.
      operationId: updateApp
      parameters:
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      - description: The appName or appId field of an app.
        in: path
        name: appNameOrId
        required: true
        schema:
          type: string
      - description: |
          The Signature Type of the application. For WEBHOOK_SMART_APP only.
        in: query
        name: signatureType
        schema:
          enum:
          - APP_RSA
          - ST_PADLOCK
          type: string
      - description: |
          Override default configuration to use either PING or CONFIRMATION lifecycle. For WEBHOOK_SMART_APP only.
        in: query
        name: requireConfirmation
        schema:
          type: boolean
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UpdateAppRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App'
          description: An app model.
        "400":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: BadRequestError
                  message: The request is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "422":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnprocessableEntityError
                  message: The request body is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unprocessable Entity
        "429":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        default:
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnexpectedError
                  message: A non-recoverable error condition occurred.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      security:
      - Bearer:
        - w:apps:*
      summary: Update an app.
      tags:
      - apps
      x-codegen-request-body-name: updateAppRequest
  /apps/{appNameOrId}/settings:
    get:
      description: Get settings for an app.
      operationId: getAppSettings
      parameters:
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      - description: The appName or appId field of an app.
        in: path
        name: appNameOrId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAppSettingsResponse'
          description: An app settings model.
        "400":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: BadRequestError
                  message: The request is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "429":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        default:
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnexpectedError
                  message: A non-recoverable error condition occurred.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      security:
      - Bearer:
        - r:apps:*
      summary: Get settings.
      tags:
      - apps
    put:
      description: Update settings for an app.
      operationId: updateAppSettings
      parameters:
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      - description: The appName or appId  field of an app.
        in: path
        name: appNameOrId
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UpdateAppSettingsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAppSettingsResponse'
          description: An app settings model.
        "400":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: BadRequestError
                  message: The request is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "422":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnprocessableEntityError
                  message: The request body is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unprocessable Entity
        "429":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        default:
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnexpectedError
                  message: A non-recoverable error condition occurred.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      security:
      - Bearer:
        - w:apps:*
      summary: Update settings.
      tags:
      - apps
      x-codegen-request-body-name: updateAppSettingsRequest
  /apps/{appNameOrId}/oauth:
    get:
      description: Get an app's oauth settings.
      operationId: getAppOauth
      parameters:
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      - description: The appName or appId field of an app.
        in: path
        name: appNameOrId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppOAuth'
          description: An app.
        "400":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: BadRequestError
                  message: The request is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "429":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        default:
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnexpectedError
                  message: A non-recoverable error condition occurred.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      security:
      - Bearer:
        - r:apps:*
      summary: Get an app's oauth settings.
      tags:
      - apps
    put:
      description: Update an app's oauth settings.
      operationId: updateAppOauth
      parameters:
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      - description: The appName or appId field of an app.
        in: path
        name: appNameOrId
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UpdateAppOAuthRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppOAuth'
          description: An app's oauth settings model.
        "400":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: BadRequestError
                  message: The request is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "422":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnprocessableEntityError
                  message: The request body is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unprocessable Entity
        "429":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        default:
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnexpectedError
                  message: A non-recoverable error condition occurred.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      security:
      - Bearer:
        - w:apps:*
      summary: Update an app's oauth settings.
      tags:
      - apps
      x-codegen-request-body-name: updateAppOAuthRequest
  /apps/{appNameOrId}/oauth/generate:
    post:
      description: |
        When an app is first created an OAuth client/secret are automatically generated for the integration.  However,
        there are times when it maybe useful to re-generate a client/secret.  Such as in cases where a secret becomes
        compromised.
      operationId: generateAppOauth
      parameters:
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      - description: The appName or appId field of an app.
        in: path
        name: appNameOrId
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/GenerateAppOAuthRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateAppOAuthResponse'
          description: |
            An a response object containing the newly create OAuth Client ID / Secret and relevant details
            pertaining to the OAuth client.
        "400":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: BadRequestError
                  message: The request is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "429":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        default:
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnexpectedError
                  message: A non-recoverable error condition occurred.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      security:
      - Bearer:
        - w:apps:*
      summary: Generate an app's oauth client/secret.
      tags:
      - apps
      x-codegen-request-body-name: generateAppOAuthRequest
  /apps/{appNameOrId}/tags: {}
  /apps/{appNameOrId}/register:
    put:
      description: Prepares to register an App by sending the endpoint a confirmation
        message.
      operationId: register
      parameters:
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      - description: The appName or appId field of an app.
        in: path
        name: appNameOrId
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/AppRegisterRequest'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppRegisterResponse'
          description: A request to send a confirm registration request has been accepted.
        "400":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: BadRequestError
                  message: The request is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "429":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        default:
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnexpectedError
                  message: A non-recoverable error condition occurred.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      security:
      - Bearer:
        - w:apps:*
      summary: Sends a confirmation request to App.
      tags:
      - apps
      x-codegen-request-body-name: appRegisterRequest
  /apps/{appNameOrId}/signature-type:
    put:
      description: |
        Updates the signature type of an App.  Signature options:
          * APP_RSA - Legacy signing mechanism comprised of a public / private key generated for an App during registration.  This mechanism requires an App to download the public key and deploy along side their integration to verify the signature in the authorization header.
          * ST_PADLOCK - App callbacks are signed with a SmartThings certificate which is publicly available at https://key.smartthings.com.  App's authorize callbacks by fetching the certificate over HTTPS and using it to validate the signature in the authorization header.

        Note that when upgrading an App from APP_RSA to ST_PADLOCK it is recommended to implement both verification methods.
        This will provide the ability to seamlessly switch between mechanisms in case a rollback is needed.
      operationId: updateSignatureType
      parameters:
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      - description: The appName or appId field of an app.
        in: path
        name: appNameOrId
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/UpdateSignatureTypeRequest'
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSignatureTypeResponse'
          description: |
            App signature type will be updated asynchronously.  Developer can expect change to take effect within a few minutes.
        "400":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: BadRequestError
                  message: The request is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "422":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnprocessableEntityError
                  message: The request body is malformed.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unprocessable Entity
        "429":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        default:
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnexpectedError
                  message: A non-recoverable error condition occurred.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      security:
      - Bearer:
        - w:apps:*
      summary: Update an app's signature type.
      tags:
      - apps
      x-codegen-request-body-name: updateSignatureTypeRequest
  /apps/{appNameOrId}/message-templates: {}
  /apps/{appNameOrId}/message-templates/{messageTemplateKey}: {}
  /scenes:
    get:
      description: Fetch a list of Scenes for the logged in user filtered by locationIds.
        If no locationId is sent, return scenes for all available locations
      operationId: listScenes
      parameters:
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      - description: The location of a scene.
        in: query
        name: locationId
        schema:
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
      responses:
        "200":
          content:
            application/vnd.smartthings+json:
              schema:
                $ref: '#/components/schemas/ScenePagedResult'
          description: The Scenes have been fetched
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "429":
          content:
            application/vnd.smartthings+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
                  details: []
          description: Too many requests
        default:
          content:
            application/vnd.smartthings+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnexpectedError
                  message: A non-recoverable error condition occurred.
                  details: []
          description: Unexpected error
      security:
      - Bearer:
        - r:scenes:*
      summary: List Scenes
      tags:
      - scenes
  /scenes/{sceneId}/execute:
    post:
      description: Execute a Scene by id for the logged in user and given locationId
      operationId: executeScene
      parameters:
      - description: OAuth token
        in: header
        name: Authorization
        required: true
        schema:
          format: string
          type: string
      - description: The location of a scene.
        in: query
        name: locationId
        schema:
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
      - description: The ID of the Scene.
        in: path
        name: sceneId
        required: true
        schema:
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardSuccessResponse'
          description: The Scene has been executed
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "429":
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: TooManyRequestError
                  message: Rate limit exceded.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        default:
          content:
            application/json:
              example:
                requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
                error:
                  code: UnexpectedError
                  message: A non-recoverable error condition occurred.
                  details: []
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      security:
      - Bearer:
        - x:scenes:*
      summary: Execute Scene
      tags:
      - scenes
  /capabilities: {}
  /capabilities/{capabilityId}: {}
  /capabilities/{capabilityId}/{capabilityVersion}: {}
  /history/devices: {}
  /schema/apps: {}
  /schema/apps/{endpointAppId}: {}
  /schema/apps/user/{userId}: {}
  /schema/installedapps/{isaId}: {}
  /schema/installedapps/location/{locationId}: {}
  /schema/install/{endpointAppId}: {}
  /services/coordinate/locations/{locationId}: {}
  /services/coordinate/locations/{locationId}/subscriptions: {}
  /services/coordinate/locations/{locationId}/subscriptions/{subscriptionId}: {}
  /services/coordinate/locations/{locationId}/capabilities: {}
components:
  parameters:
    authorization:
      description: OAuth token
      in: header
      name: Authorization
      required: true
      schema:
        format: string
        type: string
    deviceId:
      description: the device ID
      in: path
      name: deviceId
      required: true
      schema:
        type: string
    optionalDeviceId:
      description: The ID of the device
      in: query
      name: deviceId
      schema:
        format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
        type: string
    installedAppId:
      description: The ID of the installed application.
      in: path
      name: installedAppId
      required: true
      schema:
        format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
        type: string
    locationId:
      description: The ID of the location.
      in: path
      name: locationId
      required: true
      schema:
        format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
        type: string
    roomId:
      description: The ID of the room.
      in: path
      name: roomId
      required: true
      schema:
        format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
        type: string
    subscriptionId:
      description: The ID of the subscription
      in: path
      name: subscriptionId
      required: true
      schema:
        format: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
        type: string
    tag:
      description: |
        May be used to filter a resource by it's assigned user-tags.  Multiple tag query params are automatically joined with OR.

        Example usage in query string:
        ```
        ?tag:key_name=value1&tag:key_name=value2
        ```
      in: query
      name: tag
      schema:
        format: ^[a-zA-Z_]{1,64}$
        type: string
    optionalAppId:
      description: The ID of an App
      in: query
      name: appId
      schema:
        format: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
        type: string
    optionalModeId:
      description: The ID of the mode
      in: query
      name: modeId
      schema:
        format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
        type: string
    optionalSceneId:
      description: The ID of the scene
      in: query
      name: sceneId
      schema:
        format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
        type: string
    configurationId:
      description: The ID of the install configuration.
      in: path
      name: configurationId
      required: true
      schema:
        format: uuid
        type: string
    installedAppStatus:
      description: State of the Installed App.
      in: query
      name: installedAppStatus
      schema:
        enum:
        - PENDING
        - AUTHORIZED
        - REVOKED
        - DISABLED
        type: string
    installedAppType:
      description: Denotes the type of installed app.
      in: query
      name: installedAppType
      schema:
        enum:
        - LAMBDA_SMART_APP
        - WEBHOOK_SMART_APP
        type: string
    scheduleName:
      description: The name of the schedule
      in: path
      name: scheduleName
      required: true
      schema:
        format: ^[A-Za-z0-9._\-]{1,36}$
        type: string
    componentId:
      description: The name of the component.
      in: path
      name: componentId
      required: true
      schema:
        format: ^[-_!.~'()*0-9a-zA-Z]{1,36}$
        type: string
    capabilityId:
      description: The ID of the capability
      in: path
      name: capabilityId
      required: true
      schema:
        pattern: ^[[a-z]*([A-Z][a-z]*)*]{1,36}$
        type: string
    capabilityIdReference:
      description: The ID of the capability.
      in: path
      name: capabilityId
      required: true
      schema:
        type: string
    capabilityVersion:
      description: The version of the capability
      in: path
      name: capabilityVersion
      required: true
      schema:
        type: integer
    appNameOrId:
      description: The appName or appId field of an app.
      in: path
      name: appNameOrId
      required: true
      schema:
        type: string
    appType:
      description: The App Type of the application.
      in: query
      name: appType
      schema:
        enum:
        - LAMBDA_SMART_APP
        - WEBHOOK_SMART_APP
        type: string
    classification:
      description: |
        An App maybe associated to many classifications.  A classification drives how the integration is presented
        to the user in the SmartThings mobile clients.  These classifications include:
        * AUTOMATION - Denotes an integration that should display under the "Automation" tab in mobile clients.
        * SERVICE - Denotes an integration that is classified as a "Service".
        * DEVICE - Denotes an integration that should display under the "Device" tab in mobile clients.
        * CONNECTED_SERVICE - Denotes an integration that should display under the "Connected Services" menu in mobile clients.
      in: query
      name: classification
      schema:
        enum:
        - AUTOMATION
        - SERVICE
        - DEVICE
        - CONNECTED_SERVICE
        type: string
    optionalLocationId:
      description: The ID of the location that both the installed smart app and source
        are associated with.
      in: query
      name: locationId
      schema:
        format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
        type: string
    requiredLocationId:
      description: The ID of the location that both the installed smart app and source
        are associated with.
      in: query
      name: locationId
      required: true
      schema:
        format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
        type: string
    deviceProfileId:
      description: the device profile ID
      in: path
      name: deviceProfileId
      required: true
      schema:
        type: string
    locale:
      description: The tag of the locale as defined in [RFC bcp47](http://www.rfc-editor.org/rfc/bcp/bcp47.txt).
      in: path
      name: locale
      required: true
      schema:
        type: string
    modeId:
      description: The ID of the Mode.
      in: path
      name: modeId
      required: true
      schema:
        format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
        type: string
    optionalSceneLocationId:
      description: The location of a scene.
      in: query
      name: locationId
      schema:
        format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
        type: string
    sceneId:
      description: The ID of the Scene.
      in: path
      name: sceneId
      required: true
      schema:
        format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
        type: string
    Accept-Language:
      description: Language header representing the client's preferred language. The
        format of the `Accept-Language` header follows what is defined in [RFC 7231,
        section 5.3.5](https://tools.ietf.org/html/rfc7231#section-5.3.5)
      in: header
      name: Accept-Language
      schema:
        type: string
    messageTemplateKey:
      description: A developer defined identifier for a message template.
      in: path
      name: messageTemplateKey
      required: true
      schema:
        format: ^[a-z0-9._]{1,36}$
        type: string
    signatureType:
      description: |
        The Signature Type of the application. For WEBHOOK_SMART_APP only.
      in: query
      name: signatureType
      schema:
        enum:
        - APP_RSA
        - ST_PADLOCK
        type: string
    requireConfirmation:
      description: |
        Override default configuration to use either PING or CONFIRMATION lifecycle. For WEBHOOK_SMART_APP only.
      in: query
      name: requireConfirmation
      schema:
        type: boolean
    ruleId:
      description: The rule ID
      in: path
      name: ruleId
      required: true
      schema:
        format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
        type: string
  requestBodies:
    sceneRequest:
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/SceneRequest'
      required: true
  responses:
    badRequest:
      content:
        application/json:
          example:
            requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
            error:
              code: BadRequestError
              message: The request is malformed.
              details: []
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: Bad request
    conflict:
      content:
        application/json:
          example:
            requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
            error:
              code: ConflictError
              message: A conflict occured that prevented action.
              details: []
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: Conflict
    defaultResponse:
      content:
        application/json:
          example:
            requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
            error:
              code: UnexpectedError
              message: A non-recoverable error condition occurred.
              details: []
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: Unexpected error
    notAuthenticated:
      content: {}
      description: Unauthorized
    notAuthorized:
      content: {}
      description: Forbidden
    notFound:
      content:
        application/json:
          example:
            requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
            error:
              code: NotFoundError
              message: A resource could not be found.
              details: []
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: Not found
    tooManyRequests:
      content:
        application/json:
          example:
            requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
            error:
              code: TooManyRequestError
              message: Rate limit exceded.
              details: []
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: Too many requests
    unprocessableEntity:
      content:
        application/json:
          example:
            requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
            error:
              code: UnprocessableEntityError
              message: The request body is malformed.
              details: []
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: Unprocessable Entity
    unsupportedMediaType:
      content:
        application/json:
          example:
            requestId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
            error:
              code: UnsupportedMediaTypeError
              message: text/plain is not an allowed Content-Type for the requested
                resource.
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: Unsupported Media Type
  schemas:
    Link:
      example:
        href: https://...
      properties:
        href:
          description: An absolute URL linking to a resource.
          example: https://...
          type: string
      type: object
    Links:
      example:
        next:
          href: https://...
        previous:
          href: https://...
      properties:
        next:
          $ref: '#/components/schemas/Link'
        previous:
          $ref: '#/components/schemas/Link'
      type: object
    ErrorResponse:
      properties:
        requestId:
          description: A correlation id used for reference when contacting support.
          example: 7b8514e6-230d-41cc-b3c2-512bca15abf0
          type: string
        error:
          $ref: '#/components/schemas/Error'
      type: object
    Error:
      description: Details about the error.
      properties:
        code:
          description: Machine readable error code.
          example: ConstraintViolationError
          type: string
        message:
          description: Human readable error message.
          example: The request was malformed.
          type: string
        target:
          description: Optional field used to point to a problamatic part of the request.
          example: 31192dc9-eb45-4d90-b606-21e9b66d8c2b
          type: string
        details:
          items:
            $ref: '#/components/schemas/Error'
          type: array
      type: object
    Owner:
      description: A typed model which provides information around ownership of a
        specific domain.
      example:
        ownerType: USER
        ownerId: 72fd3b54-d243-4bf7-a845-92eb7956b982
      properties:
        ownerType:
          default: USER
          description: The account type which owns the specific domain item.
          enum:
          - USER
          - SYSTEM
          - IMPLICIT
          type: string
        ownerId:
          description: A global idenfifier for owner.
          type: string
      type: object
    Tags:
      additionalProperties:
        type: string
      description: |
        A map of user-defined tags which can be used to associate arbitrary metadata to a resource, and can be
        useful for filtering.

        * Key length must be between 1 and 64 (inclusive) Unicode characters in UTF-8
        * Value length must be between 1 and 256 (inclusive) Unicode characters in UTF-8
        * Case sensitive
        * Maximum number of tags per resource: 25
        * Reserved prefix — `st:`
        * ST-generated tag names and values are automatically assigned the `st:` prefix, which you cannot assign.
        * Use each key only once for each resource. If you attempt to use the same key twice on the same resource the last key wins.
        * You cannot tag a resource at the same time you create it. Tagging requires a separate action after the resource is created.
        * Allowed characters for *keys* are letters, plus the following special characters: `:`, `_`
        * Allowed characters for *values* are letters, whitespace, and numbers, plus the following special characters: `+`, `-`, `=`, `.`, `_`, `:`, `/`
        * If you need characters outside this allowed set, you can apply standard base-64 encoding to your tag.
      type: object
    Device:
      example:
        app:
          installedAppId: 0c0b935d-0616-4441-a0bf-da7aeec3dc0a
          profile:
            id: a7b3c264-2d22-416e-bca1-ca4b59a60aee
          externalId: Th13390
        childDevices:
        - null
        - null
        deviceTypeId: Deprecated please look under "dth".
        components:
        - capabilities:
          - id: switch
            version: 1
          - id: switch
            version: 1
          id: main
          label: label
        - capabilities:
          - id: switch
            version: 1
          - id: switch
            version: 1
          id: main
          label: label
        profile:
          id: a7b3c264-2d22-416e-bca1-ca4b59a60aee
        deviceTypeName: Deprecated please look under "dth".
        ir:
          ocfDeviceType: oic.d.tv
          childDevices:
          - null
          - null
          metadata: '{}'
          irCode: 006C
          functionCodes: '{"statelessPowerToggleButton.powerToggle":"power","statelessAudioMuteButton.muteToggle":"mute","statelessAudioVolumeButton.volumeUp":"volume_up","statelessAudioVolumeButton.volumeDown":"volume_down","statelessChannelButton.channelUp":"channel_up","statelessChannelButton.channelDown":"channel_down","statelessCustomButton.green":"green","statelessCustomButton.right":"right","statelessCustomButton.3":3,"statelessCustomButton.exit":"exit","statelessCustomButton.playback":"playback"}'
          profileId: 0c0b875r-0213-6479-a0bf-da7aeec3dc0a
          parentDeviceId: parentDeviceId
        label: color.light.100x
        deviceId: 6f5ea629-4c05-4a90-a244-cc129b0a80c3
        deviceManufacturerCode: 010F-0B01-2002
        roomId: 0fd2b1ef-1b33-4a54-9153-65aca91e9660
        deviceNetworkType: Deprecated please look under "dth".
        irOcf:
          ocfDeviceType: oic.d.tv
          childDevices:
          - null
          - null
          metadata: '{}'
          irCode: 006C
          functionCodes: '{"statelessPowerToggleButton.powerToggle":"power","statelessAudioMuteButton.muteToggle":"mute","statelessAudioVolumeButton.volumeUp":"volume_up","statelessAudioVolumeButton.volumeDown":"volume_down","statelessChannelButton.channelUp":"channel_up","statelessChannelButton.channelDown":"channel_down","statelessCustomButton.green":"green","statelessCustomButton.right":"right","statelessCustomButton.3":3,"statelessCustomButton.exit":"exit","statelessCustomButton.playback":"playback"}'
          profileId: 0c0b875r-0213-6479-a0bf-da7aeec3dc0a
          parentDeviceId: parentDeviceId
        locationId: 0c0b935d-0616-4441-a0bf-da7aeec3dc0a
        name: color.light.100x
        dth:
          hubId: f7239728-edb3-48e9-b588-a27f30b968a0
          deviceTypeId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
          deviceNetworkType: ZWAVE
          completedSetup: true
          deviceTypeName: x.com.samsung.da.fridge
        viper:
          modelName: HS101
          swVersion: 23.123.231
          manufacturerName: TP-Link
          uniqueIdentifier: 1a-74
          hwVersion: v1 US bulb
      properties:
        deviceId:
          description: The identifier for the device instance.
          example: 6f5ea629-4c05-4a90-a244-cc129b0a80c3
          type: string
        name:
          description: The name that the device integration (Device Handler or SmartApp)
            defines for the device.
          example: color.light.100x
          type: string
        label:
          description: The name that a user chooses for the device. This defaults
            to the same value as name.
          example: color.light.100x
          type: string
        deviceManufacturerCode:
          description: The device manufacturer code.
          example: 010F-0B01-2002
          type: string
        locationId:
          description: The ID of the Location with which the device is associated.
          example: 0c0b935d-0616-4441-a0bf-da7aeec3dc0a
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
        roomId:
          description: The ID of the Room with which the device is associated. If
            the device is not associated with any room, then this field will be null.
          example: 0fd2b1ef-1b33-4a54-9153-65aca91e9660
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
        deviceTypeId:
          description: Deprecated please look under "dth".
          example: Deprecated please look under "dth".
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
        deviceTypeName:
          description: Deprecated please look under "dth".
          example: Deprecated please look under "dth".
          type: string
        deviceNetworkType:
          description: Deprecated please look under "dth".
          example: Deprecated please look under "dth".
          type: string
        components:
          description: The IDs of all compenents on the device.
          items:
            $ref: '#/components/schemas/DeviceComponent'
          type: array
        childDevices:
          description: Device details for all child devices of the device.
          items:
            $ref: '#/components/schemas/Device'
          type: array
        profile:
          $ref: '#/components/schemas/DeviceProfileReference'
        app:
          $ref: '#/components/schemas/AppDeviceDetails'
        dth:
          $ref: '#/components/schemas/DthDeviceDetails'
        ir:
          $ref: '#/components/schemas/IrDeviceDetails'
        irOcf:
          $ref: '#/components/schemas/IrDeviceDetails'
        viper:
          $ref: '#/components/schemas/ViperDeviceDetails'
        type:
          $ref: '#/components/schemas/DeviceIntegrationType'
      type: object
    PagedDevices:
      description: A paginated array of devices.
      example:
        _links:
          next:
            href: https://...
          previous:
            href: https://...
        items:
        - app:
            installedAppId: 0c0b935d-0616-4441-a0bf-da7aeec3dc0a
            profile:
              id: a7b3c264-2d22-416e-bca1-ca4b59a60aee
            externalId: Th13390
          childDevices:
          - null
          - null
          deviceTypeId: Deprecated please look under "dth".
          components:
          - capabilities:
            - id: switch
              version: 1
            - id: switch
              version: 1
            id: main
            label: label
          - capabilities:
            - id: switch
              version: 1
            - id: switch
              version: 1
            id: main
            label: label
          profile:
            id: a7b3c264-2d22-416e-bca1-ca4b59a60aee
          deviceTypeName: Deprecated please look under "dth".
          ir:
            ocfDeviceType: oic.d.tv
            childDevices:
            - null
            - null
            metadata: '{}'
            irCode: 006C
            functionCodes: '{"statelessPowerToggleButton.powerToggle":"power","statelessAudioMuteButton.muteToggle":"mute","statelessAudioVolumeButton.volumeUp":"volume_up","statelessAudioVolumeButton.volumeDown":"volume_down","statelessChannelButton.channelUp":"channel_up","statelessChannelButton.channelDown":"channel_down","statelessCustomButton.green":"green","statelessCustomButton.right":"right","statelessCustomButton.3":3,"statelessCustomButton.exit":"exit","statelessCustomButton.playback":"playback"}'
            profileId: 0c0b875r-0213-6479-a0bf-da7aeec3dc0a
            parentDeviceId: parentDeviceId
          label: color.light.100x
          deviceId: 6f5ea629-4c05-4a90-a244-cc129b0a80c3
          deviceManufacturerCode: 010F-0B01-2002
          roomId: 0fd2b1ef-1b33-4a54-9153-65aca91e9660
          deviceNetworkType: Deprecated please look under "dth".
          irOcf:
            ocfDeviceType: oic.d.tv
            childDevices:
            - null
            - null
            metadata: '{}'
            irCode: 006C
            functionCodes: '{"statelessPowerToggleButton.powerToggle":"power","statelessAudioMuteButton.muteToggle":"mute","statelessAudioVolumeButton.volumeUp":"volume_up","statelessAudioVolumeButton.volumeDown":"volume_down","statelessChannelButton.channelUp":"channel_up","statelessChannelButton.channelDown":"channel_down","statelessCustomButton.green":"green","statelessCustomButton.right":"right","statelessCustomButton.3":3,"statelessCustomButton.exit":"exit","statelessCustomButton.playback":"playback"}'
            profileId: 0c0b875r-0213-6479-a0bf-da7aeec3dc0a
            parentDeviceId: parentDeviceId
          locationId: 0c0b935d-0616-4441-a0bf-da7aeec3dc0a
          name: color.light.100x
          dth:
            hubId: f7239728-edb3-48e9-b588-a27f30b968a0
            deviceTypeId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
            deviceNetworkType: ZWAVE
            completedSetup: true
            deviceTypeName: x.com.samsung.da.fridge
          viper:
            modelName: HS101
            swVersion: 23.123.231
            manufacturerName: TP-Link
            uniqueIdentifier: 1a-74
            hwVersion: v1 US bulb
        - app:
            installedAppId: 0c0b935d-0616-4441-a0bf-da7aeec3dc0a
            profile:
              id: a7b3c264-2d22-416e-bca1-ca4b59a60aee
            externalId: Th13390
          childDevices:
          - null
          - null
          deviceTypeId: Deprecated please look under "dth".
          components:
          - capabilities:
            - id: switch
              version: 1
            - id: switch
              version: 1
            id: main
            label: label
          - capabilities:
            - id: switch
              version: 1
            - id: switch
              version: 1
            id: main
            label: label
          profile:
            id: a7b3c264-2d22-416e-bca1-ca4b59a60aee
          deviceTypeName: Deprecated please look under "dth".
          ir:
            ocfDeviceType: oic.d.tv
            childDevices:
            - null
            - null
            metadata: '{}'
            irCode: 006C
            functionCodes: '{"statelessPowerToggleButton.powerToggle":"power","statelessAudioMuteButton.muteToggle":"mute","statelessAudioVolumeButton.volumeUp":"volume_up","statelessAudioVolumeButton.volumeDown":"volume_down","statelessChannelButton.channelUp":"channel_up","statelessChannelButton.channelDown":"channel_down","statelessCustomButton.green":"green","statelessCustomButton.right":"right","statelessCustomButton.3":3,"statelessCustomButton.exit":"exit","statelessCustomButton.playback":"playback"}'
            profileId: 0c0b875r-0213-6479-a0bf-da7aeec3dc0a
            parentDeviceId: parentDeviceId
          label: color.light.100x
          deviceId: 6f5ea629-4c05-4a90-a244-cc129b0a80c3
          deviceManufacturerCode: 010F-0B01-2002
          roomId: 0fd2b1ef-1b33-4a54-9153-65aca91e9660
          deviceNetworkType: Deprecated please look under "dth".
          irOcf:
            ocfDeviceType: oic.d.tv
            childDevices:
            - null
            - null
            metadata: '{}'
            irCode: 006C
            functionCodes: '{"statelessPowerToggleButton.powerToggle":"power","statelessAudioMuteButton.muteToggle":"mute","statelessAudioVolumeButton.volumeUp":"volume_up","statelessAudioVolumeButton.volumeDown":"volume_down","statelessChannelButton.channelUp":"channel_up","statelessChannelButton.channelDown":"channel_down","statelessCustomButton.green":"green","statelessCustomButton.right":"right","statelessCustomButton.3":3,"statelessCustomButton.exit":"exit","statelessCustomButton.playback":"playback"}'
            profileId: 0c0b875r-0213-6479-a0bf-da7aeec3dc0a
            parentDeviceId: parentDeviceId
          locationId: 0c0b935d-0616-4441-a0bf-da7aeec3dc0a
          name: color.light.100x
          dth:
            hubId: f7239728-edb3-48e9-b588-a27f30b968a0
            deviceTypeId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
            deviceNetworkType: ZWAVE
            completedSetup: true
            deviceTypeName: x.com.samsung.da.fridge
          viper:
            modelName: HS101
            swVersion: 23.123.231
            manufacturerName: TP-Link
            uniqueIdentifier: 1a-74
            hwVersion: v1 US bulb
      properties:
        items:
          items:
            $ref: '#/components/schemas/Device'
          type: array
        _links:
          $ref: '#/components/schemas/Links'
      type: object
    DeviceComponent:
      example:
        capabilities:
        - id: switch
          version: 1
        - id: switch
          version: 1
        id: main
        label: label
      properties:
        id:
          example: main
          format: ^[-_!.~'()*0-9a-zA-Z]{1,36}$
          type: string
        label:
          description: UTF-8 label for the component.
          type: string
        capabilities:
          items:
            $ref: '#/components/schemas/CapabilityReference'
          type: array
      type: object
    CapabilityReference:
      example:
        id: switch
        version: 1
      properties:
        id:
          example: switch
          type: string
        version:
          example: 1
          type: integer
      required:
      - id
      type: object
    DeviceCategory:
      description: A case-sensitive string from the pre-defined list of valid categories
        [/devicecategories](#/operation/listCategories).
      example:
        name: Light
      properties:
        name:
          example: Light
          type: string
      required:
      - name
      type: object
    DeviceCommandsRequest:
      example:
        commands:
        - component: main
          capability: switchLevel
          command: setLevel
          arguments:
          - 80
        - component: main
          capability: switchLevel
          command: setLevel
          arguments:
          - 80
      properties:
        commands:
          description: An array of commands to execute on the Device.
          items:
            $ref: '#/components/schemas/DeviceCommand'
          type: array
      type: object
    DeviceCommand:
      example:
        component: main
        capability: switchLevel
        command: setLevel
        arguments:
        - 80
      properties:
        component:
          default: main
          description: The name of the component on this device, default is 'main'.
            The component must be valid for the device.
          format: ^[-_!.~'()*0-9a-zA-Z]{1,36}$
          type: string
        capability:
          description: Capability that this command relates to. This must be a capability
            of the component.
          type: string
        command:
          description: Name of the command, this must be valid for the capability.
          type: string
        arguments:
          description: |
            Arguments of the command.
            All the required arguments defined in the capability's command argument definition must be provided.
            The type of the arguments are dependent on the type of the capability's command argument.
            Please refer to the capabilities definition at https://smartthings.developer.samsung.com/develop/api-ref/capabilities.html
          items:
            properties: {}
            type: object
          type: array
      required:
      - capability
      - command
      type: object
    DeviceStatus:
      description: The status of a Device.
      example:
        components:
          main:
            switch:
              switch:
                value: "on"
            switchLevel:
              level:
                value: 90
      properties:
        components:
          additionalProperties:
            $ref: '#/components/schemas/ComponentStatus'
          description: A map of componentId to Component status.
          example:
            main:
              switch:
                switch:
                  value: "on"
              switchLevel:
                level:
                  value: 90
          type: object
      type: object
    ComponentStatus:
      additionalProperties:
        $ref: '#/components/schemas/CapabilityStatus'
      description: A map of capabilityId to Capability status.
      example:
        switch:
          switch:
            value: "on"
        switchLevel:
          level:
            value: 90
      type: object
    CapabilityStatus:
      additionalProperties:
        $ref: '#/components/schemas/AttributeState'
      description: A map of Attribute name to Attribute state.
      example:
        switch:
          value: "on"
      type: object
    AttributeState:
      properties:
        value:
          example: 0
          properties: {}
          type: object
        unit:
          example: °C
          type: string
        data:
          additionalProperties:
            properties: {}
            type: object
          example:
            method: manual
            codeId: 1234
            timeout: 2018-05-09T23:03:31+0000
          type: object
        timestamp:
          description: Will always be 0 timezone offset
          example: 2017-12-18T22:14:52.714Z
          format: date-time
          type: string
      type: object
    DeviceEventsRequest:
      example:
        deviceEvents:
        - component: main
          capability: switchLevel
          attribute: level
          value: 0
        - component: main
          capability: switchLevel
          attribute: level
          value: 0
        - component: main
          capability: switchLevel
          attribute: level
          value: 0
        - component: main
          capability: switchLevel
          attribute: level
          value: 0
        - component: main
          capability: switchLevel
          attribute: level
          value: 0
      properties:
        deviceEvents:
          description: An array of attribute state updates.
          items:
            $ref: '#/components/schemas/DeviceStateEvent'
          maxItems: 8
          minItems: 1
          type: array
      type: object
    DeviceStateEvent:
      example:
        component: main
        capability: switchLevel
        attribute: level
        value: 0
      properties:
        component:
          description: The name of the component on this device, default is 'main'.
          type: string
        capability:
          description: Capability that this event relates to.
          type: string
        attribute:
          description: Name of the capability attribute that this event relates to.
          type: string
        value:
          description: Value associated with the event. The valid value depends on
            the capability.
          properties: {}
          type: object
        unit:
          description: Unit of the value field.
          type: string
        data:
          additionalProperties:
            properties: {}
            type: object
          description: Key value pairs about the state of the device. Valid values
            depend on the capability.
          type: object
      required:
      - value
      type: object
    DeviceInstallRequest:
      example:
        app:
          installedAppId: 6f5ea629-4c05-4a90-a244-cc129b0a80c3
          profileId: 6f5ea629-4c05-4a90-a244-cc129b0a80c3
          externalId: Th13390
        locationId: 0c0b935d-0616-4441-a0bf-da7aeec3dc0a
        label: Living room light
      properties:
        label:
          description: The label for the device.
          example: Living room light
          type: string
        locationId:
          description: The ID of the Location with which the device is associated.
          example: 0c0b935d-0616-4441-a0bf-da7aeec3dc0a
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
        app:
          $ref: '#/components/schemas/DeviceInstallRequest_app'
      required:
      - app
      - locationId
      type: object
    AppDeviceDetails:
      example:
        installedAppId: 0c0b935d-0616-4441-a0bf-da7aeec3dc0a
        profile:
          id: a7b3c264-2d22-416e-bca1-ca4b59a60aee
        externalId: Th13390
      properties:
        installedAppId:
          description: The ID of the installed app that integrates this device.
          example: 0c0b935d-0616-4441-a0bf-da7aeec3dc0a
          format: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
          type: string
        externalId:
          description: A field to store an ID from a system external to SmartThings.
          example: Th13390
          maxLength: 64
          type: string
        profile:
          $ref: '#/components/schemas/DeviceProfileReference'
      type: object
    DthDeviceDetails:
      example:
        hubId: f7239728-edb3-48e9-b588-a27f30b968a0
        deviceTypeId: 7b8514e6-230d-41cc-b3c2-512bca15abf0
        deviceNetworkType: ZWAVE
        completedSetup: true
        deviceTypeName: x.com.samsung.da.fridge
      properties:
        deviceTypeId:
          description: The identifier for the device's DeviceType.
          example: 7b8514e6-230d-41cc-b3c2-512bca15abf0
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
        deviceTypeName:
          description: The name for the device's DeviceType.
          example: x.com.samsung.da.fridge
          type: string
        deviceNetworkType:
          description: The device network type.
          example: ZWAVE
          type: string
        completedSetup:
          description: True if the device setup has been completed so the device is
            ready to use.
          type: boolean
        networkSecurityLevel:
          $ref: '#/components/schemas/DeviceNetworkSecurityLevel'
        hubId:
          description: The hub that the device is connected to.
          example: f7239728-edb3-48e9-b588-a27f30b968a0
          type: string
      required:
      - completedSetup
      - deviceTypeId
      - deviceTypeName
      type: object
    IrDeviceDetails:
      example:
        ocfDeviceType: oic.d.tv
        childDevices:
        - null
        - null
        metadata: '{}'
        irCode: 006C
        functionCodes: '{"statelessPowerToggleButton.powerToggle":"power","statelessAudioMuteButton.muteToggle":"mute","statelessAudioVolumeButton.volumeUp":"volume_up","statelessAudioVolumeButton.volumeDown":"volume_down","statelessChannelButton.channelUp":"channel_up","statelessChannelButton.channelDown":"channel_down","statelessCustomButton.green":"green","statelessCustomButton.right":"right","statelessCustomButton.3":3,"statelessCustomButton.exit":"exit","statelessCustomButton.playback":"playback"}'
        profileId: 0c0b875r-0213-6479-a0bf-da7aeec3dc0a
        parentDeviceId: parentDeviceId
      properties:
        parentDeviceId:
          description: The id of the Parent device.
          format: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
          type: string
        profileId:
          description: The id of the profile that describes the device components
            and capabilities.
          example: 0c0b875r-0213-6479-a0bf-da7aeec3dc0a
          format: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
          type: string
        ocfDeviceType:
          description: The OCF Device Type
          example: oic.d.tv
          type: string
        irCode:
          description: The id of the ircode
          example: 006C
          type: string
        functionCodes:
          $ref: '#/components/schemas/IrDeviceDetails_functionCodes'
        childDevices:
          description: list of child devices
          items:
            $ref: '#/components/schemas/IrDeviceDetails'
          type: array
        metadata:
          description: |
            Key value pairs stored in the conductor for the device.
            UI Metadata information
          properties: {}
          type: object
      type: object
    ViperDeviceDetails:
      example:
        modelName: HS101
        swVersion: 23.123.231
        manufacturerName: TP-Link
        uniqueIdentifier: 1a-74
        hwVersion: v1 US bulb
      properties:
        uniqueIdentifier:
          example: 1a-74
          type: string
        manufacturerName:
          example: TP-Link
          type: string
        modelName:
          example: HS101
          type: string
        swVersion:
          example: 23.123.231
          type: string
        hwVersion:
          example: v1 US bulb
          type: string
      type: object
    DeviceProfileReference:
      example:
        id: a7b3c264-2d22-416e-bca1-ca4b59a60aee
      properties:
        id:
          description: The device profile Id
          example: a7b3c264-2d22-416e-bca1-ca4b59a60aee
          type: string
      type: object
    DeviceIntegrationType:
      default: DTH
      description: |
        The type of device integration (may be null).
        If the type is DTH, the device implementation is a groovy Device Handler and the details are in the "dth" field.
        If the type is ENDPOINT_APP, the device implementation is a SmartApp and the details are in the "app" field.
        If the type is IR, the details are in the "ir" field.
        If the type is IR_OCF, the details are in the "irOcf" field.
        If the type is VIPER, the details are in the "viper" field.
      enum:
      - BLE
      - BLE_D2D
      - DTH
      - ENDPOINT_APP
      - HUB
      - IR
      - IR_OCF
      - MQTT
      - OCF
      - PENGYOU
      - VIDEO
      - VIPER
      type: string
    CreateDeviceEventsResponse:
      type: object
    CreateDeviceCommandsResponse:
      type: object
    DeleteDeviceCommandsResponse:
      type: object
    UpdateDeviceRequest:
      example:
        components:
        - id: main
          categories:
          - Light
        - id: main
          categories:
          - Light
        label: Living room light
      properties:
        label:
          description: The label for the device.
          example: Living room light
          maxLength: 255
          minLength: 1
          type: string
        components:
          items:
            $ref: '#/components/schemas/UpdateDeviceRequest_components'
          type: array
      required:
      - label
      type: object
    DeviceNetworkSecurityLevel:
      default: UNKNOWN
      description: |
        For hub-connected devices on protocols with multiple security levels, the security level the device was added with.
        Values ZWAVE_S2_FAILED, ZWAVE_S0_FAILED, ZWAVE_S2_DOWNGRADE, and ZWAVE_S0_DOWNGRADE should be treated as failures
        and prompt the user to remove and re-add the device. Other Z-Wave values are success cases.
      enum:
      - UNKNOWN
      - ZWAVE_LEGACY_NON_SECURE
      - ZWAVE_S0_LEGACY
      - ZWAVE_S0_FALLBACK
      - ZWAVE_S2_UNAUTHENTICATED
      - ZWAVE_S2_AUTHENTICATED
      - ZWAVE_S2_ACCESS_CONTROL
      - ZWAVE_S2_FAILED
      - ZWAVE_S0_FAILED
      - ZWAVE_S2_DOWNGRADE
      - ZWAVE_S0_DOWNGRADE
      type: string
    DeviceComponentReference:
      example:
        capabilities:
        - id: switch
          version: 1
        - id: switch
          version: 1
        - id: switch
          version: 1
        - id: switch
          version: 1
        - id: switch
          version: 1
        id: main
        categories:
        - name: Light
        - name: Light
      properties:
        id:
          example: main
          format: ^[-_!.~'()*0-9a-zA-Z]{1,36}$
          type: string
        capabilities:
          description: A list of `[ 1..20 ]` capabilities for this component.
          items:
            $ref: '#/components/schemas/CapabilityReference'
          maxItems: 20
          minItems: 1
          type: array
        categories:
          items:
            $ref: '#/components/schemas/DeviceCategory'
          type: array
      required:
      - capabilities
      - id
      type: object
    DeviceProfile:
      example:
        owner:
          ownerType: USER
          ownerId: 72fd3b54-d243-4bf7-a845-92eb7956b982
        components:
        - capabilities:
          - id: switch
            version: 1
          - id: switch
            version: 1
          id: main
          label: label
        - capabilities:
          - id: switch
            version: 1
          - id: switch
            version: 1
          id: main
          label: label
        metadata:
          key: metadata
        name: thermostat1.model1
        id: a362ddb6-349b-4650-9911-681b51069a57
      properties:
        id:
          example: a362ddb6-349b-4650-9911-681b51069a57
          type: string
        name:
          example: thermostat1.model1
          type: string
        owner:
          $ref: '#/components/schemas/Owner'
        components:
          items:
            $ref: '#/components/schemas/DeviceComponent'
          type: array
        metadata:
          additionalProperties:
            format: ^[-_!.~'() *0-9a-zA-Z\\p{L}]{1,1024}$
            type: string
          description: Additional information about the device profile, limited to
            10 entries.
          type: object
        status:
          $ref: '#/components/schemas/DeviceProfileStatus'
      type: object
    PagedDeviceProfiles:
      example:
        _links:
          next:
            href: https://...
          previous:
            href: https://...
        items:
        - owner:
            ownerType: USER
            ownerId: 72fd3b54-d243-4bf7-a845-92eb7956b982
          components:
          - capabilities:
            - id: switch
              version: 1
            - id: switch
              version: 1
            id: main
            label: label
          - capabilities:
            - id: switch
              version: 1
            - id: switch
              version: 1
            id: main
            label: label
          metadata:
            key: metadata
          name: thermostat1.model1
          id: a362ddb6-349b-4650-9911-681b51069a57
        - owner:
            ownerType: USER
            ownerId: 72fd3b54-d243-4bf7-a845-92eb7956b982
          components:
          - capabilities:
            - id: switch
              version: 1
            - id: switch
              version: 1
            id: main
            label: label
          - capabilities:
            - id: switch
              version: 1
            - id: switch
              version: 1
            id: main
            label: label
          metadata:
            key: metadata
          name: thermostat1.model1
          id: a362ddb6-349b-4650-9911-681b51069a57
      properties:
        items:
          items:
            $ref: '#/components/schemas/DeviceProfile'
          type: array
        _links:
          $ref: '#/components/schemas/Links'
      type: object
    DeviceProfileMetadata:
      additionalProperties:
        format: ^[-_!.~'() *0-9a-zA-Z\\p{L}]{1,1024}$
        type: string
      description: Additional information about the device profile, limited to 10
        entries.
      type: object
    UpdateDeviceProfileRequest:
      example:
        components:
        - capabilities:
          - id: switch
            version: 1
          - id: switch
            version: 1
          - id: switch
            version: 1
          - id: switch
            version: 1
          - id: switch
            version: 1
          id: main
          categories:
          - name: Light
          - name: Light
        - capabilities:
          - id: switch
            version: 1
          - id: switch
            version: 1
          - id: switch
            version: 1
          - id: switch
            version: 1
          - id: switch
            version: 1
          id: main
          categories:
          - name: Light
          - name: Light
        - capabilities:
          - id: switch
            version: 1
          - id: switch
            version: 1
          - id: switch
            version: 1
          - id: switch
            version: 1
          - id: switch
            version: 1
          id: main
          categories:
          - name: Light
          - name: Light
        - capabilities:
          - id: switch
            version: 1
          - id: switch
            version: 1
          - id: switch
            version: 1
          - id: switch
            version: 1
          - id: switch
            version: 1
          id: main
          categories:
          - name: Light
          - name: Light
        - capabilities:
          - id: switch
            version: 1
          - id: switch
            version: 1
          - id: switch
            version: 1
          - id: switch
            version: 1
          - id: switch
            version: 1
          id: main
          categories:
          - name: Light
          - name: Light
        metadata:
          key: metadata
      properties:
        components:
          description: A list of `[ 1..20 ]` components for this profile.
          items:
            $ref: '#/components/schemas/DeviceComponentReference'
          maxItems: 20
          minItems: 1
          type: array
        metadata:
          additionalProperties:
            format: ^[-_!.~'() *0-9a-zA-Z\\p{L}]{1,1024}$
            type: string
          description: Additional information about the device profile, limited to
            10 entries.
          type: object
      type: object
    CreateDeviceProfileRequest:
      example:
        components:
        - capabilities:
          - id: switch
            version: 1
          - id: switch
            version: 1
          - id: switch
            version: 1
          - id: switch
            version: 1
          - id: switch
            version: 1
          id: main
          categories:
          - name: Light
          - name: Light
        - capabilities:
          - id: switch
            version: 1
          - id: switch
            version: 1
          - id: switch
            version: 1
          - id: switch
            version: 1
          - id: switch
            version: 1
          id: main
          categories:
          - name: Light
          - name: Light
        - capabilities:
          - id: switch
            version: 1
          - id: switch
            version: 1
          - id: switch
            version: 1
          - id: switch
            version: 1
          - id: switch
            version: 1
          id: main
          categories:
          - name: Light
          - name: Light
        - capabilities:
          - id: switch
            version: 1
          - id: switch
            version: 1
          - id: switch
            version: 1
          - id: switch
            version: 1
          - id: switch
            version: 1
          id: main
          categories:
          - name: Light
          - name: Light
        - capabilities:
          - id: switch
            version: 1
          - id: switch
            version: 1
          - id: switch
            version: 1
          - id: switch
            version: 1
          - id: switch
            version: 1
          id: main
          categories:
          - name: Light
          - name: Light
        metadata:
          key: metadata
        name: thermostat1.model1
      properties:
        name:
          description: A name for the device profile.
          example: thermostat1.model1
          format: ^(?!\s)[-_!.~'() *0-9a-zA-Z\p{L}]{1,100}(?<!\s)$
          maxLength: 100
          minLength: 1
          type: string
        components:
          description: A list of components for this profile. Exactly 1 component
            ID must be `main`.
          items:
            $ref: '#/components/schemas/DeviceComponentReference'
          maxItems: 20
          minItems: 1
          type: array
        metadata:
          additionalProperties:
            format: ^[-_!.~'() *0-9a-zA-Z\\p{L}]{1,1024}$
            type: string
          description: Additional information about the device profile, limited to
            10 entries.
          type: object
      required:
      - components
      - name
      type: object
    DeleteDeviceProfileResponse:
      type: object
    DeviceProfileStatus:
      default: DEVELOPMENT
      description: |
        The lifecycle status of a device profile.
        'DEVELOPMENT' - Device profile can be modified. The profile is only available to the developer and can only be used with a self-published app.
        'PUBLISHED' - Device profile can be shared with other users, but cannot be modified.
      enum:
      - DEVELOPMENT
      - PUBLISHED
      type: string
    LocaleReference:
      properties:
        tag:
          description: The tag of the locale as defined in [RFC bcp47](http://www.rfc-editor.org/rfc/bcp/bcp47.txt).
          example: en
          type: string
      type: object
    LocaleTag:
      description: The tag of the locale as defined in [RFC bcp47](http://www.rfc-editor.org/rfc/bcp/bcp47.txt).
      example: en
      type: string
    ComponentTranslations:
      description: A map of i18n translations.
      properties:
        label:
          description: Short UTF-8 text used when displaying the component.
          example: Main
          maxLength: 25
          type: string
        description:
          description: UTF-8 text describing the component.
          example: The main component of the device.
          maxLength: 255
          type: string
      type: object
    SmartAppEventRequest:
      example:
        name: name
        attributes:
          key: attributes
      properties:
        name:
          description: An arbitrary name for the custom SmartApp event.  Typically
            useful as a hook for in-app routing.
          format: ^[a-zA-Z_]{1,36}$
          type: string
        attributes:
          additionalProperties:
            type: string
          description: |
            An arbitrary set of key / value pairs useful for passing any custom metadata.

            * Supports a maximum of 10 entries.
            * Maximum key length: 36 Unicode characters in UTF-8
            * Maximum value length: 256 Unicode characters in UTF-8
            * Allowed characters for *keys* are letters, plus the following special characters: `:`, `_`
            * Allowed characters for *values* are letters, whitespace, and numbers, plus the following special characters: `+`, `-`, `=`, `.`, `_`, `:`, `/`
            * If you need characters outside this allowed set, you can apply standard base-64 encoding.
          type: object
      type: object
    SmartAppDashboardCardEventRequest:
      description: |
        An event used to trigger a client action on a SmartApp dashboard card.
      example:
        cardId: my_dashboard_card
      properties:
        cardId:
          description: A developer defined dashboard card ID.
          example: my_dashboard_card
          format: ^[a-z0-9.-_]{1,36}$
          type: string
        lifecycle:
          $ref: '#/components/schemas/DashboardCardLifecycle'
      type: object
    DashboardCardLifecycle:
      enum:
      - UPDATE
      - DELETE
      type: string
    PagedLocations:
      description: Represents a single page of Locations available in a user account.
      example:
        _links:
          next:
            href: https://...
          previous:
            href: https://...
        items:
        - locationId: 6b3d1909-1e1c-43ec-adc2-5f941de4fbf9
          name: Home
        - locationId: 6b3d1909-1e1c-43ec-adc2-5f941de4fbf9
          name: Home
      properties:
        items:
          items:
            $ref: '#/components/schemas/PagedLocation'
          type: array
        _links:
          $ref: '#/components/schemas/Links'
      type: object
    PagedLocation:
      description: A slimmed down represenation of the Location model.
      example:
        locationId: 6b3d1909-1e1c-43ec-adc2-5f941de4fbf9
        name: Home
      properties:
        locationId:
          description: The ID of the location.
          format: uuid
          type: string
        name:
          description: A name given for the location (eg. Home)
          type: string
      type: object
    Location:
      example:
        locationId: 6b3d1909-1e1c-43ec-adc2-5f941de4fbf9
        name: Home
        countryCode: USA
        latitude: 45.00708112
        longitude: -93.11223629
        regionRadius: 150
        temperatureScale: F
        timeZoneId: America/Chicago
        locale: en
      properties:
        locationId:
          description: The ID of the location.
          format: uuid
          type: string
        name:
          description: A name given for the location (eg. Home)
          type: string
        countryCode:
          description: An ISO Alpha-3 country code.  (i.e. GBR, USA)
          example: USA
          type: string
        latitude:
          description: A geographical latitude.
          type: number
        longitude:
          description: A geographical longitude.
          type: number
        regionRadius:
          description: The radius in meters around latitude and longitude which defines
            this location.
          format: int32
          type: integer
        temperatureScale:
          description: The desired temperature scale used within location. Value can
            be F or C.
          type: string
        timeZoneId:
          description: |
            An ID matching the Java Time Zone ID of the location. Automatically generated if latitude and longitude have been
            provided.
          type: string
        locale:
          description: An IETF BCP 47 language tag representing the chosen locale
            for this location.
          example: en
          type: string
        backgroundImage:
          description: Not currently in use.
          type: string
        additionalProperties:
          additionalProperties:
            type: string
          description: Additional information about the location that allows SmartThings
            to further define your location.
          type: object
      type: object
    CreateLocationRequest:
      example:
        name: Home
        countryCode: USA
        latitude: 45.00708112
        longitude: -93.11223629
        regionRadius: 150
        temperatureScale: F
        timeZoneId: America/Chicago
        locale: en
      properties:
        name:
          description: A nickname given for the location (eg. Home)
          maxLength: 40
          minLength: 1
          type: string
        countryCode:
          description: An ISO Alpha-3 country code.  (i.e. GBR, USA)
          type: string
        latitude:
          description: A geographical latitude.
          type: number
        longitude:
          description: A geographical longitude.
          type: number
        regionRadius:
          description: The radius in meters around latitude and longitude which defines
            this location.
          type: integer
        temperatureScale:
          description: The desired temperature scale used within location. Value can
            be F or C.
          type: string
        locale:
          description: An IETF BCP 47 language tag representing the chosen locale
            for this location.
          example: en
          type: string
        additionalProperties:
          additionalProperties:
            type: string
          description: Additional information about the location that allows SmartThings
            to further define your location.
          type: object
      required:
      - countryCode
      - name
      type: object
    UpdateLocationRequest:
      example:
        name: Home
        temperatureScale: F
      properties:
        name:
          description: A nickname for the location.
          maxLength: 40
          minLength: 1
          type: string
        latitude:
          description: A geographical latitude.
          type: number
        longitude:
          description: A geographical longitude.
          type: number
        regionRadius:
          description: The radius in meters around latitude and longitude which defines
            this location.
          type: integer
        temperatureScale:
          description: The desired temperature scale used within location. Value can
            be F or C.
          type: string
        locale:
          description: An IETF BCP 47 language tag representing the chosen locale
            for this location.
          example: en
          type: string
        additionalProperties:
          additionalProperties:
            type: string
          description: Additional information about the location that allows SmartThings
            to further define your location.
          type: object
      required:
      - name
      type: object
    DeleteLocationResponse:
      description: An empty object response.
      example: {}
      type: object
    PagedRooms:
      description: Represents a single page of Rooms available in a Location.
      example:
        _links:
          next:
            href: https://...
          previous:
            href: https://...
        items:
        - roomId: bdd8a15f-33d4-41fc-b33c-75ce85e99d24
          locationId: 6b3d1909-1e1c-43ec-adc2-5f941de4fbf9
          name: Living Room
        - roomId: bdd8a15f-33d4-41fc-b33c-75ce85e99d24
          locationId: 6b3d1909-1e1c-43ec-adc2-5f941de4fbf9
          name: Living Room
      properties:
        items:
          items:
            $ref: '#/components/schemas/Room'
          type: array
        _links:
          $ref: '#/components/schemas/Links'
      type: object
    Room:
      example:
        roomId: bdd8a15f-33d4-41fc-b33c-75ce85e99d24
        locationId: 6b3d1909-1e1c-43ec-adc2-5f941de4fbf9
        name: Living Room
      properties:
        roomId:
          description: The ID of the room.
          format: uuid
          type: string
        locationId:
          description: The ID of the parent location.
          format: uuid
          type: string
        name:
          description: A name given for the room (eg. Living Room)
          type: string
        backgroundImage:
          description: Not currently in use.
          type: string
      type: object
    CreateRoomRequest:
      example:
        name: Living Room
      properties:
        name:
          description: A name given for the room (eg. Living Room)
          maxLength: 40
          minLength: 1
          type: string
      required:
      - name
      type: object
    UpdateRoomRequest:
      example:
        name: Living Room
      properties:
        name:
          description: A name for the room.
          maxLength: 40
          minLength: 1
          type: string
      required:
      - name
      type: object
    DeleteRoomResponse:
      description: An empty object response.
      example: {}
      type: object
    Mode:
      properties:
        id:
          description: Globally unique id for the mode.
          example: 9206ea57-2e2e-414c-a792-9087117ca3d8
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
        label:
          description: A name provided by the User. Unique per location, updatable.
          example: Our House
          maxLength: 25
          minLength: 1
          type: string
        name:
          description: A name provided when the mode was created. The name is unique
            per location, and can not be updated.
          example: Home
          format: ^[a-zA-Z0-9.-_]+$
          type: string
      required:
      - id
      - label
      - name
      type: object
    InstalledApp:
      example:
        installedAppId: 8885b9c3-a50d-427e-ad07-d7a2f94421af
        installedAppType: WEBHOOK_SMART_APP
        installedAppStatus: PENDING
        displayName: Color App
        appId: fdd21b3e-5880-44c8-9f61-ce474814f587
        referenceId: c71b0a5b-7dab-41fe-b75f-7cf30246468e
        locationId: 4ae86cfc-63be-4bcc-8514-836c873b4d7a
        owner:
          ownerType: USER
          ownerId: 3f178632-79ed-4358-94de-280dbd7c206c
        notices:
        - USER_PAUSE
        - RECONFIGURE
        createdDate: 2017-05-19T12:39:37.000+0000
        lastUpdatedDate: 2017-05-19T12:39:37.000+0000
      properties:
        installedAppId:
          description: The ID of the installed app.
          format: uuid
          type: string
        installedAppType:
          $ref: '#/components/schemas/InstalledAppType'
        installedAppStatus:
          $ref: '#/components/schemas/InstalledAppStatus'
        displayName:
          description: A user defined name for the installed app. May be null.
          maxLength: 100
          type: string
        appId:
          description: The ID of the app.
          type: string
        referenceId:
          description: |
            A reference to an upstream system.  For example, Behaviors would reference the behaviorId. May be null.
          type: string
        locationId:
          description: The ID of the location to which the installed app may belong.
          format: uuid
          type: string
        owner:
          $ref: '#/components/schemas/Owner'
        notices:
          items:
            $ref: '#/components/schemas/Notice'
          type: array
        createdDate:
          description: A UTC ISO-8601 Date-Time String
          format: date-time
          type: string
        lastUpdatedDate:
          description: A UTC ISO-8601 Date-Time String
          format: date-time
          type: string
        ui:
          $ref: '#/components/schemas/InstalledApp_ui'
        iconImage:
          $ref: '#/components/schemas/InstalledApp_iconImage'
        classifications:
          description: |
            An App maybe associated to many classifications.  A classification drives how the integration is presented
            to the user in the SmartThings mobile clients.  These classifications include:
            * AUTOMATION - Denotes an integration that should display under the "Automation" tab in mobile clients.
            * SERVICE - Denotes an integration that is classified as a "Service".
            * DEVICE - Denotes an integration that should display under the "Device" tab in mobile clients.
            * CONNECTED_SERVICE - Denotes an integration that should display under the "Connected Services" menu in mobile clients.
            * HIDDEN - Denotes an integration that should not display in mobile clients
          items:
            description: |
              An App maybe associated to many classifications.  A classification drives how the integration is presented
              to the user in the SmartThings mobile clients.  These classifications include:
              * AUTOMATION - Denotes an integration that should display under the "Automation" tab in mobile clients.
              * SERVICE - Denotes an integration that is classified as a "Service".
              * DEVICE - Denotes an integration that should display under the "Device" tab in mobile clients.
              * CONNECTED_SERVICE - Denotes an integration that should display under the "Connected Services" menu in mobile clients.
              * HIDDEN - Denotes an integration that should not display in mobile clients
            enum:
            - AUTOMATION
            - SERVICE
            - DEVICE
            - CONNECTED_SERVICE
            - HIDDEN
            type: string
          type: array
        principalType:
          description: Denotes the principal type to be used with the app.  Default
            is LOCATION.
          enum:
          - LOCATION
          - USER_LEVEL
          type: string
        singleInstance:
          default: false
          description: |
            Inform the installation systems that the associated app can only be installed once within a user's account.
          type: boolean
      required:
      - appId
      - classifications
      - createdDate
      - installedAppId
      - installedAppStatus
      - installedAppType
      - lastUpdatedDate
      - notices
      - owner
      - principalType
      - singleInstance
      type: object
    InstallConfiguration:
      description: An configuration instance of an Installed App.
      example:
        installedAppId: 8885b9c3-a50d-427e-ad07-d7a2f94421af
        configurationId: c71b0a5b-7dab-41fe-b75f-7cf30246468e
        configurationStatus: DONE
        createdDate: 2017-05-19T12:39:37.000+0000
        lastUpdatedDate: 2017-05-19T12:39:37.000+0000
      properties:
        installedAppId:
          description: The ID of the installed app.
          format: uuid
          type: string
        configurationId:
          description: The ID to this configration instance.
          format: uuid
          type: string
        configurationStatus:
          $ref: '#/components/schemas/InstallConfigurationStatus'
        createdDate:
          description: A UTC ISO-8601 Date-Time String
          format: date-time
          type: string
        lastUpdatedDate:
          description: A UTC ISO-8601 Date-Time String
          format: date-time
          type: string
      type: object
    InstallConfigurationDetail:
      description: Encompasses both a configuration value, and any required permissions
        that maybe needed.
      example:
        installedAppId: 8885b9c3-a50d-427e-ad07-d7a2f94421af
        configurationId: c71b0a5b-7dab-41fe-b75f-7cf30246468e
        configurationStatus: AUTHORIZED
        createdDate: 2017-05-19T12:39:37.000+0000
        lastUpdatedDate: 2017-05-19T12:39:37.000+0000
        config:
          switches:
          - valueType: DEVICE
            deviceConfig:
              deviceId: 5ccbf4ba-7b5f-4eb3-85b8-ab8705ff8d61
              componentId: main
              permissions:
              - r:devices:5ccbf4ba-7b5f-4eb3-85b8-ab8705ff8d61
      properties:
        installedAppId:
          description: The ID of the installed app.
          format: uuid
          type: string
        configurationId:
          description: The ID to this configration instance.
          format: uuid
          type: string
        configurationStatus:
          $ref: '#/components/schemas/InstallConfigurationStatus'
        config:
          additionalProperties:
            $ref: '#/components/schemas/ConfigEntries'
          description: |
            A multi-map of configurations for an Installed App.  The map 'key' is the configuration name
            and the 'value' is an array of ConfigEntry models each containing a value and associated permissions.  The config
            key is alpha-numeric, may contain dashes, underscores, periods, and must be less then 50 characters long.
          example:
            switches:
            - valueType: DEVICE
              deviceConfig:
                deviceId: 31192dc9-eb45-4d90-b606-21e9b66d8c2b
                componentId: main
                permissions:
                - r:devices:31192dc9-eb45-4d90-b606-21e9b66d8c2b
            - valueType: DEVICE
              deviceConfig:
                deviceId: bea6074d-7dde-4936-ab79-373fa13250d4
                componentId: main
                permissions:
                - r:devices:bea6074d-7dde-4936-ab79-373fa13250d4
            color:
            - valueType: STRING
              stringConfig: {}
          type: object
        createdDate:
          description: A UTC ISO-8601 Date-Time String
          format: date-time
          type: string
        lastUpdatedDate:
          description: A UTC ISO-8601 Date-Time String
          format: date-time
          type: string
      type: object
    StringConfig:
      description: A simple string configuration.
      example:
        value: 31192dc9-eb45-4d90-b606-21e9b66d8c2b
      properties:
        value:
          description: A config value
          maxLength: 2048
          type: string
      type: object
    DeviceConfig:
      description: A device and component configuration with any required permissions.
      example:
        deviceId: 31192dc9-eb45-4d90-b606-21e9b66d8c2b
        componentId: main
        permissions:
        - r:devices:31192dc9-eb45-4d90-b606-21e9b66d8c2b
      properties:
        deviceId:
          description: The ID of the device.
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
        componentId:
          description: The component ID on the device.
          format: ^[-_!.~'()*0-9a-zA-Z]{1,36}$
          type: string
        permissions:
          items:
            type: string
          maxItems: 25
          type: array
      type: object
    PermissionConfig:
      description: Required permissions for the installed app.
      example:
        permissions:
        - w:notifications
        - r:devices:*
      properties:
        permissions:
          items:
            type: string
          maxItems: 25
          minItems: 1
          type: array
      type: object
    ModeConfig:
      description: A mode configuration.
      example:
        modeId: 9206ea57-2e2e-414c-a792-9087117ca3d8
      properties:
        modeId:
          description: The ID of the mode.
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
      type: object
    SceneConfig:
      description: A scene configuration.
      example:
        sceneId: 9206ea57-2e2e-414c-a792-9087117ca3d8
        permissions:
        - x:scences:9206ea57-2e2e-414c-a792-9087117ca3d8
      properties:
        sceneId:
          description: The ID of the scene.
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
        permissions:
          items:
            type: string
          maxItems: 25
          type: array
      type: object
    MessageConfig:
      description: A message configuration.
      example:
        messageGroupKey: leaks
      properties:
        messageGroupKey:
          description: The key value of the message group.
          format: ^[a-zA-Z0-9._]{1,36}$
          type: string
      type: object
    ConfigEntry:
      description: A configuration value type and the correspodning configuration.
      example:
        valueType: DEVICE
        deviceConfig:
          deviceId: 31192dc9-eb45-4d90-b606-21e9b66d8c2b
          componentId: main
          permissions:
          - r:devices:31192dc9-eb45-4d90-b606-21e9b66d8c2b
      properties:
        valueType:
          description: The value type.
          enum:
          - STRING
          - DEVICE
          - PERMISSION
          - MODE
          - SCENE
          - MESSAGE
          type: string
        stringConfig:
          $ref: '#/components/schemas/StringConfig'
        deviceConfig:
          $ref: '#/components/schemas/DeviceConfig'
        permissionConfig:
          $ref: '#/components/schemas/PermissionConfig'
        modeConfig:
          $ref: '#/components/schemas/ModeConfig'
        sceneConfig:
          $ref: '#/components/schemas/SceneConfig'
        messageConfig:
          $ref: '#/components/schemas/MessageConfig'
      type: object
    ConfigEntries:
      description: A list of available configuration values.
      items:
        $ref: '#/components/schemas/ConfigEntry'
      type: array
    ConfigMap:
      additionalProperties:
        $ref: '#/components/schemas/ConfigEntries'
      description: |
        A multi-map of configurations for an Installed App.  The map 'key' is the configuration name
        and the 'value' is an array of ConfigEntry models each containing a value and associated permissions.  The config
        key is alpha-numeric, may contain dashes, underscores, periods, and must be less then 50 characters long.
      example:
        switches:
        - valueType: DEVICE
          deviceConfig:
            deviceId: 31192dc9-eb45-4d90-b606-21e9b66d8c2b
            componentId: main
            permissions:
            - r:devices:31192dc9-eb45-4d90-b606-21e9b66d8c2b
        - valueType: DEVICE
          deviceConfig:
            deviceId: bea6074d-7dde-4936-ab79-373fa13250d4
            componentId: main
            permissions:
            - r:devices:bea6074d-7dde-4936-ab79-373fa13250d4
        color:
        - valueType: STRING
          stringConfig: {}
      type: object
    InstalledAppType:
      description: Denotes the type of installed app.
      enum:
      - LAMBDA_SMART_APP
      - WEBHOOK_SMART_APP
      type: string
    InstallConfigurationStatus:
      description: |
        Denotes the current state of a configuration instance.  'STAGED' configuration is used during active
        modification to config.  A configuration is marked 'DONE' once it is deemed finished.  At this point it
        is immutable, meaning it can't be changed.  A status of 'AUTHORIZED' means the apps permissions have been
        authorized by the consumer.  Installed Apps in 'AUTHORIZED' state are fully installed and used by the
        SmartThings platform.  A status of 'REVOKED' means the apps permissions have been revoked.
      enum:
      - STAGED
      - DONE
      - AUTHORIZED
      - REVOKED
      type: string
    InstalledAppStatus:
      description: |
        Denotes the current state of an install.  'PENDING' is used during active modification to the install's config
        prior to 'AUTHORIZATION'. A status of 'AUTHORIZED' means the install's permissions have been authorized by the
        consumer. Installed Apps in 'AUTHORIZED' state are fully installed and usable by the SmartThings platform.  A
        status of 'REVOKED' means the install's permissions have been revoked.  A status of 'DISABLED' means a previously
        'AUTHORIZED' Installed App will not execute.
      enum:
      - PENDING
      - AUTHORIZED
      - REVOKED
      - DISABLED
      type: string
    PagedInstalledApps:
      description: Represents a single page of InstalledApps available in a user account.
      example:
        _links:
          next:
            href: https://...
          previous:
            href: https://...
        items:
        - installedAppId: 8885b9c3-a50d-427e-ad07-d7a2f94421af
          installedAppType: WEBHOOK_SMART_APP
          installedAppStatus: PENDING
          displayName: Color App
          appId: fdd21b3e-5880-44c8-9f61-ce474814f587
          referenceId: c71b0a5b-7dab-41fe-b75f-7cf30246468e
          locationId: 4ae86cfc-63be-4bcc-8514-836c873b4d7a
          owner:
            ownerType: USER
            ownerId: 3f178632-79ed-4358-94de-280dbd7c206c
          notices:
          - USER_PAUSE
          - RECONFIGURE
          createdDate: 2017-05-19T12:39:37.000+0000
          lastUpdatedDate: 2017-05-19T12:39:37.000+0000
        - installedAppId: 8885b9c3-a50d-427e-ad07-d7a2f94421af
          installedAppType: WEBHOOK_SMART_APP
          installedAppStatus: PENDING
          displayName: Color App
          appId: fdd21b3e-5880-44c8-9f61-ce474814f587
          referenceId: c71b0a5b-7dab-41fe-b75f-7cf30246468e
          locationId: 4ae86cfc-63be-4bcc-8514-836c873b4d7a
          owner:
            ownerType: USER
            ownerId: 3f178632-79ed-4358-94de-280dbd7c206c
          notices:
          - USER_PAUSE
          - RECONFIGURE
          createdDate: 2017-05-19T12:39:37.000+0000
          lastUpdatedDate: 2017-05-19T12:39:37.000+0000
      properties:
        items:
          items:
            $ref: '#/components/schemas/InstalledApp'
          type: array
        _links:
          $ref: '#/components/schemas/Links'
      type: object
    PagedInstallConfigurations:
      description: Represents a single page of InstallConfiguration models available
        for an InstalledApp.
      example:
        _links:
          next:
            href: https://...
          previous:
            href: https://...
        items:
        - installedAppId: 8885b9c3-a50d-427e-ad07-d7a2f94421af
          configurationId: c71b0a5b-7dab-41fe-b75f-7cf30246468e
          configurationStatus: DONE
          createdDate: 2017-05-19T12:39:37.000+0000
          lastUpdatedDate: 2017-05-19T12:39:37.000+0000
        - installedAppId: 8885b9c3-a50d-427e-ad07-d7a2f94421af
          configurationId: c71b0a5b-7dab-41fe-b75f-7cf30246468e
          configurationStatus: DONE
          createdDate: 2017-05-19T12:39:37.000+0000
          lastUpdatedDate: 2017-05-19T12:39:37.000+0000
      properties:
        items:
          items:
            $ref: '#/components/schemas/InstallConfiguration'
          type: array
        _links:
          $ref: '#/components/schemas/Links'
      type: object
    DeleteInstalledAppResponse:
      description: The number of deleted installed apps.
      example:
        count: 0
      properties:
        count:
          format: int32
          type: integer
      type: object
    CreateInstalledAppEventsRequest:
      example:
        smartAppEvents:
        - name: name
          attributes:
            key: attributes
        - name: name
          attributes:
            key: attributes
        - name: name
          attributes:
            key: attributes
        - name: name
          attributes:
            key: attributes
        - name: name
          attributes:
            key: attributes
        smartAppDashboardCardEvents:
        - cardId: my_dashboard_card
        - cardId: my_dashboard_card
        - cardId: my_dashboard_card
        - cardId: my_dashboard_card
        - cardId: my_dashboard_card
      properties:
        smartAppEvents:
          description: |
            An array of smartapp events used to trigger client behavior in loaded web plugin detail pages.  Events will
            be delivered to JavaScript event handler of all active client processes related to parameterized installed app.
          items:
            $ref: '#/components/schemas/SmartAppEventRequest'
          maxItems: 8
          minItems: 1
          type: array
        smartAppDashboardCardEvents:
          description: |
            An array of smartapp dashboard card events used to trigger client behavior for dashboard cards.
            Dashboard card events are directives to a SmartThings client to take actions in relation to lifecycle changes
            to a specific dashboard card.  These events are not delivered to the web plugin event handler.
          items:
            $ref: '#/components/schemas/SmartAppDashboardCardEventRequest'
          maxItems: 8
          minItems: 1
          type: array
      type: object
    CreateInstalledAppEventsResponse:
      type: object
    Notice:
      properties:
        code:
          $ref: '#/components/schemas/NoticeCode'
        badgeUrl:
          description: The url of the badge icon for the notice card
          type: string
        message:
          description: The localized message to be displayed
          type: string
        actions:
          description: The action(s) a user can take to resolve this notice
          items:
            $ref: '#/components/schemas/NoticeAction'
          type: array
      type: object
    NoticeCode:
      description: |
        * USER_PAUSE - Denotes installed app is paused by the user and user action is required to unpause it.
        * REVISIT - Denotes installed app is still running and user action may be required to reconcile a configuration.
        * RECONFIGURE - Denotes installed app is no longer running and user action is required to resolve a configuration issue.
      enum:
      - USER_PAUSE
      - REVISIT
      - RECONFIGURE
      type: string
    NoticeAction:
      default: none
      description: An action the user can take to resolve a notice
      enum:
      - DISMISS
      - EDIT
      - NONE
      type: string
    OnceSchedule:
      properties:
        time:
          description: The time in millis from jan 1 1970 UTC for ONCE schedules.
            Must be less than 2 years from now.
          format: int64
          type: integer
        overwrite:
          type: boolean
      required:
      - time
      type: object
    CronSchedule:
      properties:
        expression:
          description: |
            The cron expression for the schedule for CRON schedules.
            The format matches that specified by the [Quartz scheduler](http://www.quartz-scheduler.org/documentation/quartz-2.x/tutorials/crontrigger.html) but should not include the seconds (1st)
            field. The exact second will be chosen at random but will remain consistent. The years part must be les than 2 years from now.
          example: 15 10 * * ? *
          maxLength: 256
          type: string
        timezone:
          description: The timezone id for CRON schedules.
          example: GMT
          type: string
      required:
      - expression
      - timezone
      type: object
    ScheduleRequest:
      example:
        name: on_schedule_1
        cron:
          expression: 15 10 * * ? *
          timezone: GMT
      properties:
        once:
          $ref: '#/components/schemas/OnceSchedule'
        name:
          description: The unique per installed app name of the schedule.
          example: on_schedule-1
          format: ^[A-Za-z0-9._\-]{1,36}$
          maxLength: 36
          minLength: 1
          type: string
        cron:
          $ref: '#/components/schemas/CronSchedule'
      required:
      - name
      type: object
    Schedule:
      example:
        installedAppId: 736e3903-001c-4d40-b408-ff40d162a06b
        scheduledExecutions:
        - 1490892856362
        name: on_schedule-1
        cron:
          expression: 15 10 * * ? *
          timezone: GMT
      properties:
        installedAppId:
          description: The ID of the installed app.
          example: 736e3903-001c-4d40-b408-ff40d162a06b
          format: uuid
          type: string
        locationId:
          description: The ID of the location the installed app is in.
          example: 35451c7a-cc23-4838-8a3b-1205090cf161
          format: uuid
          type: string
        scheduledExecutions:
          description: list of scheduled execution times in millis from jan 1 1970
            UTC
          items:
            example: 1490892856362
            format: int64
            type: integer
          type: array
        name:
          description: The unique per installed app name of the schedule.
          example: on_schedule-1
          format: ^[A-Za-z0-9._\-]{1,36}$
          maxLength: 36
          minLength: 1
          type: string
        cron:
          $ref: '#/components/schemas/CronSchedule'
      required:
      - name
      type: object
    PagedSchedules:
      description: An array of schedules
      example:
        items:
        - scheduledExecutions:
          - 1505752823000
          name: schedule-name
          cron:
            expression: 0/10 * * * ? *
            timezone: America/Chicago
          installedAppId: 937e11d5-317d-445f-bec7-3055fdb827a3
          locationId: 8418eebd-8d5f-48dd-a028-054744j8secb
        _links: {}
      properties:
        items:
          items:
            $ref: '#/components/schemas/Schedule'
          type: array
        _links:
          $ref: '#/components/schemas/Links'
      type: object
    DeleteScheduleResponse:
      description: Delete schedule response
      type: object
    Subscription:
      example:
        id: 5e1b134b-bd85-4125-9c25-4a8291e754aa
        installedAppId: fb05c874-cf1d-406a-930c-69a081e0eaee
        sourceType: DEVICE
        device:
          componentId: main
          deviceId: e457978e-5e37-43e6-979d-18112e12c961,
          capability: contactSensor,
          attribute: contact,
          stateChangeOnly: true,
          subscriptionName: contact_subscription',
          value: '*'
      properties:
        id:
          description: The id of the subscription.
          example: 736e3903-001c-4d40-b408-ff40d162a06b
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
        installedAppId:
          description: The id of the subscribing app.
          example: 499e28ba-b33b-49c9-a5a1-cce40e41f8a6
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
        sourceType:
          $ref: '#/components/schemas/SubscriptionSource'
        device:
          $ref: '#/components/schemas/DeviceSubscriptionDetail'
        capability:
          $ref: '#/components/schemas/CapabilitySubscriptionDetail'
        mode:
          $ref: '#/components/schemas/ModeSubscriptionDetail'
        deviceLifecycle:
          $ref: '#/components/schemas/DeviceLifecycleDetail'
        deviceHealth:
          $ref: '#/components/schemas/DeviceHealthDetail'
        securityArmState:
          $ref: '#/components/schemas/SecurityArmStateDetail'
        hubHealth:
          $ref: '#/components/schemas/HubHealthDetail'
        sceneLifecycle:
          $ref: '#/components/schemas/SceneLifecycleDetail'
      type: object
    SubscriptionSource:
      description: The type of the event that is being subscribed to.
      enum:
      - DEVICE
      - CAPABILITY
      - MODE
      - DEVICE_LIFECYCLE
      - DEVICE_HEALTH
      - SECURITY_ARM_STATE
      - HUB_HEALTH
      - SCENE_LIFECYCLE
      type: string
    SubscriptionRequest:
      example:
        sourceType: DEVICE
        device:
          deviceId: 736e3903-001c-4d40-b408-ff40d162a06b
          componentId: freezer
          capability: temperatureMeasurement
          attribute: temperature
          stateChangeOnly: true
          modes:
          - e34b57fb-e73a-4228-8819-e99502d17890
          - cfa3a42e-5f52-452e-9515-c32bcbea48ce
      properties:
        sourceType:
          $ref: '#/components/schemas/SubscriptionSource'
        device:
          $ref: '#/components/schemas/DeviceSubscriptionDetail'
        capability:
          $ref: '#/components/schemas/CapabilitySubscriptionDetail'
        mode:
          $ref: '#/components/schemas/ModeSubscriptionDetail'
        deviceLifecycle:
          $ref: '#/components/schemas/DeviceLifecycleDetail'
        deviceHealth:
          $ref: '#/components/schemas/DeviceHealthDetail'
        securityArmState:
          $ref: '#/components/schemas/SecurityArmStateDetail'
        hubHealth:
          $ref: '#/components/schemas/HubHealthDetail'
        sceneLifecycle:
          $ref: '#/components/schemas/SceneLifecycleDetail'
      required:
      - sourceType
      type: object
    DeviceSubscriptionDetail:
      description: Details of a subscription of source type DEVICE. The combination
        of subscribed values must be unique per installed app.
      properties:
        deviceId:
          description: The GUID of the device that is subscribed to.
          example: 35451c7a-cc23-4838-8a3b-1205090cf161
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
        componentId:
          default: '*'
          description: The component ID on the device that is subscribed to or * for
            all.
          example: main
          format: ^[-_!.~'()*0-9a-zA-Z]{1,36}$
          type: string
        capability:
          default: '*'
          description: Name of the capability that is subscribed to or * for all.
          example: switch
          maxLength: 128
          minLength: 1
          type: string
        attribute:
          default: '*'
          description: Name of the capabilities attribute or * for all.
          example: switch
          maxLength: 256
          minLength: 1
          type: string
        value:
          description: A particular value for the attribute that will trigger the
            subscription or * for all.
          example:
          - '*'
          - 1
          - "on"
          - key: 30
          properties: {}
          type: object
        stateChangeOnly:
          description: Only execute the subscription if the subscribed event is a
            state change from previous events.
          type: boolean
        subscriptionName:
          description: A name for the subscription that will be passed to the installed
            app. Must be unique per installed app.
          format: ^[-_!.~'()*0-9a-zA-Z]{1,36}$
          type: string
        modes:
          description: List of mode ID's that the subscription will execute for. If
            not provided then all modes will be supported.
          items:
            description: Mode ID
            format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
            type: string
          type: array
      required:
      - deviceId
      type: object
    CapabilitySubscriptionDetail:
      description: Details of a subscription of source type CAPABILITY. The combination
        of subscribed values must be unique per installed app.
      properties:
        locationId:
          description: The id of the location that both the app and source device
            are in.
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
        capability:
          description: Name of the capability that is subscribed to.
          example: switch
          maxLength: 128
          minLength: 1
          type: string
        attribute:
          default: '*'
          description: Name of the capabilities attribute or * for all.
          example: switch
          maxLength: 256
          minLength: 1
          type: string
        value:
          description: A particular value for the attribute that will trigger the
            subscription or * for all.
          example:
          - '*'
          - 1
          - "on"
          - key: 30
          properties: {}
          type: object
        stateChangeOnly:
          default: true
          description: Only execute the subscription if the subscribed event is a
            state change from previous events.
          type: boolean
        subscriptionName:
          description: A name for the subscription that will be passed to the installed
            app. Must be unique per installed app.
          format: ^[-_!.~'()*0-9a-zA-Z]{1,36}$
          type: string
        modes:
          description: List of modes that the subscription will execute for. If not
            provided then all modes will be supported.
          items:
            description: Mode ID
            format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
            type: string
          type: array
      required:
      - capability
      - locationId
      type: object
    SubscriptionDelete:
      description: The number of deleted subscriptions
      example:
        count: 0
      properties:
        count:
          format: int32
          type: integer
      type: object
    PagedSubscriptions:
      description: An array of subscriptions
      example:
        _links:
          next:
            href: https://...
          previous:
            href: https://...
        items:
        - id: 5e1b134b-bd85-4125-9c25-4a8291e754aa
          installedAppId: fb05c874-cf1d-406a-930c-69a081e0eaee
          sourceType: DEVICE
          device:
            componentId: main
            deviceId: e457978e-5e37-43e6-979d-18112e12c961,
            capability: contactSensor,
            attribute: contact,
            stateChangeOnly: true,
            subscriptionName: contact_subscription',
            value: '*'
        - id: 5e1b134b-bd85-4125-9c25-4a8291e754aa
          installedAppId: fb05c874-cf1d-406a-930c-69a081e0eaee
          sourceType: DEVICE
          device:
            componentId: main
            deviceId: e457978e-5e37-43e6-979d-18112e12c961,
            capability: contactSensor,
            attribute: contact,
            stateChangeOnly: true,
            subscriptionName: contact_subscription',
            value: '*'
      properties:
        items:
          items:
            $ref: '#/components/schemas/Subscription'
          type: array
        _links:
          $ref: '#/components/schemas/Links'
      type: object
    ModeSubscriptionDetail:
      description: Details of a subscription of source type MODE. This will subscribe
        to all mode changes for the given location. The installed app can then act
        on the resulting mode change event accordingly.
      properties:
        locationId:
          description: The GUID for the location to subscribe to mode changes.
          example: 9f24edfd-f2e5-4a82-8a24-c1955ee46419
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
      required:
      - locationId
      type: object
    DeviceLifecycleDetail:
      description: Details of a subscription of source type DEVICE_LIFECYCLE. Only
        one of deviceIds or locationId should be supplied.
      properties:
        deviceIds:
          description: An array of GUIDs of devices being subscribed to. A max of
            20 GUIDs are allowed.
          items:
            description: Device ID
            format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
            type: string
          maxItems: 20
          type: array
        subscriptionName:
          description: A name for the subscription that will be passed to the installed
            app.
          format: ^[-_!.~'()*0-9a-zA-Z]{1,36}$
          type: string
        locationId:
          description: The id of the location that both the app and source device
            are in.
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
      type: object
    DeviceHealthDetail:
      description: Details of a subscription of source type DEVICE_HEALTH. Only one
        of deviceIds or locationId should be supplied.
      properties:
        deviceIds:
          description: An array of GUIDs of devices being subscribed to. A max of
            20 GUIDs are allowed.
          items:
            description: Device ID
            format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
            type: string
          maxItems: 20
          type: array
        subscriptionName:
          description: A name for the subscription that will be passed to the installed
            app.
          format: ^[-_!.~'()*0-9a-zA-Z]{1,36}$
          type: string
        locationId:
          description: The id of the location that both the app and source device
            are in.
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
      type: object
    SecurityArmStateDetail:
      description: Details of a subscription of souce type SECURITY_ARM_STATE
      properties:
        subscriptionName:
          description: A name for the subscription that will be passed to the installed
            app.
          format: ^[-_!.~'()*0-9a-zA-Z]{1,36}$
          type: string
        locationId:
          description: The id of the location that both the app and the security system
            are in.
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
      required:
      - locationId
      type: object
    HubHealthDetail:
      description: Details of a subscription of souce type HUB_HEALTH
      properties:
        subscriptionName:
          description: A name for the subscription that will be passed to the installed
            app.
          format: ^[-_!.~'()*0-9a-zA-Z]{1,36}$
          type: string
        locationId:
          description: The id of the location that both the app and hubs are in
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
      required:
      - locationId
      type: object
    SceneLifecycleDetail:
      description: Details of a subscription of source type SCENE_LIFECYCLE.
      properties:
        subscriptionName:
          description: A name for the subscription that will be passed to the installed
            app.
          format: ^[-_!.~'()*0-9a-zA-Z]{1,36}$
          type: string
        locationId:
          description: The id of the location that both the app and scenes are in.
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
      required:
      - locationId
      type: object
    SubscriptionId:
      description: The subscription id of the subscription.
      format: uuid
      type: string
    SubscriptionFilters:
      description: An array of subscription filters
      items:
        $ref: '#/components/schemas/SubscriptionFilter'
      type: array
    SubscriptionFilter:
      properties:
        type:
          $ref: '#/components/schemas/SubscriptionFilterTypes'
        value:
          description: An array of subscription filter values.
          items:
            type: string
          type: array
        eventType:
          items:
            type: string
          type: array
        attribute:
          items:
            type: string
          type: array
        capability:
          items:
            type: string
          type: array
        component:
          items:
            type: string
          type: array
      type: object
    SubscriptionFilterTypes:
      description: The type of filter
      enum:
      - LOCATIONIDS
      - ROOMIDS
      - DEVICEIDS
      - INSTALLEDSMARTAPPIDS
      - SMARTAPPIDS
      type: string
    SubscriptionFilterValues:
      description: An array of subscription filter values.
      items:
        type: string
      type: array
    SubscriptionFilterEventTypes:
      items:
        type: string
      type: array
    SubscriptionFilterAttributes:
      items:
        type: string
      type: array
    SubscriptionFilterCapabilities:
      items:
        type: string
      type: array
    SubscriptionFilterComponents:
      items:
        type: string
      type: array
    SubscriptionTarget:
      properties:
        url:
          description: The address to send events to.
          format: uri
          type: string
      type: object
    SubscriptionTargetValue:
      description: The address to send events to.
      format: uri
      type: string
    PagedApps:
      description: Represents a single page of Apps available in an account.
      example:
        _links:
          next:
            href: https://...
          previous:
            href: https://...
        items:
        - appName: security-home-monitor
          appId: c71b0a5b-7dab-41fe-b75f-7cf30246468e
          appType: WEBHOOK_SMART_APP
          displayName: Security Home Monitor
          description: |
            An intergration that leverages all security devices in your home - cameras, motion sensors, etc to provide
            you with peace of mind and #security.
          iconImage:
            url: https://smart-home-monitor.com/image
          owner:
            ownerType: USER
            ownerId: 3f178632-79ed-4358-94de-280dbd7c206c
          createdDate: 2017-05-19T12:39:37.000+0000
          lastUpdatedDate: 2017-05-19T12:39:37.000+0000
        - appName: security-home-monitor
          appId: c71b0a5b-7dab-41fe-b75f-7cf30246468e
          appType: WEBHOOK_SMART_APP
          displayName: Security Home Monitor
          description: |
            An intergration that leverages all security devices in your home - cameras, motion sensors, etc to provide
            you with peace of mind and #security.
          iconImage:
            url: https://smart-home-monitor.com/image
          owner:
            ownerType: USER
            ownerId: 3f178632-79ed-4358-94de-280dbd7c206c
          createdDate: 2017-05-19T12:39:37.000+0000
          lastUpdatedDate: 2017-05-19T12:39:37.000+0000
      properties:
        items:
          items:
            $ref: '#/components/schemas/PagedApp'
          type: array
        _links:
          $ref: '#/components/schemas/Links'
      type: object
    PagedApp:
      example:
        appName: security-home-monitor
        appId: c71b0a5b-7dab-41fe-b75f-7cf30246468e
        appType: WEBHOOK_SMART_APP
        displayName: Security Home Monitor
        description: |
          An intergration that leverages all security devices in your home - cameras, motion sensors, etc to provide
          you with peace of mind and #security.
        iconImage:
          url: https://smart-home-monitor.com/image
        owner:
          ownerType: USER
          ownerId: 3f178632-79ed-4358-94de-280dbd7c206c
        createdDate: 2017-05-19T12:39:37.000+0000
        lastUpdatedDate: 2017-05-19T12:39:37.000+0000
      properties:
        appName:
          description: |
            A user defined unique identifier for an app.  It is alpha-numeric, may contain dashes,
            underscores, periods, and be less then 250 characters long.  It must be unique within your account.
          format: ^[a-z0-9.-_]{1,250}$
          type: string
        appId:
          description: A globally unique identifier for an app.
          format: uuid
          type: string
        appType:
          $ref: '#/components/schemas/AppType'
        classifications:
          description: |
            An App maybe associated to many classifications.  A classification drives how the integration is presented
            to the user in the SmartThings mobile clients.  These classifications include:
            * AUTOMATION - Denotes an integration that should display under the "Automation" tab in mobile clients.
            * SERVICE - Denotes an integration that is classified as a "Service".
            * DEVICE - Denotes an integration that should display under the "Device" tab in mobile clients.
            * CONNECTED_SERVICE - Denotes an integration that should display under the "Connected Services" menu in mobile clients.
            * HIDDEN - Denotes an integration that should not display in mobile clients
          items:
            $ref: '#/components/schemas/AppClassification'
          type: array
        displayName:
          description: |
            A default display name for an app.
          maxLength: 75
          type: string
        description:
          description: |
            A default description for an app.
          maxLength: 250
          type: string
        iconImage:
          $ref: '#/components/schemas/IconImage'
        owner:
          $ref: '#/components/schemas/Owner'
        createdDate:
          description: A UTC ISO-8601 Date-Time String
          format: date-time
          type: string
        lastUpdatedDate:
          description: A UTC ISO-8601 Date-Time String
          format: date-time
          type: string
      type: object
    IconImage:
      description: A default icon image for the app.
      example:
        url: https://smart-home-monitor.com/image
      properties:
        url:
          description: |
            A default icon image url for an app. https url required.
          format: uri
          type: string
      type: object
    AppType:
      description: Denotes the type of app.
      enum:
      - LAMBDA_SMART_APP
      - WEBHOOK_SMART_APP
      type: string
    AppClassification:
      description: |
        An App maybe associated to many classifications.  A classification drives how the integration is presented
        to the user in the SmartThings mobile clients.  These classifications include:
        * AUTOMATION - Denotes an integration that should display under the "Automation" tab in mobile clients.
        * SERVICE - Denotes an integration that is classified as a "Service".
        * DEVICE - Denotes an integration that should display under the "Device" tab in mobile clients.
        * CONNECTED_SERVICE - Denotes an integration that should display under the "Connected Services" menu in mobile clients.
        * HIDDEN - Denotes an integration that should not display in mobile clients
      enum:
      - AUTOMATION
      - SERVICE
      - DEVICE
      - CONNECTED_SERVICE
      - HIDDEN
      type: string
    AppRegisterRequest:
      description: |
        Prepares to subscribe an endpoint by sending the endpoint a confirmation message
      type: object
    AppRegisterResponse:
      description: A response object for successful app registration push.
      type: object
    App:
      example:
        appName: security-home-monitor
        appId: c71b0a5b-7dab-41fe-b75f-7cf30246468e
        appType: WEBHOOK_SMART_APP
        classifications:
        - AUTOMATION
        displayName: Security Home Monitor
        description: |
          An intergration that leverages all security devices in your home - cameras, motion sensors, etc to provide
          you with peace of mind and #security.
        iconImage:
          url: https://smart-home-monitor.com/image
        installMetadata:
          certified: "true"
          maxInstalls: -1
        owner:
          ownerType: USER
          ownerId: 3f178632-79ed-4358-94de-280dbd7c206c
        webhookSmartApp:
          targetUrl: https://securityhome.com/smartthings
          publicKey: |
            -----BEGIN PUBLIC KEY-----
            MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAlz00iTNPXIo+RM8n0Eudnh84XDWBFAkR
            L7mkOtXvZiKViCR1qs5LT3SaNy62hkUroexCoii4vjRTSHaQ9FwyBRo98EY9U3qzWmr9Row9ONcQ
            VKFVX6qiwb9SZG7QvHSfqVAuWhMGb1fFGUWl94L7kY0CihF+WJS5fdhXc1h/f/tY1439hruL3+BR
            /idfYjAKDa1+euW4b0HKMi4BdJutL/G5FXjDP7MP5fTRuM52erKpON1pwPD8ow/03MhK4wRikHqS
            /Kvd3UnQ8Q7OSrfJevqR0CqBf83Am1HSHh/bqOfsG0epl+2I1RKLBzB2tSTvMfk0ftiRSq/fRrhl
            xsJmFQIDAQAB
            -----END PUBLIC KEY-----
        createdDate: 2017-05-19T12:39:37.000+0000
        lastUpdatedDate: 2017-05-19T12:39:37.000+0000
      properties:
        appName:
          description: |
            A user defined unique identifier for an app.  It is alpha-numeric, may contain dashes,
            underscores, periods, and be less then 250 characters long.  It must be unique within your account.
          format: ^[a-z0-9.-_]{1,250}$
          type: string
        appId:
          description: A globally unique identifier for an app.
          format: uuid
          type: string
        appType:
          $ref: '#/components/schemas/AppType'
        principalType:
          $ref: '#/components/schemas/PrincipalType'
        classifications:
          description: |
            An App maybe associated to many classifications.  A classification drives how the integration is presented
            to the user in the SmartThings mobile clients.  These classifications include:
            * AUTOMATION - Denotes an integration that should display under the "Automation" tab in mobile clients.
            * SERVICE - Denotes an integration that is classified as a "Service".
            * DEVICE - Denotes an integration that should display under the "Device" tab in mobile clients.
            * CONNECTED_SERVICE - Denotes an integration that should display under the "Connected Services" menu in mobile clients.
            * HIDDEN - Denotes an integration that should not display in mobile clients
          items:
            $ref: '#/components/schemas/AppClassification'
          type: array
        displayName:
          description: |
            A default display name for an app.
          maxLength: 75
          type: string
        description:
          description: |
            A default description for an app.
          maxLength: 250
          type: string
        singleInstance:
          default: false
          description: |
            Inform the installation systems that a particular app can only be installed once within a user's account.
          type: boolean
        iconImage:
          $ref: '#/components/schemas/IconImage'
        installMetadata:
          additionalProperties:
            type: string
          description: System generated metadata that impacts eligibility requirements
            around installing an App.
          type: object
        owner:
          $ref: '#/components/schemas/Owner'
        createdDate:
          description: A UTC ISO-8601 Date-Time String
          format: date-time
          type: string
        lastUpdatedDate:
          description: A UTC ISO-8601 Date-Time String
          format: date-time
          type: string
        lambdaSmartApp:
          $ref: '#/components/schemas/LambdaSmartApp'
        webhookSmartApp:
          $ref: '#/components/schemas/WebhookSmartApp'
        ui:
          $ref: '#/components/schemas/AppUISettings'
      type: object
    LambdaSmartApp:
      description: |
        Details related to a Lambda Smart App implementation.  This model will only be available for apps of type LAMBDA_SMART_APP.
      properties:
        functions:
          description: A list of AWS arns referencing a Lambda function.
          items:
            type: string
          type: array
      type: object
    WebhookSmartApp:
      description: |
        Details related to a Webhook Smart App implementation.  This model will only be available for apps of type WEBHOOK_SMART_APP.
      example:
        appName: security-home-monitor
        appId: c71b0a5b-7dab-41fe-b75f-7cf30246468e
        appType: WEBHOOK_SMART_APP
        owner:
          ownerType: USER
          ownerId: 3f178632-79ed-4358-94de-280dbd7c206c
        targetUrl: https://securityhome.com/smartthings
        targetStatus: CONFIRMED
        publicKey: |
          -----BEGIN PUBLIC KEY-----
          MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAlz00iTNPXIo+RM8n0Eudnh84XDWBFAkR
          L7mkOtXvZiKViCR1qs5LT3SaNy62hkUroexCoii4vjRTSHaQ9FwyBRo98EY9U3qzWmr9Row9ONcQ
          VKFVX6qiwb9SZG7QvHSfqVAuWhMGb1fFGUWl94L7kY0CihF+WJS5fdhXc1h/f/tY1439hruL3+BR
          /idfYjAKDa1+euW4b0HKMi4BdJutL/G5FXjDP7MP5fTRuM52erKpON1pwPD8ow/03MhK4wRikHqS
          /Kvd3UnQ8Q7OSrfJevqR0CqBf83Am1HSHh/bqOfsG0epl+2I1RKLBzB2tSTvMfk0ftiRSq/fRrhl
          xsJmFQIDAQAB
          -----END PUBLIC KEY-----
        signatureType: APP_RSA
      properties:
        targetUrl:
          description: A URL that should be invoked during execution.
          type: string
        targetStatus:
          $ref: '#/components/schemas/AppTargetStatus'
        publicKey:
          description: |
            The public half of an RSA key pair.  Useful for verifying a Webhook execution request signature to
            ensure it came from SmartThings.
          type: string
        signatureType:
          $ref: '#/components/schemas/SignatureType'
      type: object
    AppOAuth:
      example:
        clientName: My SmartThings Integration
        scope:
        - r:installedapps
        - w:installedapps
        - x:installedapps
      properties:
        clientName:
          description: A name given to the OAuth Client.
          type: string
        scope:
          description: A list of SmartThings API OAuth scope identifiers that maybe
            required to execute your integration.
          items:
            type: string
          type: array
        redirectUris:
          description: A list of redirect URIs.
          items:
            format: uri
            type: string
          maxItems: 10
          minItems: 0
          type: array
      type: object
    CreateAppRequest:
      example:
        lambdaSmartApp:
          functions:
          - arn:aws:lambda:eu-central-1:account-id:function:function-name:alias-name
          - arn:aws:lambda:ap-southeast-1:account-id:function:function-name:alias-name
        classifications:
        - null
        - null
        iconImage:
          url: https://smart-home-monitor.com/image
        ui:
          dashboardCardsEnabled: true
          pluginId: pluginId
          pluginUri: https://openapi-generator.tech
          preInstallDashboardCardsEnabled: true
        appName: appName
        displayName: displayName
        webhookSmartApp:
          targetUrl: https://securityhome.com/smartthings
        description: description
        singleInstance: false
        oauth:
          clientName: My SmartThings Integration
          scope:
          - r:installedapps
          - w:installedapps
          - x:installedapps
      properties:
        appName:
          description: |
            A globally unique, developer-defined identifier for an app. It is alpha-numeric, may contain dashes,
            underscores, periods, and must be less then 250 characters long.
          format: ^[a-z0-9.-_]{1,250}$
          type: string
        displayName:
          description: |
            A default display name for an app.
          maxLength: 75
          type: string
        description:
          description: |
            A default description for an app.
          maxLength: 250
          type: string
        singleInstance:
          default: false
          description: |
            Inform the installation systems that a particular app can only be installed once within a user's account.
          type: boolean
        iconImage:
          $ref: '#/components/schemas/IconImage'
        appType:
          $ref: '#/components/schemas/AppType'
        principalType:
          $ref: '#/components/schemas/PrincipalType'
        classifications:
          description: |
            An App maybe associated to many classifications.  A classification drives how the integration is presented
            to the user in the SmartThings mobile clients.  These classifications include:
            * AUTOMATION - Denotes an integration that should display under the "Automation" tab in mobile clients.
            * SERVICE - Denotes an integration that is classified as a "Service".
            * DEVICE - Denotes an integration that should display under the "Device" tab in mobile clients.
            * CONNECTED_SERVICE - Denotes an integration that should display under the "Connected Services" menu in mobile clients.
            * HIDDEN - Denotes an integration that should not display in mobile clients
          items:
            $ref: '#/components/schemas/AppClassification'
          type: array
        lambdaSmartApp:
          $ref: '#/components/schemas/CreateOrUpdateLambdaSmartAppRequest'
        webhookSmartApp:
          $ref: '#/components/schemas/CreateOrUpdateWebhookSmartAppRequest'
        oauth:
          $ref: '#/components/schemas/AppOAuth'
        ui:
          $ref: '#/components/schemas/AppUISettings'
      required:
      - appName
      - appType
      - classifications
      - description
      - displayName
      type: object
    UpdateAppRequest:
      example:
        lambdaSmartApp:
          functions:
          - arn:aws:lambda:eu-central-1:account-id:function:function-name:alias-name
          - arn:aws:lambda:ap-southeast-1:account-id:function:function-name:alias-name
        classifications:
        - null
        - null
        iconImage:
          url: https://smart-home-monitor.com/image
        ui:
          dashboardCardsEnabled: true
          pluginId: pluginId
          pluginUri: https://openapi-generator.tech
          preInstallDashboardCardsEnabled: true
        displayName: displayName
        webhookSmartApp:
          targetUrl: https://securityhome.com/smartthings
        description: description
        singleInstance: false
      properties:
        displayName:
          description: |
            A default display name for an app.
          maxLength: 75
          type: string
        description:
          description: |
            A default description for an app.
          maxLength: 250
          type: string
        singleInstance:
          default: false
          description: |
            Inform the installation systems that a particular app can only be installed once within a user's account.
          type: boolean
        iconImage:
          $ref: '#/components/schemas/IconImage'
        appType:
          $ref: '#/components/schemas/AppType'
        classifications:
          description: |
            An App maybe associated to many classifications.  A classification drives how the integration is presented
            to the user in the SmartThings mobile clients.  These classifications include:
            * AUTOMATION - Denotes an integration that should display under the "Automation" tab in mobile clients.
            * SERVICE - Denotes an integration that is classified as a "Service".
            * DEVICE - Denotes an integration that should display under the "Device" tab in mobile clients.
            * CONNECTED_SERVICE - Denotes an integration that should display under the "Connected Services" menu in mobile clients.
            * HIDDEN - Denotes an integration that should not display in mobile clients
          items:
            $ref: '#/components/schemas/AppClassification'
          type: array
        lambdaSmartApp:
          $ref: '#/components/schemas/CreateOrUpdateLambdaSmartAppRequest'
        webhookSmartApp:
          $ref: '#/components/schemas/CreateOrUpdateWebhookSmartAppRequest'
        ui:
          $ref: '#/components/schemas/AppUISettings'
      required:
      - appType
      - classifications
      - description
      - displayName
      type: object
    CreateAppResponse:
      description: A response object containing the newly created App and OAuth client
        details.
      example:
        app:
          appName: security-home-monitor
          appId: c71b0a5b-7dab-41fe-b75f-7cf30246468e
          appType: WEBHOOK_SMART_APP
          displayName: Security Home Monitor
          description: |
            An intergration that leverages all security devices in your home - cameras, motion sensors, etc to provide
            you with peace of mind and #security.
          owner:
            ownerType: USER
            ownerId: 3f178632-79ed-4358-94de-280dbd7c206c
          webhookSmartApp:
            targetUrl: https://securityhome.com/smartthings
            publicKey: |
              -----BEGIN PUBLIC KEY-----
              MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAlz00iTNPXIo+RM8n0Eudnh84XDWBFAkR
              L7mkOtXvZiKViCR1qs5LT3SaNy62hkUroexCoii4vjRTSHaQ9FwyBRo98EY9U3qzWmr9Row9ONcQ
              VKFVX6qiwb9SZG7QvHSfqVAuWhMGb1fFGUWl94L7kY0CihF+WJS5fdhXc1h/f/tY1439hruL3+BR
              /idfYjAKDa1+euW4b0HKMi4BdJutL/G5FXjDP7MP5fTRuM52erKpON1pwPD8ow/03MhK4wRikHqS
              /Kvd3UnQ8Q7OSrfJevqR0CqBf83Am1HSHh/bqOfsG0epl+2I1RKLBzB2tSTvMfk0ftiRSq/fRrhl
              xsJmFQIDAQAB
              -----END PUBLIC KEY-----
          createdDate: 2017-05-19T12:39:37.000+0000
          lastUpdatedDate: 2017-05-19T12:39:37.000+0000
        oauthClientId: 7cd4d474-7b36-4e03-bbdb-4cd4ae45a2be
        oauthClientSecret: 9b3fd445-42d6-441b-b386-99ea51e13cb0
      properties:
        app:
          $ref: '#/components/schemas/App'
        oauthClientId:
          description: The OAuth Client ID.
          format: uuid
          type: string
        oauthClientSecret:
          description: The OAuth Client Secret.
          format: uuid
          type: string
      type: object
    CreateOrUpdateLambdaSmartAppRequest:
      description: |
        Details related to a Lambda Smart App implementation.  This model should only be specified for apps of type LAMBDA_SMART_APP.
      example:
        functions:
        - arn:aws:lambda:eu-central-1:account-id:function:function-name:alias-name
        - arn:aws:lambda:ap-southeast-1:account-id:function:function-name:alias-name
      properties:
        functions:
          description: A list of AWS arns referencing a Lambda function.
          items:
            type: string
          type: array
      required:
      - functions
      type: object
    CreateOrUpdateWebhookSmartAppRequest:
      description: |
        Details related to a Webhook Smart App implementation.  This model should only be specified for apps of type WEBHOOK_SMART_APP.
      example:
        targetUrl: https://securityhome.com/smartthings
      properties:
        targetUrl:
          description: A URL that should be invoked during execution.
          type: string
      required:
      - targetUrl
      type: object
    UpdateAppOAuthRequest:
      example:
        clientName: My SmartThings Integration
        scope:
        - r:installedapps
        - w:installedapps
      properties:
        clientName:
          description: A name given to the OAuth Client.
          type: string
        scope:
          description: A list of SmartThings API OAuth scope identifiers that maybe
            required to execute your integration.
          items:
            type: string
          type: array
        redirectUris:
          description: A list of redirect URIs.
          items:
            format: uri
            type: string
          maxItems: 10
          minItems: 0
          type: array
      required:
      - clientName
      - redirectUris
      - scope
      type: object
    GenerateAppOAuthRequest:
      example:
        clientName: My SmartThings Integration
        scope:
        - r:installedapps
        - w:installedapps
      properties:
        clientName:
          description: A name given to the OAuth Client.
          type: string
        scope:
          description: A list of SmartThings API OAuth scope identifiers that maybe
            required to execute your integration.
          items:
            type: string
          type: array
      type: object
    DeleteAppResponse:
      description: An empty object 200 response.
      type: object
    UpdateAppSettingsRequest:
      description: Settings for a given app
      example:
        settings:
          mySecretData: 6c21f9ee-7634-413f-89f7-bdfdce88bf0e
      properties:
        settings:
          additionalProperties:
            type: string
          type: object
      type: object
    UpdateAppSettingsResponse:
      description: Settings for a given app
      example:
        settings:
          mySecretData: 6c21f9ee-7634-413f-89f7-bdfdce88bf0e
      properties:
        settings:
          additionalProperties:
            type: string
          type: object
      type: object
    UpdateSignatureTypeRequest:
      description: A request object used to switch the signing mechanism for authorizing
        SmartApp callbacks.
      example:
        signatureType: ST_PADLOCK
      properties:
        signatureType:
          $ref: '#/components/schemas/SignatureType'
      type: object
    UpdateSignatureTypeResponse:
      description: An empty object response.
      example: {}
      type: object
    GetAppSettingsResponse:
      description: Settings for a given app
      example:
        settings:
          mySecretData: 6c21f9ee-7634-413f-89f7-bdfdce88bf0e
      properties:
        settings:
          additionalProperties:
            type: string
          type: object
      type: object
    GenerateAppOAuthResponse:
      description: A response object containing a new OAuth Client and it's details.
      example:
        oauthClientDetails:
          clientName: My SmartThings Integration
          scope:
          - r:installedapps
          - w:installedapps
          - x:installedapps
        oauthClientId: 7cd4d474-7b36-4e03-bbdb-4cd4ae45a2be
        oauthClientSecret: 9b3fd445-42d6-441b-b386-99ea51e13cb0
      properties:
        oauthClientDetails:
          $ref: '#/components/schemas/AppOAuth'
        oauthClientId:
          description: The OAuth Client ID.
          format: uuid
          type: string
        oauthClientSecret:
          description: The OAuth Client Secret.
          format: uuid
          type: string
      type: object
    SignatureType:
      description: |
        The http signature type used for authorizing event delivery. APP_RSA generates an RSA key pair that will be used
        to verify requests from SmartThings. ST_PADLOCK requires verifcation through SmartThings public certificate.
      enum:
      - APP_RSA
      - ST_PADLOCK
      type: string
    PrincipalType:
      description: Denotes the principal type to be used with the app.  Default is
        LOCATION.
      enum:
      - LOCATION
      - USER_LEVEL
      type: string
    AppUISettings:
      description: |
        A collection of settings to drive user interface in SmartThings clients.  Currently, only applicable for
        LAMBDA_SMART_APP and WEBHOOK_SMART_APP app types.
      example:
        dashboardCardsEnabled: true
        pluginId: pluginId
        pluginUri: https://openapi-generator.tech
        preInstallDashboardCardsEnabled: true
      properties:
        pluginId:
          format: ^[a-zA-Z._]{1,99}$
          type: string
        pluginUri:
          format: uri
          type: string
        dashboardCardsEnabled:
          type: boolean
        preInstallDashboardCardsEnabled:
          type: boolean
      required:
      - dashboardCardsEnabled
      - preInstallDashboardCardsEnabled
      type: object
    AppTargetStatus:
      description: The registration status of a target url.
      enum:
      - PENDING
      - CONFIRMED
      type: string
    AdhocMessage:
      description: |
        An adhoc message contains a list of message templates representing the same message in different locales. The
        system will serve the template with the locale that best matches the Recipient's language preferences. If the
        user's language preferences do not correlate to any message templates, the template defined by the
        `fallbackLocale` will be used. Variables from the template matching the locale of the Message will be assigned
        first, then `defaultVariables`.
      example:
        fallbackLocale: en
        defaultVariables:
          duration: "5"
        templates:
        - localeTag: en
          template: '{{ deviceName }} will turn off in {{ duration }} minutes.'
          variables:
            deviceName: lamp
        - localeTag: es
          template: '{{ deviceName }} se apagará en {{ duration }} minutos.'
          variables:
            deviceName: lámpara
      properties:
        fallbackLocale:
          description: The tag of the locale as defined in [RFC bcp47](http://www.rfc-editor.org/rfc/bcp/bcp47.txt).
          example: en
          type: string
        defaultVariables:
          additionalProperties:
            type: string
          description: |
            A map<string,string> with the key representing the variable name, and the value representing the verbiage
            to be replaced in template string. `defaultVariables` will only be used if there are no matching locale-level
            (template) variables for that key.
          type: object
        templates:
          description: A list of templates representing the same message in different
            languages.
          items:
            $ref: '#/components/schemas/AdhocMessageTemplate'
          maxItems: 35
          minItems: 1
          type: array
      required:
      - fallbackLocale
      - templates
      type: object
    AdhocMessageTemplate:
      description: A message template definition, representing a message in a specific
        locale and it's variables.
      example:
        localeTag: en
        template: Hello, {{ firstName }}!
        variables:
          firstName: Jason
      properties:
        localeTag:
          description: The tag of the locale as defined in [RFC bcp47](http://www.rfc-editor.org/rfc/bcp/bcp47.txt).
          example: en
          type: string
        variables:
          additionalProperties:
            type: string
          description: |
            A map<string,string> with the key representing the variable name, and the value representing the verbiage
            to be replaced in template string.
          type: object
        template:
          description: |
            A message template string.  Specify variables using the double curly braces convention.
            i.e. "Hello, {{ firstName }}!"
          type: string
      required:
      - localeTag
      - template
      type: object
    LocaleVariables:
      description: Message template variables associated with a certain locale.
      properties:
        localeTag:
          description: The tag of the locale as defined in [RFC bcp47](http://www.rfc-editor.org/rfc/bcp/bcp47.txt).
          example: en
          type: string
        variables:
          additionalProperties:
            type: string
          description: |
            A map<string,string> with the key representing the variable name, and the value representing the verbiage
            to be replaced in template string.
          type: object
      required:
      - localeTag
      type: object
    Message:
      description: |
        A Message contains a list of message templates representing the same message in different locales. The system will
        serve the template with the locale that best matches the Recipient's language preferences. If the user's language
        preferences do not correlate to any message templates, the template defined by the `fallbackLocale` will be used.
      example:
        fallbackLocale: en
        templates:
        - localeTag: en
          template: '{{ deviceName }} will turn off in {{ duration }} minutes.'
        - localeTag: es
          template: '{{ deviceName }} se apagará en {{ duration }} minutos.'
      properties:
        fallbackLocale:
          description: The tag of the locale as defined in [RFC bcp47](http://www.rfc-editor.org/rfc/bcp/bcp47.txt).
          example: en
          type: string
        templates:
          description: A list of templates representing the same message in different
            languages.
          items:
            $ref: '#/components/schemas/MessageTemplate'
          maxItems: 35
          minItems: 1
          type: array
      required:
      - fallbackLocale
      - templates
      type: object
    MessageTemplate:
      description: A message template definition, representing a message in a specific
        locale.
      example:
        localeTag: en
        template: Hello, {{ firstName }}!
      properties:
        localeTag:
          description: The tag of the locale as defined in [RFC bcp47](http://www.rfc-editor.org/rfc/bcp/bcp47.txt).
          example: en
          type: string
        template:
          description: |
            A message template string. Specify variables using the double curly braces convention.
            i.e. "Hello, {{ firstName }}!"
          type: string
      required:
      - localeTag
      - template
      type: object
    MessageType:
      default: PREDEFINED
      description: The expected message format to be sent.
      enum:
      - PREDEFINED
      - ADHOC
      type: string
    PagedMessageTemplate:
      description: A simplified Message model which is retured during a list operation.
      example:
        appId: 9cb655e0-bc31-4b94-9254-c4e2d0c35224
        messageTemplateKey: motion_detected_message
      properties:
        appId:
          description: A globally unique identifier for an app.
          format: uuid
          type: string
        messageTemplateKey:
          format: ^[a-z0-9._]{1,36}$
          type: string
      required:
      - appId
      - messageTemplateKey
      type: object
    PredefinedMessage:
      description: |
        Predefined message options. Variables from `localeVariables` matching the locale of the Message will be assigned
        first, then `defaultVariables`.
      example:
        messageTemplateKey: lamp_shutoff_message
        defaultVariables:
          duration: "5"
        localeVariables:
        - localeTag: en
          variables:
            deviceName: lamp
        - localeTag: es
          variables:
            deviceName: lámpara
      properties:
        messageTemplateKey:
          format: ^[a-z0-9._]{1,36}$
          type: string
        defaultVariables:
          additionalProperties:
            type: string
          description: |
            A map<string,string> with the key representing the variable name, and the value representing the verbiage
            to be replaced in template string. `defaultVariables` are only used when there are no matching
            `localeVariables`.
          type: object
        localeVariables:
          description: |
            Variables to resolve for specific locales.
          items:
            $ref: '#/components/schemas/LocaleVariables'
          type: array
      required:
      - messageTemplateKey
      type: object
    SceneSummary:
      example:
        sceneColor: sceneColor
        lastUpdatedDate: 2000-01-23T04:56:07.000+00:00
        createdDate: 2000-01-23T04:56:07.000+00:00
        apiVersion: apiVersion
        createdBy: createdBy
        locationId: locationId
        editable: true
        sceneName: sceneName
        sceneId: sceneId
        lastExecutedDate: 2000-01-23T04:56:07.000+00:00
        sceneIcon: sceneIcon
      properties:
        sceneId:
          description: The unique identifier of the Scene
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
        sceneName:
          description: The user-defined name of the Scene
          type: string
        sceneIcon:
          description: The name of the icon
          type: string
        sceneColor:
          description: The color of the icon
          type: string
        locationId:
          description: Location of the Scene
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
        createdBy:
          description: The unique identifier of the user that created the scene
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
        createdDate:
          description: The date the scene was created
          format: date-time
          type: string
        lastUpdatedDate:
          description: The date the scene was last updated
          format: date-time
          type: string
        lastExecutedDate:
          description: The date the scene was last executed
          format: date-time
          type: string
        editable:
          description: Whether or not this scene can be edited by the logged in user
            using the version of the app that made the request
          type: boolean
        apiVersion:
          type: string
      type: object
    SceneDevice:
      properties:
        deviceId:
          description: the id of the device
          type: string
        deviceLabel:
          description: the label of the device
          type: string
        deviceName:
          description: the name of the device
          type: string
        deviceTypeId:
          description: The identifier for the device's DeviceType.
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
        components:
          items:
            $ref: '#/components/schemas/SceneComponent'
          type: array
        locationId:
          description: Location of the device
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
      type: object
    SceneDeviceGroup:
      properties:
        deviceGroupId:
          description: the id of the device
          type: string
        capability:
          $ref: '#/components/schemas/SceneCapability'
      type: object
    SceneMode:
      description: The mode activated by the Scene
      properties:
        modeId:
          description: the id of the mode
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
        modeName:
          description: the name of the mode
          type: string
      type: object
    SceneRequest:
      description: JSON body for creating or updating a Scene
      properties:
        sceneName:
          description: The user-defined name of the Scene
          type: string
        sceneIcon:
          description: The name of the icon
          type: string
        sceneColor:
          description: The color of the icon
          format: ^\#[0-9A-F]{6}$
          type: string
        devices:
          description: Non-sequential list of device actions
          items:
            $ref: '#/components/schemas/SceneDeviceRequest'
          type: array
        sequences:
          description: List of parallel action sequences
          items:
            $ref: '#/components/schemas/SceneActionSequence'
          type: array
        mode:
          $ref: '#/components/schemas/SceneModeRequest'
        securityMode:
          $ref: '#/components/schemas/SceneSecurityModeRequest'
        devicegroups:
          description: List of device group actions
          items:
            $ref: '#/components/schemas/SceneDeviceGroupRequest'
          type: array
      required:
      - devices
      - sceneName
      type: object
    SceneActionSequence:
      items:
        $ref: '#/components/schemas/SceneAction'
      type: array
    SceneAction:
      description: Possible scene actions, mutually exclusive
      properties:
        deviceRequest:
          $ref: '#/components/schemas/SceneDeviceRequest'
        modeRequest:
          $ref: '#/components/schemas/SceneModeRequest'
        sleepRequest:
          $ref: '#/components/schemas/SceneSleepRequest'
        deviceGroupRequest:
          $ref: '#/components/schemas/SceneDeviceGroupRequest'
      type: object
    SceneDeviceRequest:
      description: JSON structure for a device when creating a Scene
      properties:
        deviceId:
          description: the id of the device
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
        actionId:
          description: the id of the action to be created. Optional, sent by Reaver
            only
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
        components:
          items:
            $ref: '#/components/schemas/SceneComponent'
          type: array
      type: object
    SceneDeviceGroupRequest:
      description: JSON structure for a device group when creating a Scene
      properties:
        deviceGroupId:
          description: the id of the device group
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
        actionId:
          description: the id of the action to be created. Optional, sent by Reaver
            only
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
        capability:
          $ref: '#/components/schemas/SceneCapability'
      required:
      - deviceGroupId
      type: object
    SceneModeRequest:
      description: The mode to be activated by the Scene
      properties:
        modeId:
          description: The id of the mode
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
        actionId:
          description: the id of the action to be created. Optional, sent by Reaver
            only
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
        modeName:
          description: The name of the mode
          type: string
      required:
      - modeId
      type: object
    SceneSecurityModeRequest:
      description: The security mode to be activated by the Scene
      properties:
        actionId:
          description: the id of the action to be created. Optional, sent by Reaver
            only
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
        security:
          description: The id of the security mode
          enum:
          - setArmStay
          - setArmAway
          - disarm
          type: string
        arguments:
          description: Additional query param
          type: string
      required:
      - security
      type: object
    SceneSleepRequest:
      description: Sleep a particular sequence
      properties:
        seconds:
          description: Number of seconds to sleep the sequence
          type: integer
      required:
      - seconds
      type: object
    SceneComponent:
      description: A component of the scene device
      properties:
        componentId:
          description: the id of the component
          type: string
        capabilities:
          items:
            $ref: '#/components/schemas/SceneCapability'
          type: array
      type: object
    SceneCapability:
      description: A device component capability
      properties:
        capabilityId:
          description: The id of the capability
          type: string
        status:
          description: The status of the capability
          enum:
          - proposed
          - live
          - deprecated
          - dead
          type: string
        commands:
          additionalProperties:
            $ref: '#/components/schemas/SceneCommand'
          description: Capability commands
          type: object
      type: object
    SceneCommand:
      description: A component capability command
      properties:
        arguments:
          description: the command arguments
          items:
            $ref: '#/components/schemas/SceneArgument'
          type: array
      type: object
    SceneArgument:
      description: A capability command argument
      properties:
        name:
          description: the name of the command
          type: string
        schema:
          description: the schema of the command
          properties: {}
          type: object
        value:
          description: The value being set for the capability command
          properties: {}
          type: object
      type: object
    ScenePagedResult:
      example:
        _links:
          next:
            href: https://...
          previous:
            href: https://...
        items:
        - sceneColor: sceneColor
          lastUpdatedDate: 2000-01-23T04:56:07.000+00:00
          createdDate: 2000-01-23T04:56:07.000+00:00
          apiVersion: apiVersion
          createdBy: createdBy
          locationId: locationId
          editable: true
          sceneName: sceneName
          sceneId: sceneId
          lastExecutedDate: 2000-01-23T04:56:07.000+00:00
          sceneIcon: sceneIcon
        - sceneColor: sceneColor
          lastUpdatedDate: 2000-01-23T04:56:07.000+00:00
          createdDate: 2000-01-23T04:56:07.000+00:00
          apiVersion: apiVersion
          createdBy: createdBy
          locationId: locationId
          editable: true
          sceneName: sceneName
          sceneId: sceneId
          lastExecutedDate: 2000-01-23T04:56:07.000+00:00
          sceneIcon: sceneIcon
      properties:
        items:
          items:
            $ref: '#/components/schemas/SceneSummary'
          type: array
        _links:
          $ref: '#/components/schemas/Links'
      type: object
    StandardSuccessResponse:
      description: '{"status": "success"}'
      example:
        status: success
      properties:
        status:
          default: success
          enum:
          - success
          type: string
      type: object
    CapabilitySummary:
      properties:
        id:
          description: A URL safe unique identifier for the capability.
          example: switch
          type: string
        version:
          description: The version number of the capability.
          example: 1
          type: integer
        status:
          description: |
            The status of the capability.
            * __proposed__ - The capability is under a review and refinement process. The capability definition may go through changes, some of which may be breaking.
            * __live__ - The capability has been through review and the definition has been solidified. Live capabilities can no longer be altered.
            * __deprecated__ - The capability is marked for removal and should only be used during a period of migration to allow for existing integrations and automations to continue to work.
            * __dead__ - The usage of a deprecated capability has dropped to a sufficiently low level to warrant removal. The capability definition still exists but can no longer be used by automations or implemented by devices.
          enum:
          - proposed
          - live
          - deprecated
          - dead
          type: string
      type: object
    CapabilityAttribute:
      properties:
        schema:
          $ref: '#/components/schemas/AttributeSchema'
        setter:
          description: The name of the command that sets this attribute
          example: setColor
          type: string
        enumCommands:
          description: a list of objects that specify which commands set this attribute
          example:
          - command: "on"
            value: "on"
          - command: "off"
            value: "off"
          items:
            $ref: '#/components/schemas/CapabilityAttribute_enumCommands'
          type: array
      type: object
    AttributeSchema:
      description: |
        [JSON schema](http://json-schema.org/specification-links.html#draft-4) for the attribute.
      properties:
        title:
          type: string
        type:
          default: object
          enum:
          - object
          type: string
        properties:
          $ref: '#/components/schemas/AttributeProperties'
        additionalProperties:
          type: boolean
        required:
          items:
            enum:
            - value
            - unit
            - data
            type: string
          type: array
      required:
      - additionalProperties
      - properties
      - type
      type: object
    AttributeProperties:
      properties:
        value:
          additionalProperties:
            properties: {}
            type: object
          example:
            type: number
            minimum: 0
            maximum: 20
          type: object
        unit:
          $ref: '#/components/schemas/AttributeProperties_unit'
        data:
          $ref: '#/components/schemas/AttributeProperties_data'
      required:
      - value
      type: object
    CapabilityCommand:
      properties:
        name:
          description: The name of the command. Unique for the capability
          example: setTemperature
          pattern: ^[[a-z]*([A-Z][a-z]*)*]{1,36}$
          type: string
        arguments:
          description: An array of argument definitions. The arguments must be supplied
            in the order specified.
          items:
            $ref: '#/components/schemas/Argument'
          type: array
      required:
      - name
      type: object
    Argument:
      properties:
        name:
          description: A name that is unique within the command. Used for i18n and
            named argument command execution.
          pattern: ^[[a-z]*([A-Z][a-z]*)*]{1,36}$
          type: string
        optional:
          default: false
          description: |
            Whether or not the argument must be supplied.
            If the argument is at the end of the arguments array then it can be completely ignored.
            If the argument is followed by another argument `null` must be supplied.
          type: boolean
        schema:
          description: |
            [JSON schema](http://json-schema.org/specification-links.html#draft-4) for the argument.
          properties: {}
          type: object
      required:
      - name
      - schema
      type: object
    DeviceActivity:
      properties:
        deviceId:
          description: Device ID
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
        deviceName:
          description: Device nick name
          example: TV
          type: string
        locationId:
          description: Location ID
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
        locationName:
          description: Location name
          example: Home
          type: string
        time:
          description: The IS0-8601 date time strings in UTC of the activity
          format: date-time
          type: string
        text:
          description: Translated human readable string (localized)
          example: 'battery of Button is: 89%'
          type: string
        component:
          description: device component ID. Not nullable.
          example: main
          type: string
        componentLabel:
          description: device component label. Nullable.
          example: left button
          type: string
        capability:
          description: capability name
          example: battery
          type: string
        attribute:
          description: attribute name
          example: battery
          type: string
        value:
          description: attribute value
          example: 0
          properties: {}
          type: object
        unit:
          example: '%'
          type: string
        data:
          additionalProperties:
            properties: {}
            type: object
          example:
            method: manual
            codeId: 1234
            timeout: 2018-05-09T23:03:31+0000
          type: object
      required:
      - component
      type: object
    ServiceCapabilities:
      description: capability name(s)
      example:
        capabilities:
        - weather
        - forecast
        - airQuality
      items:
        enum:
        - weather
        - airQuality
        - forecast
        type: string
      type: array
    IsaResults:
      properties:
        isaId:
          description: isaId installed for the user
          type: string
        appName:
          description: Viper connector name given by partner in DevWorkspace eg Lifx
            (Connect)
          type: string
        partnerName:
          description: Parnter name eg Lifx Inc
          type: string
        icon:
          description: url of partner icon
          type: string
        icon2x:
          description: url of partner icon in 2x dimensions
          type: string
        icon3x:
          description: url of partner icon in 3x dimensions
          type: string
        locationId:
          description: location of the installed smart app
          type: string
      type: object
    EndpointApp:
      properties:
        appName:
          description: The name of the endpoint app
          type: string
        partnerName:
          description: The name of the partner/brand
          type: string
        oAuthAuthorizationUrl:
          description: oAuth authorization url of the partner
          type: string
        lambdaArn:
          description: lambda arn of the partner for US region (default)
          type: string
        lambdaArnEU:
          description: lambda arn of the partner for EU region
          type: string
        lambdaArnAP:
          description: lambda arn of the partner for AP region
          type: string
        lambdaArnCN:
          description: lambda arn of the partner for CN region
          type: string
        icon:
          description: url of partner icon
          type: string
        icon2x:
          description: url of partner icon in 2x dimensions
          type: string
        icon3x:
          description: url of partner icon in 3x dimensions
          type: string
        endpointAppId:
          description: Viper endpoint app id for the partner
          type: string
        oAuthClientId:
          description: Client id for the partner oAuth
          type: string
        oAuthClientSecret:
          description: Client secret for the partner oAuth
          type: string
        oAuthTokenUrl:
          description: oAuth token refresh url of the partner
          type: string
        oAuthScope:
          description: oAuth scope for the partner. Example "remote_control:all" for
            Lifx
          type: string
        userId:
          description: user id for the partner
          type: string
        hostingType:
          description: Possible values - "lambda" or "webhook"
          type: string
        schemaType:
          description: Possible values - "alexa-schema", "st-schema", "google-schema"
          type: string
        webhookUrl:
          description: webhook url for the partner
          type: string
        certificationStatus:
          description: Possible values - "", "cst", "wwst"
          type: string
      type: object
    DeviceResults:
      properties:
        deviceId:
          description: deviceId created by DM
          type: string
        name:
          description: initial device name from the partner
          type: string
      type: object
    CommandArguments:
      example: "30"
      type: string
    RuleRequest:
      example:
        timeZoneId: timeZoneId
        name: name
        actions:
        - sleep:
            duration:
              value:
                date:
                  month: 7
                  year: 1
                  timeZoneId: timeZoneId
                  daysOfWeek:
                  - null
                  - null
                  day: 17
                datetime:
                  month: 8
                  year: 2
                  timeZoneId: timeZoneId
                  daysOfWeek:
                  - null
                  - null
                  day: 28
                boolean: true
                string: string
                array:
                  operands:
                  - null
                  - null
                location:
                  value: value
                integer: 6
                time:
                  timeZoneId: timeZoneId
                decimal: 0.8008281904610115
                map: {}
                device:
                  path: path
                  component: component
                  capability: capability
                  devices:
                  - devices
                  - devices
                  attribute: attribute
            id: id
          location:
            mode: mode
            id: id
          every:
            interval:
              value:
                date:
                  month: 7
                  year: 1
                  timeZoneId: timeZoneId
                  daysOfWeek:
                  - null
                  - null
                  day: 17
                datetime:
                  month: 8
                  year: 2
                  timeZoneId: timeZoneId
                  daysOfWeek:
                  - null
                  - null
                  day: 28
                boolean: true
                string: string
                array:
                  operands:
                  - null
                  - null
                location:
                  value: value
                integer: 6
                time:
                  timeZoneId: timeZoneId
                decimal: 0.8008281904610115
                map: {}
                device:
                  path: path
                  component: component
                  capability: capability
                  devices:
                  - devices
                  - devices
                  attribute: attribute
            id: id
            specific:
              timeZoneId: timeZoneId
            actions:
            - null
            - null
          command:
            devices:
            - devices
            - devices
            id: id
            commands:
            - component: main
              capability: switchLevel
              command: setLevel
              arguments:
              - 80
            - component: main
              capability: switchLevel
              command: setLevel
              arguments:
              - 80
        - sleep:
            duration:
              value:
                date:
                  month: 7
                  year: 1
                  timeZoneId: timeZoneId
                  daysOfWeek:
                  - null
                  - null
                  day: 17
                datetime:
                  month: 8
                  year: 2
                  timeZoneId: timeZoneId
                  daysOfWeek:
                  - null
                  - null
                  day: 28
                boolean: true
                string: string
                array:
                  operands:
                  - null
                  - null
                location:
                  value: value
                integer: 6
                time:
                  timeZoneId: timeZoneId
                decimal: 0.8008281904610115
                map: {}
                device:
                  path: path
                  component: component
                  capability: capability
                  devices:
                  - devices
                  - devices
                  attribute: attribute
            id: id
          location:
            mode: mode
            id: id
          every:
            interval:
              value:
                date:
                  month: 7
                  year: 1
                  timeZoneId: timeZoneId
                  daysOfWeek:
                  - null
                  - null
                  day: 17
                datetime:
                  month: 8
                  year: 2
                  timeZoneId: timeZoneId
                  daysOfWeek:
                  - null
                  - null
                  day: 28
                boolean: true
                string: string
                array:
                  operands:
                  - null
                  - null
                location:
                  value: value
                integer: 6
                time:
                  timeZoneId: timeZoneId
                decimal: 0.8008281904610115
                map: {}
                device:
                  path: path
                  component: component
                  capability: capability
                  devices:
                  - devices
                  - devices
                  attribute: attribute
            id: id
            specific:
              timeZoneId: timeZoneId
            actions:
            - null
            - null
          command:
            devices:
            - devices
            - devices
            id: id
            commands:
            - component: main
              capability: switchLevel
              command: setLevel
              arguments:
              - 80
            - component: main
              capability: switchLevel
              command: setLevel
              arguments:
              - 80
      properties:
        name:
          description: Name for the rule
          type: string
        actions:
          items:
            $ref: '#/components/schemas/Action'
          type: array
        timeZoneId:
          description: Time zone ID for this rule. This overrides the location time
            zone ID, but is overridden by time zone ID provided by each operand individually
          type: string
      required:
      - actions
      - name
      type: object
    Rule:
      allOf:
      - $ref: '#/components/schemas/RuleRequest'
      - $ref: '#/components/schemas/Rule_allOf'
    RuleMetadata:
      description: Defines a rule with its associated meta data.
      properties:
        version:
          type: string
        rule:
          $ref: '#/components/schemas/Rule'
        installedAppId:
          description: The ID of the installed application.
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
        locationId:
          description: The ID of the location.
          type: string
        parentId:
          description: The source ID that created the rule
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
        parentType:
          $ref: '#/components/schemas/ParentType'
        userUuid:
          description: The uuid of the user
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
        executingLocally:
          description: Boolean for whether rule is installed locally
          type: boolean
        dateCreated:
          description: The date when rule was created
          format: dateTime
          type: string
        dateUpdated:
          description: The date when rule was last updated
          format: dateTime
          type: string
      required:
      - installedAppId
      - locationId
      - rule
      type: object
    Action:
      example:
        sleep:
          duration:
            value:
              date:
                month: 7
                year: 1
                timeZoneId: timeZoneId
                daysOfWeek:
                - null
                - null
                day: 17
              datetime:
                month: 8
                year: 2
                timeZoneId: timeZoneId
                daysOfWeek:
                - null
                - null
                day: 28
              boolean: true
              string: string
              array:
                operands:
                - null
                - null
              location:
                value: value
              integer: 6
              time:
                timeZoneId: timeZoneId
              decimal: 0.8008281904610115
              map: {}
              device:
                path: path
                component: component
                capability: capability
                devices:
                - devices
                - devices
                attribute: attribute
          id: id
        location:
          mode: mode
          id: id
        every:
          interval:
            value:
              date:
                month: 7
                year: 1
                timeZoneId: timeZoneId
                daysOfWeek:
                - null
                - null
                day: 17
              datetime:
                month: 8
                year: 2
                timeZoneId: timeZoneId
                daysOfWeek:
                - null
                - null
                day: 28
              boolean: true
              string: string
              array:
                operands:
                - null
                - null
              location:
                value: value
              integer: 6
              time:
                timeZoneId: timeZoneId
              decimal: 0.8008281904610115
              map: {}
              device:
                path: path
                component: component
                capability: capability
                devices:
                - devices
                - devices
                attribute: attribute
          id: id
          specific:
            timeZoneId: timeZoneId
          actions:
          - null
          - null
        command:
          devices:
          - devices
          - devices
          id: id
          commands:
          - component: main
            capability: switchLevel
            command: setLevel
            arguments:
            - 80
          - component: main
            capability: switchLevel
            command: setLevel
            arguments:
            - 80
      properties:
        if:
          $ref: '#/components/schemas/IfAction'
        sleep:
          $ref: '#/components/schemas/SleepAction'
        command:
          $ref: '#/components/schemas/CommandAction'
        every:
          $ref: '#/components/schemas/EveryAction'
        location:
          $ref: '#/components/schemas/LocationAction'
      type: object
    IfAction:
      allOf:
      - $ref: '#/components/schemas/Condition'
      - $ref: '#/components/schemas/IfAction_allOf'
    CommandAction:
      example:
        devices:
        - devices
        - devices
        id: id
        commands:
        - component: main
          capability: switchLevel
          command: setLevel
          arguments:
          - 80
        - component: main
          capability: switchLevel
          command: setLevel
          arguments:
          - 80
      properties:
        id:
          description: Unique id for the action
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
        devices:
          items:
            format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
            type: string
          type: array
        commands:
          items:
            $ref: '#/components/schemas/DeviceCommand'
          type: array
      required:
      - commands
      - devices
      type: object
    SleepAction:
      example:
        duration:
          value:
            date:
              month: 7
              year: 1
              timeZoneId: timeZoneId
              daysOfWeek:
              - null
              - null
              day: 17
            datetime:
              month: 8
              year: 2
              timeZoneId: timeZoneId
              daysOfWeek:
              - null
              - null
              day: 28
            boolean: true
            string: string
            array:
              operands:
              - null
              - null
            location:
              value: value
            integer: 6
            time:
              timeZoneId: timeZoneId
            decimal: 0.8008281904610115
            map: {}
            device:
              path: path
              component: component
              capability: capability
              devices:
              - devices
              - devices
              attribute: attribute
        id: id
      properties:
        id:
          description: Unique id for the action
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
        duration:
          $ref: '#/components/schemas/Interval'
      required:
      - duration
      type: object
    EveryAction:
      example:
        interval:
          value:
            date:
              month: 7
              year: 1
              timeZoneId: timeZoneId
              daysOfWeek:
              - null
              - null
              day: 17
            datetime:
              month: 8
              year: 2
              timeZoneId: timeZoneId
              daysOfWeek:
              - null
              - null
              day: 28
            boolean: true
            string: string
            array:
              operands:
              - null
              - null
            location:
              value: value
            integer: 6
            time:
              timeZoneId: timeZoneId
            decimal: 0.8008281904610115
            map: {}
            device:
              path: path
              component: component
              capability: capability
              devices:
              - devices
              - devices
              attribute: attribute
        id: id
        specific:
          timeZoneId: timeZoneId
        actions:
        - null
        - null
      properties:
        id:
          description: Unique id for the action
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
        interval:
          $ref: '#/components/schemas/Interval'
        specific:
          $ref: '#/components/schemas/TimeOperand'
        actions:
          items:
            $ref: '#/components/schemas/Action'
          type: array
      required:
      - actions
      type: object
    LocationAction:
      example:
        mode: mode
        id: id
      properties:
        id:
          description: Unique id for the action
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
        mode:
          type: string
      required:
      - id
      type: object
    Condition:
      properties:
        and:
          items:
            $ref: '#/components/schemas/Condition'
          type: array
        or:
          items:
            $ref: '#/components/schemas/Condition'
          type: array
        not:
          $ref: '#/components/schemas/Condition'
        equals:
          $ref: '#/components/schemas/EqualsCondition'
        greater_than:
          $ref: '#/components/schemas/GreaterThanCondition'
        greater_than_or_equals:
          $ref: '#/components/schemas/GreaterThanOrEqualsCondition'
        less_than:
          $ref: '#/components/schemas/LessThanCondition'
        less_than_or_equals:
          $ref: '#/components/schemas/LessThanOrEqualsCondition'
        between:
          $ref: '#/components/schemas/BetweenCondition'
        changes:
          $ref: '#/components/schemas/ChangesCondition'
      type: object
    SingleOperandCondition:
      properties:
        id:
          description: Unique id for the condition
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
        left:
          $ref: '#/components/schemas/Operand'
        aggregation:
          $ref: '#/components/schemas/ConditionAggregationMode'
      required:
      - left
      type: object
    SimpleCondition:
      properties:
        id:
          description: Unique id for the condition
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
        left:
          $ref: '#/components/schemas/Operand'
        right:
          $ref: '#/components/schemas/Operand'
        aggregation:
          $ref: '#/components/schemas/ConditionAggregationMode'
      required:
      - left
      - right
      type: object
    EqualsCondition:
      allOf:
      - $ref: '#/components/schemas/SimpleCondition'
    GreaterThanCondition:
      allOf:
      - $ref: '#/components/schemas/SimpleCondition'
    GreaterThanOrEqualsCondition:
      allOf:
      - $ref: '#/components/schemas/SimpleCondition'
    LessThanCondition:
      allOf:
      - $ref: '#/components/schemas/SimpleCondition'
    LessThanOrEqualsCondition:
      allOf:
      - $ref: '#/components/schemas/SimpleCondition'
    BetweenCondition:
      properties:
        id:
          description: Unique id for the condition
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
        value:
          $ref: '#/components/schemas/Operand'
        start:
          $ref: '#/components/schemas/Operand'
        end:
          $ref: '#/components/schemas/Operand'
        aggregation:
          $ref: '#/components/schemas/ConditionAggregationMode'
      required:
      - end
      - start
      - value
      type: object
    ChangesCondition:
      allOf:
      - $ref: '#/components/schemas/SingleOperandCondition'
    Operand:
      example:
        date:
          month: 7
          year: 1
          timeZoneId: timeZoneId
          daysOfWeek:
          - null
          - null
          day: 17
        datetime:
          month: 8
          year: 2
          timeZoneId: timeZoneId
          daysOfWeek:
          - null
          - null
          day: 28
        boolean: true
        string: string
        array:
          operands:
          - null
          - null
        location:
          value: value
        integer: 6
        time:
          timeZoneId: timeZoneId
        decimal: 0.8008281904610115
        map: {}
        device:
          path: path
          component: component
          capability: capability
          devices:
          - devices
          - devices
          attribute: attribute
      properties:
        boolean:
          type: boolean
        decimal:
          format: double
          type: number
        integer:
          format: int64
          type: integer
        string:
          type: string
        array:
          $ref: '#/components/schemas/ArrayOperand'
        map:
          additionalProperties:
            $ref: '#/components/schemas/Operand'
          type: object
        device:
          $ref: '#/components/schemas/DeviceOperand'
        location:
          $ref: '#/components/schemas/LocationOperand'
        date:
          $ref: '#/components/schemas/DateOperand'
        time:
          $ref: '#/components/schemas/TimeOperand'
        datetime:
          $ref: '#/components/schemas/DateTimeOperand'
      type: object
    ArrayOperand:
      example:
        operands:
        - null
        - null
      properties:
        operands:
          items:
            $ref: '#/components/schemas/Operand'
          type: array
        aggregation:
          $ref: '#/components/schemas/OperandAggregationMode'
      required:
      - operands
      type: object
    MapOperand:
      additionalProperties:
        $ref: '#/components/schemas/Operand'
      type: object
    DeviceOperand:
      example:
        path: path
        component: component
        capability: capability
        devices:
        - devices
        - devices
        attribute: attribute
      properties:
        devices:
          items:
            format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
            type: string
          type: array
        component:
          type: string
        capability:
          type: string
        attribute:
          type: string
        path:
          type: string
        aggregation:
          $ref: '#/components/schemas/OperandAggregationMode'
        subscriptionMode:
          $ref: '#/components/schemas/SubscriptionMode'
      required:
      - attribute
      - capability
      - component
      type: object
    LocationOperand:
      example:
        value: value
      properties:
        attribute:
          $ref: '#/components/schemas/LocationAttribute'
        value:
          description: Optional value to allow UI to reference a location attribute
            by id. If value is provided, the operand resolves to this value rather
            than calling the backend API
          type: string
      required:
      - attribute
      type: object
    DateOperand:
      example:
        month: 7
        year: 1
        timeZoneId: timeZoneId
        daysOfWeek:
        - null
        - null
        day: 17
      properties:
        timeZoneId:
          description: A java time zone ID reference
          type: string
        daysOfWeek:
          items:
            $ref: '#/components/schemas/DayOfWeek'
          type: array
        year:
          format: int32
          type: integer
        month:
          format: int32
          maximum: 12
          minimum: 1
          type: integer
        day:
          format: int32
          maximum: 31
          minimum: 1
          type: integer
      type: object
    TimeOperand:
      example:
        timeZoneId: timeZoneId
      properties:
        timeZoneId:
          description: A java time zone ID reference
          type: string
        reference:
          $ref: '#/components/schemas/TimeReference'
        offset:
          $ref: '#/components/schemas/Interval'
      required:
      - reference
      type: object
    DateTimeOperand:
      example:
        month: 8
        year: 2
        timeZoneId: timeZoneId
        daysOfWeek:
        - null
        - null
        day: 28
      properties:
        timeZoneId:
          description: A java time zone ID reference
          type: string
        daysOfWeek:
          items:
            $ref: '#/components/schemas/DayOfWeek'
          type: array
        year:
          format: int32
          type: integer
        month:
          format: int32
          maximum: 12
          minimum: 1
          type: integer
        day:
          format: int32
          maximum: 31
          minimum: 1
          type: integer
        reference:
          $ref: '#/components/schemas/TimeReference'
        offset:
          $ref: '#/components/schemas/Interval'
      required:
      - reference
      type: object
    RuleExecutionResponse:
      description: The result of a rule execution
      example:
        ruleId: ruleId
      properties:
        ruleId:
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
        result:
          $ref: '#/components/schemas/ExecutionResult'
      required:
      - result
      - ruleId
      type: object
    LocationAttribute:
      enum:
      - Mode
      - ArmState
      type: string
    DayOfWeek:
      enum:
      - Sun
      - Mon
      - Tue
      - Wed
      - Thu
      - Fri
      - Sat
      type: string
    TimeReference:
      enum:
      - Now
      - Midnight
      - Sunrise
      - Noon
      - Sunset
      type: string
    IntervalUnit:
      enum:
      - Second
      - Minute
      - Hour
      - Day
      - Week
      - Month
      - Year
      type: string
    Interval:
      example:
        value:
          date:
            month: 7
            year: 1
            timeZoneId: timeZoneId
            daysOfWeek:
            - null
            - null
            day: 17
          datetime:
            month: 8
            year: 2
            timeZoneId: timeZoneId
            daysOfWeek:
            - null
            - null
            day: 28
          boolean: true
          string: string
          array:
            operands:
            - null
            - null
          location:
            value: value
          integer: 6
          time:
            timeZoneId: timeZoneId
          decimal: 0.8008281904610115
          map: {}
          device:
            path: path
            component: component
            capability: capability
            devices:
            - devices
            - devices
            attribute: attribute
      properties:
        value:
          $ref: '#/components/schemas/Operand'
        unit:
          $ref: '#/components/schemas/IntervalUnit'
      required:
      - unit
      - value
      type: object
    SubscriptionMode:
      default: Auto
      enum:
      - Auto
      - Always
      - Never
      type: string
    OperandAggregationMode:
      default: None
      enum:
      - None
      - Avg
      - Sum
      - Min
      - Max
      - Least
      - Most
      type: string
    ConditionAggregationMode:
      default: Any
      enum:
      - Any
      - All
      type: string
    PagedRules:
      description: An array of rules
      example:
        _links:
          next:
            href: https://...
          previous:
            href: https://...
        items:
        - null
        - null
      properties:
        items:
          items:
            $ref: '#/components/schemas/Rule'
          type: array
        _links:
          $ref: '#/components/schemas/Links'
      type: object
    ParentType:
      description: The source of the rule
      enum:
      - Isa
      - User
      type: string
    ExecutionResult:
      enum:
      - Success
      - Failure
      type: string
    EventType:
      description: |
        The type of event passed to the app being executed. The type will be one of:
          * DEVICE_COMMANDS_EVENT - _Only applicable for cloud-to-cloud device integration apps._ An event as a result of a device command execution request.
          * DEVICE_EVENT - A device event as a result of a subscription the app created.
          * DEVICE_HEALTH_EVENT - A device health event as a result of a change in a device's health.
          * DEVICE_LIFECYCLE_EVENT - A device lifecycle event as the result of a life change to the device.
          * HUB_HEALTH_EVENT - A hub health event as a result of a change in a hub's health.
          * MODE_EVENT - A mode event is triggered when the location's mode is changed.
          * SCENE_LIFECYCLE_EVENT - A scene lifecycle event as a result of a life change to the scene.
          * SECURITY_ARM_STATE_EVENT - A security arm state event as a result of a change in the arm state of a security system.
          * TIMER_EVENT - An event as a result of a scheduled app execution.
      enum:
      - DEVICE_COMMANDS_EVENT
      - DEVICE_EVENT
      - DEVICE_HEALTH_EVENT
      - DEVICE_LIFECYCLE_EVENT
      - HUB_HEALTH_EVENT
      - MODE_EVENT
      - SCENE_LIFECYCLE_EVENT
      - SECURITY_ARM_STATE_EVENT
      - TIMER_EVENT
      - INSTALLED_APP_LIFECYCLE_EVENT
      type: string
    DeviceEvent:
      description: An event on a device that matched a subscription for this app.
      properties:
        eventId:
          description: The ID of the event.
          example: 736e3903-001c-4d40-b408-ff40d162a06b
          type: string
        locationId:
          description: The ID of the location in which the event was triggered.
          example: 499e28ba-b33b-49c9-a5a1-cce40e41f8a6
          type: string
        deviceId:
          description: The ID of the device associated with the DEVICE_EVENT.
          example: 6f5ea629-4c05-4a90-a244-cc129b0a80c3
          type: string
        componentId:
          description: The name of the component on the device that the event is associated
            with.
          example: main
          type: string
        capability:
          description: The name of the capability associated with the DEVICE_EVENT.
          example: motionSensor
          type: string
        attribute:
          description: The name of the DEVICE_EVENT. This typically corresponds to
            an attribute name of the device-handler’s capabilities.
          example: motion
          type: string
        value:
          description: |
            The value of the event. The type of the value is dependent on the capability's attribute type.
          example: active
          properties: {}
          type: object
        valueType:
          description: |
            The root level data type of the value field. The data types are representitive of standard JSON data types.
          example: number
          type: string
        stateChange:
          description: Whether or not the state of the device has changed as a result
            of the DEVICE_EVENT.
          type: boolean
        data:
          description: json map as defined by capability data schema
          properties: {}
          type: object
        subscriptionName:
          description: The name of subscription that caused delivery.
          example: motion_sensors
          type: string
      type: object
    ModeEvent:
      properties:
        eventId:
          description: The id of the event.
          type: string
        locationId:
          description: The id of the location in which the event was triggered.
          type: string
        modeId:
          description: The ID of the mode associated with a MODE_EVENT.
          type: string
      type: object
    TimerEvent:
      description: An event that is caused by a schedule for this app being fired.
      properties:
        eventId:
          description: The ID of the event.
          type: string
        name:
          description: The name of the schedule that caused this event.
          example: lights_off_timeout
          type: string
        type:
          $ref: '#/components/schemas/TimerType'
        time:
          description: The IS0-8601 date time strings in UTC that this event was scheduled
            for.
          format: date-time
          type: string
        expression:
          description: The CRON expression if the schedule was of type CRON.
          type: string
      type: object
    DeviceCommandsEvent:
      description: An event that contains commands for devices that were created by
        this app.
      properties:
        eventId:
          description: The id of the event.
          type: string
        deviceId:
          description: The guid of the device that the commands are for.
          type: string
        profileId:
          description: The device profile ID of the device instance.
          type: string
        externalId:
          description: The external ID that was set during install of a device.
          type: string
        commands:
          items:
            $ref: '#/components/schemas/DeviceCommandsEventCommand'
          type: array
      type: object
    TimerType:
      description: The type of TIMER_EVENT.
      enum:
      - CRON
      - ONCE
      type: string
    DeviceCommandsEventCommand:
      properties:
        componentId:
          example: main
          type: string
        capability:
          example: switch
          type: string
        command:
          example: "on"
          type: string
        arguments:
          example: []
          items:
            properties: {}
            type: object
          type: array
      type: object
    DeviceLifecycleEvent:
      description: A device lifecycle event.
      properties:
        lifecycle:
          $ref: '#/components/schemas/DeviceLifecycle'
        eventId:
          description: The id of the event.
          type: string
        locationId:
          description: The id of the location in which the event was triggered.
          type: string
        deviceId:
          description: The id of the device.
          type: string
        deviceName:
          description: The name of the device
          type: string
        principal:
          description: The principal that made the change
          type: string
        create:
          description: |
            Create device lifecycle.
          type: object
        delete:
          description: |
            Delete device lifecycle.
          type: object
        update:
          description: |
            Update device lifecycle.
          type: object
        moveFrom:
          $ref: '#/components/schemas/DeviceLifecycleMove'
        moveTo:
          $ref: '#/components/schemas/DeviceLifecycleMove'
      type: object
    SecurityArmStateEvent:
      description: |
        An event that represents a change in the arm state of a security system.
      properties:
        eventId:
          description: The id of the event.
          type: string
        locationId:
          description: The id of the location in which the event was triggered.
          type: string
        armState:
          description: |
            The arm state of a security system.
          enum:
          - UNKNOWN
          - ARMED_STAY
          - ARMED_AWAY
          - DISARMED
          type: string
        optionalArguments:
          additionalProperties:
            $ref: '#/components/schemas/SimpleValue'
          description: |
            A set of key / value pairs useful for passing any optional arguments.
          type: object
      type: object
    DeviceHealthEvent:
      description: An event that represents a change in the health of the a device.
      properties:
        eventId:
          description: The id of the event.
          type: string
        locationId:
          description: The id of the location in which the event was triggered.
          type: string
        deviceId:
          description: The id of the device.
          type: string
        hubId:
          description: The id of the hub.
          type: string
        status:
          description: |
            The status of the device.
          enum:
          - OFFLINE
          - ONLINE
          - UNHEALTHY
          type: string
        reason:
          description: |
            The reason the device is offline.
          enum:
          - NONE
          - SERVICE_UNAVAILABLE
          - HUB_OFFLINE
          - ZWAVE_OFFLINE
          - ZIGBEE_OFFLINE
          - BLUETOOTH_OFFLINE
          - HUB_DISCONNECTED
          type: string
      type: object
    HubHealthEvent:
      description: An event that represents a change in the health of a hub.
      properties:
        eventId:
          description: The id of the event.
          type: string
        locationId:
          description: The id of the location in which the event was triggered.
          type: string
        hubId:
          description: The id of the hub.
          type: string
        status:
          description: |
            The status of the hub.
          enum:
          - OFFLINE
          - ONLINE
          - ZWAVE_OFFLINE
          - ZWAVE_ONLINE
          - ZIGBEE_OFFLINE
          - ZIGBEE_ONLINE
          - BLUETOOTH_OFFLINE
          - BLUETOOTH_ONLINE
          type: string
        reason:
          description: |
            The reason the hub is offline.
          enum:
          - NONE
          - DISCONNECTED
          - INACTIVE
          type: string
      type: object
    SceneLifecycleEvent:
      description: A scene lifecycle event.
      properties:
        lifecycle:
          $ref: '#/components/schemas/SceneLifecycle'
        eventId:
          description: The id of the event.
          type: string
        locationId:
          description: The id of the location in which the event was triggered.
          type: string
        sceneId:
          description: The id of the scene.
          type: string
        create:
          description: |
            Create scene lifecycle.
          type: object
        update:
          description: |
            Update scene lifecycle.
          type: object
        delete:
          description: |
            Delete scene lifecycle.
          type: object
      type: object
    DeviceLifecycle:
      description: |
        The device lifecycle. The lifecycle will be one of:
        * CREATE - Invoked when a device is created.
        * DELETE - Invoked when a device is deleted.
        * UPDATE - Invoked when a device is updated.
        * MOVE_FROM - Invoked when a device is moved from a location.
        * MOVE_TO - Invoked when a device is moved to a location.
      enum:
      - CREATE
      - DELETE
      - UPDATE
      - MOVE_FROM
      - MOVE_TO
      type: string
    DeviceLifecycleCreate:
      description: |
        Create device lifecycle.
      type: object
    DeviceLifecycleDelete:
      description: |
        Delete device lifecycle.
      type: object
    DeviceLifecycleUpdate:
      description: |
        Update device lifecycle.
      type: object
    DeviceLifecycleMove:
      description: |
        Move device lifecycle.
      properties:
        locationId:
          type: string
      type: object
    SimpleValue:
      description: A simple value.
      properties:
        valueType:
          description: |
            The type of the value.
          enum:
          - NULL_VALUE
          - INT_VALUE
          - DOUBLE_VALUE
          - STRING_VALUE
          - BOOLEAN_VALUE
          type: string
        intValue:
          type: integer
        doubleValue:
          format: double
          type: number
        stringValue:
          type: string
        boolValue:
          type: boolean
      type: object
    SceneLifecycle:
      description: |
        The scene lifecycle. The lifecycle will be one of:
        * CREATE - Invoked when a scene is created.
        * UPDATE - Invoked when a scene is updated.
        * DELETE - Invoked when a scene is deleted.
      enum:
      - CREATE
      - UPDATE
      - DELETE
      type: string
    SceneLifecycleCreate:
      description: |
        Create scene lifecycle.
      type: object
    SceneLifecycleUpdate:
      description: |
        Update scene lifecycle.
      type: object
    SceneLifecycleDelete:
      description: |
        Delete scene lifecycle.
      type: object
    InstalledAppLifecycleEvent:
      description: An Installed App Lifecycle Event.
      properties:
        eventId:
          description: The id of the event.
          type: string
        locationId:
          description: The ID of the location in which the event was triggered.
          example: 499e28ba-b33b-49c9-a5a1-cce40e41f8a6
          type: string
        installedAppId:
          description: The ID of the installed application.
          example: 6f5ea629-4c05-4a90-a244-cc129b0a80c3
          type: string
        appId:
          description: The ID of the application.
          type: string
        lifecycle:
          $ref: '#/components/schemas/InstalledAppLifecycle'
        create:
          description: |
            Create installed app lifecycle.
          type: object
        install:
          description: |
            Install installed app lifecycle.
          type: object
        update:
          description: |
            Update installed app lifecycle.
          type: object
        delete:
          description: |
            Delete installed app lifecycle.
          type: object
        other:
          description: |
            Other installed app lifecycle.
          type: object
        error:
          $ref: '#/components/schemas/InstalledAppLifecycleError'
      type: object
    InstalledAppLifecycle:
      description: |
        The installed app lifecycle. The lifecycle will be one of:
        * CREATE - Invoked when an application is created.
        * INSTALL - Invoked when an application is installed.
        * UPDATE - Invoked when an application is updated.
        * DELETE - Invoked when an application is deleted.
        * OTHER -
      enum:
      - CREATE
      - INSTALL
      - UPDATE
      - DELETE
      - OTHER
      type: string
    InstalledAppLifecycleCreate:
      description: |
        Create installed app lifecycle.
      type: object
    InstalledAppLifecycleUpdate:
      description: |
        Update installed app lifecycle.
      type: object
    InstalledAppLifecycleDelete:
      description: |
        Delete installed app lifecycle.
      type: object
    InstalledAppLifecycleInstall:
      description: |
        Install installed app lifecycle.
      type: object
    InstalledAppLifecycleOther:
      description: |
        Other installed app lifecycle.
      type: object
    InstalledAppLifecycleError:
      properties:
        code:
          type: string
        message:
          type: string
        target:
          type: string
        details:
          items:
            $ref: '#/components/schemas/InstalledAppLifecycleError'
          type: array
      type: object
    DeviceInstallRequest_app:
      example:
        installedAppId: 6f5ea629-4c05-4a90-a244-cc129b0a80c3
        profileId: 6f5ea629-4c05-4a90-a244-cc129b0a80c3
        externalId: Th13390
      properties:
        profileId:
          description: The device profile Id
          example: 6f5ea629-4c05-4a90-a244-cc129b0a80c3
          type: string
        installedAppId:
          description: The ID of the installed application
          example: 6f5ea629-4c05-4a90-a244-cc129b0a80c3
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
        externalId:
          description: A field to store an ID from a system external to SmartThings.
          example: Th13390
          maxLength: 64
          type: string
      required:
      - installedAppId
      - profileId
    IrDeviceDetails_functionCodes:
      description: List of IR function codes
      example: '{"statelessPowerToggleButton.powerToggle":"power","statelessAudioMuteButton.muteToggle":"mute","statelessAudioVolumeButton.volumeUp":"volume_up","statelessAudioVolumeButton.volumeDown":"volume_down","statelessChannelButton.channelUp":"channel_up","statelessChannelButton.channelDown":"channel_down","statelessCustomButton.green":"green","statelessCustomButton.right":"right","statelessCustomButton.3":3,"statelessCustomButton.exit":"exit","statelessCustomButton.playback":"playback"}'
      properties:
        default:
          type: string
    UpdateDeviceRequest_components:
      example:
        id: main
        categories:
        - Light
      properties:
        id:
          example: main
          type: string
        categories:
          description: A case-sensitive string from the pre-defined list of valid
            categories [/devicecategories](#/operation/listCategories).
          items:
            example: Light
            type: string
          maxItems: 1
          minItems: 1
          type: array
      required:
      - categories
      - id
    InstalledApp_ui:
      description: |
        A collection of settings to drive user interface in SmartThings clients.  Currently, only applicable for
        LAMBDA_SMART_APP and WEBHOOK_SMART_APP app types.
      properties:
        pluginId:
          format: ^[a-zA-Z._]{1,99}$
          type: string
        pluginUri:
          format: uri
          type: string
        dashboardCardsEnabled:
          type: boolean
        preInstallDashboardCardsEnabled:
          type: boolean
      required:
      - dashboardCardsEnabled
      - preInstallDashboardCardsEnabled
    InstalledApp_iconImage:
      description: A default icon image for the app.
      example: '{"url":"https://smart-home-monitor.com/image"}'
      properties:
        url:
          description: |
            A default icon image url for an app. https url required.
          format: uri
          type: string
    CapabilityAttribute_enumCommands:
      properties:
        command:
          description: the command that sets this attribute to the associated value
          type: string
        value:
          description: the value that this command will set the attribute to
          type: string
    AttributeProperties_unit:
      properties:
        type:
          default: string
          enum:
          - string
          type: string
        enum:
          example:
          - mm
          - in
          items:
            type: string
          type: array
        default:
          example: mm
          type: string
    AttributeProperties_data:
      properties:
        type:
          default: object
          enum:
          - object
          type: string
        additionalProperties:
          default: false
          type: boolean
        required:
          items:
            type: string
          type: array
        properties:
          example:
            val:
              type: string
          properties: {}
          type: object
      required:
      - type
    Rule_allOf:
      properties:
        id:
          description: Unique id for the rule
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
      required:
      - id
    IfAction_allOf:
      properties:
        id:
          description: Unique id for the action
          format: ^(?:([0-9a-fA-F]{32})|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}))$
          type: string
        then:
          items:
            $ref: '#/components/schemas/Action'
          type: array
        else:
          items:
            $ref: '#/components/schemas/Action'
          type: array
        subscriptionMode:
          $ref: '#/components/schemas/SubscriptionMode'
  securitySchemes:
    Bearer:
      description: |
        SmartThings resources are protected with HTTP Bearer authentication and OAuth2 scopes.
      flows:
        implicit:
          authorizationUrl: https://auth-global.api.smartthings.com
          scopes:
            r:installedapps:*: |
              Read details about installed SmartApps, such as which devices have been configured for the installation. For SmartApp tokens, the scope is restricted to the location the SmartApp is installed into. For personal access tokens, the scope is limited to the account associated with the token.
            l:installedapps: |
              View a list of installed SmartApps. For SmartApp tokens, the scope is restricted to the location the SmartApp is installed into. For personal access tokens, the scope is limited to the account associated with the token.
            w:installedapps:*: |
              Create, update, or delete installed SmartApps. For SmartApp tokens, the scope is restricted to the location the SmartApp is installed into. For personal access tokens, the scope is limited to the account associated with the token.
            r:apps:*: |
              Read details about a SmartApp. Only applicable for personal access tokens, and the scope is limited to the SmartApps associated with the token's account.
            w:apps:*: |
              Create, update, or delete SmartApps. For SmartApp tokens, the scope is restricted to the location the SmartApp is installed into. For personal access tokens, the scope is limited to the account associated with the token.
            l:devices: |
              View a list of devices. For SmartApp tokens, the scope is restricted to the location the SmartApp is installed into. For personal access tokens, the scope is limited to the account associated with the token.
            r:devices:*: |
              Read details about a device, including device attribute state. For SmartApp tokens, the scope is restricted to the location the SmartApp is installed into. For personal access tokens, the scope is limited to the account associated with the token. This scope is required to create subscriptions.
            w:devices:*: |
              Update details such as the device name, or delete a device. For SmartApp tokens, the scope is restricted to the location the SmartApp is installed into. For personal access tokens, the scope is limited to the account associated with the token.
            x:devices:*: |
              Execute commands on a device. For SmartApp tokens, the scope is restricted to the location the SmartApp is installed into. For personal access tokens, the scope is limited to the account associated with the token.
            r:deviceprofiles: |
              View details of device profiles associated with the account. Only applicable for personal access tokens.
            w:deviceprofiles: |
              Create, update, or delete device profiles. Only applicable to personal access tokens, and the device profile must be owned by the same account associated with the token.
            i:deviceprofiles: Create devices of the type associated with the device
              profile. Only applicable for SmartApp tokens, and is requires the device
              profile and the SmartApp have the same account owner.
            r:scenes:*: |
              Read details about a scene. For personal access tokens, the scope is limited to the account associated with the token.
            x:scenes:*: |
              Execute a scene. For personal access tokens, the scope is limited to the account associated with the token.
            r:schedules: |
              Read details of scheduled executions. For SmartApp tokens, the scope is restricted to the installed SmartApp. For personal access tokens, the scope is limited to the account associated with the token.
            w:schedules: |
              Create, update, or delete schedules. For SmartApp tokens, the scope is restricted to the installed SmartApp. For personal access tokens, the scope is limited to the account associated with the token.
            l:locations: |
              View a list of locations. Only applicable for personal access tokens, and the scope is limited to the account associated with the token.
            r:locations:*: |
              Read details of a location, such as geocoordinates and temperature scale. For SmartApp tokens, the scope is restricted to the installed SmartApp. For personal access tokens, the scope is limited to the account associated with the token.
            w:locations:*: |
              Create, update, and delete locations. Only applicable for personal access tokens (the scope is limited to the account associated with the token).
            r:hubs: Read hubs.
            r:security:locations:*:armstate: Read arm state in the given location.
      type: oauth2
    Basic:
      scheme: basic
      type: http
